<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on SPERIXLABS</title>
        <link>https://sperixlabs.org/posts/</link>
        <description>Recent content in Posts on SPERIXLABS</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>SPERIXLABS</copyright>
        <lastBuildDate>Mon, 08 Sep 2025 21:46:53 +0000</lastBuildDate>
        <atom:link href="https://sperixlabs.org/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Identifying Packages Used by Flutter Apps</title>
            <link>https://sperixlabs.org/post/2025/09/identifying-packages-used-by-flutter-apps/</link>
            <pubDate>Mon, 08 Sep 2025 21:46:53 +0000</pubDate>
            
            <guid>https://sperixlabs.org/post/2025/09/identifying-packages-used-by-flutter-apps/</guid>
            <description>&lt;p&gt;Sometimes it&amp;rsquo;s useful to determine what Flutter packages are used in a Flutter app. This can be useful for security audits, vulnerability assessments, or just to understand the app better.&lt;/p&gt;
&lt;h2 id=&#34;technique&#34;&gt;Technique&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;For android apps, extract or export the &lt;code&gt;libapp.so&lt;/code&gt; file from the APK file. This file is usually located in the &lt;code&gt;lib/&amp;lt;architecture&amp;gt;/&lt;/code&gt; directory inside the APK or IPA file. For iOS, you can find an equivalent binary file in the &lt;code&gt;Frameworks/App.framework/App&lt;/code&gt; inside the extracted IPA file.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Sometimes it&rsquo;s useful to determine what Flutter packages are used in a Flutter app. This can be useful for security audits, vulnerability assessments, or just to understand the app better.</p>
<h2 id="technique">Technique</h2>
<ol>
<li>
<p>For android apps, extract or export the <code>libapp.so</code> file from the APK file. This file is usually located in the <code>lib/&lt;architecture&gt;/</code> directory inside the APK or IPA file. For iOS, you can find an equivalent binary file in the <code>Frameworks/App.framework/App</code> inside the extracted IPA file.</p>
</li>
<li>
<p>Use the <code>strings</code> command to extract the package names from the <code>libapp.so</code> or <code>App</code> binary file. This command will search for strings that contain the word <code>package:</code> which is usually followed by the package name.</p>
</li>
</ol>
<p>Android:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>strings -a libapp.so | grep <span style="color:#e6db74">&#39;package:&#39;</span>
</span></span></code></pre></div><p>iOS:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>strings -a App | grep <span style="color:#e6db74">&#39;package:&#39;</span>
</span></span></code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Analyzing a Weird Behavior in a Tenda AX3000 WiFi6 Mesh Router</title>
            <link>https://sperixlabs.org/post/2025/09/analyzing-a-weird-behavior-in-a-tenda-ax3000-wifi6-mesh-router/</link>
            <pubDate>Sun, 07 Sep 2025 21:26:53 +0000</pubDate>
            
            <guid>https://sperixlabs.org/post/2025/09/analyzing-a-weird-behavior-in-a-tenda-ax3000-wifi6-mesh-router/</guid>
            <description>&lt;p&gt;I recently purchased a Tenda AX3000 WiFi6 Mesh Router from &lt;a href=&#34;https://www.aliexpress.com/item/1005006332758836.html&#34;&gt;AliExpress&lt;/a&gt;. The setup was quite straightforward and it works well. However, I was tempted to figure out what the device might be doing on my network and I encountered something very strange. Let&amp;rsquo;s take a look at the device and its behavior.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;the-device&#34;&gt;The Device&lt;/h2&gt;
&lt;p&gt;The device consisted of 3 nodes; one as the main router and two as mesh nodes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://sperixlabs.org/img/tenda-ax3000/device.jpeg&#34; alt=&#34;Tenda AX3000&#34;&gt;&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>I recently purchased a Tenda AX3000 WiFi6 Mesh Router from <a href="https://www.aliexpress.com/item/1005006332758836.html">AliExpress</a>. The setup was quite straightforward and it works well. However, I was tempted to figure out what the device might be doing on my network and I encountered something very strange. Let&rsquo;s take a look at the device and its behavior.</p>
<hr>
<h2 id="the-device">The Device</h2>
<p>The device consisted of 3 nodes; one as the main router and two as mesh nodes.</p>
<p><img src="/img/tenda-ax3000/device.jpeg" alt="Tenda AX3000"></p>
<p>The main router is connected to the internet and the two mesh nodes are connected to the main router via WiFi6. The device has a web interface that allows you to configure it, and also a mobile app (Android/iOS) that can be used to manage the device.</p>
<h2 id="network-analysis">Network Analysis</h2>
<p>I did an nmap scan of the device and found that it had the following open ports:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span>PORT      STATE SERVICE         VERSION
</span></span><span style="display:flex;"><span>23/tcp    open  tcpwrapped
</span></span><span style="display:flex;"><span>80/tcp    open  http
</span></span><span style="display:flex;"><span>443/tcp   open  ssl/https
</span></span><span style="display:flex;"><span>8888/tcp  open  sun-answerbook?
</span></span><span style="display:flex;"><span>9000/tcp  open  cslistener?
</span></span><span style="display:flex;"><span>10004/tcp open  emcrmirccd?
</span></span><span style="display:flex;"><span>49152/tcp open  upnp
</span></span></code></pre></div><p>Then I moved to analyzing the egress traffic from the device. I realized a network request was being made almost every 7 seconds to the domain: <code>mac.cloud.tenda.com.cn</code>. This domain was being resolved to the IP address <code>116.62.171.30</code> which is managed by Aliyun Computing Co., Ltd. in China.</p>
<p>The request payload contained the first 3 bytes of the MAC addresses of the devices on the network which is the OUI (Organizationally Unique Identifier) that identifies the manufacturer of the device. This request payload was being sent in plaintext over HTTP to that domain.</p>
<p><img src="/img/tenda-ax3000/logs.png" alt="Network Logs">
<img src="/img/tenda-ax3000/logs2.png" alt="Network Logs"></p>
<p>Quite weird why a router will be sending this information to a remote server every 7 seconds 🤔.</p>
<h2 id="remediation">Remediation</h2>
<p>I tried blocking the domain <code>mac.cloud.tenda.com.cn</code> on my firewall but I realized the device throughput dropped significantly. Quite weird. I then decided to setup a local DNS server that would resolve the domain to an internal IP on my network. I used <code>dnsmasq</code> for this purpose. I configured <code>dnsmasq</code> to resolve the domain <code>mac.cloud.tenda.com.cn</code> to the local IP address of my DNS server. That didn&rsquo;t solve the throughput issue.</p>
<p>I had to reverse engineer the backend REST API of the domain to replicate the expected response on my local DNS server. Since the request was being sent in plain text over HTTP, I was able to figure out the request and response and replicated that on my local DNS server using python.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e">#!/usr/bin/env python3</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> fastapi <span style="color:#f92672">import</span> FastAPI
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> fastapi.middleware.cors <span style="color:#f92672">import</span> CORSMiddleware
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> models <span style="color:#f92672">import</span> DeviceMac
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>app <span style="color:#f92672">=</span> FastAPI()
</span></span><span style="display:flex;"><span>app<span style="color:#f92672">.</span>add_middleware(
</span></span><span style="display:flex;"><span>    CORSMiddleware,
</span></span><span style="display:flex;"><span>    allow_origins<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#34;*&#34;</span>],
</span></span><span style="display:flex;"><span>    allow_credentials<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>,
</span></span><span style="display:flex;"><span>    allow_methods<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#34;*&#34;</span>],
</span></span><span style="display:flex;"><span>    allow_headers<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#34;*&#34;</span>],
</span></span><span style="display:flex;"><span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app.post</span>(<span style="color:#e6db74">&#34;/route/mac_vendor/v1&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">mac_vendor</span>(mac_addresses: DeviceMac):
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;&#34;&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">    Get the MAC vendor information.
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">    &#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> {<span style="color:#e6db74">&#34;error&#34;</span>: <span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#34;resp&#34;</span>: {<span style="color:#e6db74">&#34;mac_list&#34;</span>: {}, <span style="color:#e6db74">&#34;interval&#34;</span>: <span style="color:#ae81ff">1135296000</span>}}
</span></span></code></pre></div><p>In the end, I was able to replicate the expected response and the device throughput was back to normal without forwarding any information to the external domain.</p>
<p><img src="/img/tenda-ax3000/nginx_logs.png" alt="Nginx Logs"></p>
<p><strong>Repository</strong>: <a href="https://github.com/jayluxferro/tenda-ax3000-analysis">https://github.com/jayluxferro/tenda-ax3000-analysis</a></p>
]]></content>
        </item>
        
        <item>
            <title>Intercepting HTTP traffic in Android Flutter Apps</title>
            <link>https://sperixlabs.org/post/2024/11/intercepting-http-traffic-in-android-flutter-apps/</link>
            <pubDate>Sat, 02 Nov 2024 09:36:53 +0000</pubDate>
            
            <guid>https://sperixlabs.org/post/2024/11/intercepting-http-traffic-in-android-flutter-apps/</guid>
            <description>&lt;p&gt;Intercepting HTTP traffic in Flutter apps has attracted significant interest among security researchers. Tools like &lt;a href=&#34;https://github.com/Impact-I/reFlutter&#34;&gt;reflutter&lt;/a&gt; have simplified this process. However, these tools often rely on hard-coded HTTP ports, which can limit flexibility in some cases.&lt;/p&gt;
&lt;p&gt;This guide outlines a straightforward approach for analyzing Android Flutter apps without the need to rely on specific, fixed ports.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;required-tools&#34;&gt;Required Tools&lt;/h2&gt;
&lt;p&gt;To intercept HTTP traffic in Flutter apps, you will need the following tools:&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Intercepting HTTP traffic in Flutter apps has attracted significant interest among security researchers. Tools like <a href="https://github.com/Impact-I/reFlutter">reflutter</a> have simplified this process. However, these tools often rely on hard-coded HTTP ports, which can limit flexibility in some cases.</p>
<p>This guide outlines a straightforward approach for analyzing Android Flutter apps without the need to rely on specific, fixed ports.</p>
<hr>
<h2 id="required-tools">Required Tools</h2>
<p>To intercept HTTP traffic in Flutter apps, you will need the following tools:</p>
<ul>
<li><a href="https://frida.re">Frida</a>: A dynamic instrumentation toolkit for developers, reverse-engineers, and security researchers.</li>
<li><a href="https://github.com/SPERIXLABS/frida-apk-patcher">Frida APK Patcher</a>: A tool to patch APKs for Frida compatibility.</li>
<li><a href="https://github.com/jayluxferro/ProxyMe">ProxyMe</a>: A proxy tool for easier traffic routing.</li>
<li><a href="https://portswigger.net/burp/releases">Burp Suite</a>: A powerful tool for web application security testing.</li>
</ul>
<hr>
<h2 id="steps-to-intercept-traffic">Steps to Intercept Traffic</h2>
<ol>
<li>
<p><strong>Patch the APK with Frida APK Patcher</strong></p>
<ul>
<li>Use <code>frida-apk-patcher</code> to modify the APK, allowing Frida instrumentation.</li>
</ul>
</li>
<li>
<p><strong>Set Up Burp Suite Proxy</strong></p>
<ul>
<li>Configure Burp Suite to act as the proxy for HTTP and HTTPS traffic.</li>
</ul>
</li>
<li>
<p><strong>Install and Set Up ProxyMe</strong></p>
<ul>
<li>ProxyMe facilitates the routing of app traffic through Burp Suite.</li>
<li>Refer to the <a href="https://github.com/jayluxferro/ProxyMe">ProxyMe documentation</a> for installation instructions.</li>
</ul>
</li>
<li>
<p><strong>Intercept Traffic</strong></p>
<ul>
<li>Use the frida script (<a href="https://github.com/NVISOsecurity/disable-flutter-tls-verification">https://github.com/NVISOsecurity/disable-flutter-tls-verification</a>) to disable the TLS verification in the Flutter App.</li>
</ul>
</li>
</ol>
<pre tabindex="0"><code>frida -U Gadget -l disable-flutter-tls.js
</code></pre><ul>
<li>Launch BurpSuite and set up the proxy listener on the desired port.</li>
<li>Open the app on the Android device and observe the HTTP traffic in Burp Suite.</li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Frida APK Patcher</title>
            <link>https://sperixlabs.org/post/2024/08/frida-apk-patcher/</link>
            <pubDate>Fri, 16 Aug 2024 09:36:53 +0000</pubDate>
            
            <guid>https://sperixlabs.org/post/2024/08/frida-apk-patcher/</guid>
            <description>&lt;p&gt;This tool allows you to patch APK files for Frida instrumentation using the Frida gadget. It injects the required libraries and smali code into the APK, re-signs it, and ensures the APK is ready to use with Frida for reverse engineering or penetration testing.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Disassembles APK files using &lt;code&gt;apktool&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Adds &lt;code&gt;INTERNET&lt;/code&gt; permission and custom &lt;code&gt;network_security_config.xml&lt;/code&gt; if not already present&lt;/li&gt;
&lt;li&gt;Injects Frida gadget libraries into the APK&lt;/li&gt;
&lt;li&gt;Modifies the APK&amp;rsquo;s smali code to load the Frida gadget&lt;/li&gt;
&lt;li&gt;Rebuilds, aligns, and signs the APK for use&lt;/li&gt;
&lt;li&gt;Compatible with Android versions that support APK Signature Schemes v1 and v2&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Before using this tool, ensure the following tools are installed on your system:&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>This tool allows you to patch APK files for Frida instrumentation using the Frida gadget. It injects the required libraries and smali code into the APK, re-signs it, and ensures the APK is ready to use with Frida for reverse engineering or penetration testing.</p>
<hr>
<h2 id="features">Features</h2>
<ul>
<li>Disassembles APK files using <code>apktool</code></li>
<li>Adds <code>INTERNET</code> permission and custom <code>network_security_config.xml</code> if not already present</li>
<li>Injects Frida gadget libraries into the APK</li>
<li>Modifies the APK&rsquo;s smali code to load the Frida gadget</li>
<li>Rebuilds, aligns, and signs the APK for use</li>
<li>Compatible with Android versions that support APK Signature Schemes v1 and v2</li>
</ul>
<h2 id="prerequisites">Prerequisites</h2>
<p>Before using this tool, ensure the following tools are installed on your system:</p>
<ul>
<li><code>aapt</code> (Android Asset Packaging Tool)</li>
<li><code>apktool</code></li>
<li><code>zipalign</code></li>
<li><code>apksigner</code></li>
<li>Python 3.x</li>
<li>Java Development Kit (JDK) for APK signing</li>
</ul>
<h2 id="usage">Usage</h2>
<h3 id="step-1-clone-the-repository">Step 1: Clone the Repository</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git clone https://github.com/sperixlabs/frida-apk-patcher.git
</span></span><span style="display:flex;"><span>cd frida-apk-patcher
</span></span></code></pre></div><h3 id="step-2-prepare-your-apk">Step 2: Prepare Your APK</h3>
<p>Place the APK you want to patch in a known directory. Note the absolute path to the APK, as it will be needed during execution.</p>
<h3 id="step-3-download-frida-gadget">Step 3: Download Frida Gadget</h3>
<p>Run <code>getlibs.sh</code> to fetch the latest Frida Gadgets</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>bash getlibs.sh
</span></span></code></pre></div><h3 id="step-4-run-the-tool">Step 4: Run the Tool</h3>
<p>Run the script with the path to the APK you want to patch. Here&rsquo;s the command:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>python apk_builder.py --apk /path/to/your.apk
</span></span></code></pre></div><h3 id="example">Example</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>python apk_builder.py --apk /home/user/downloads/sample.apk
</span></span></code></pre></div><h3 id="step-5-patched-apk-output">Step 5: Patched APK Output</h3>
<p>After the tool finishes running, it will output the patched APK file as <code>your-apk-appmon.apk</code> in the same directory where the original APK was located.</p>
<h3 id="options">Options</h3>
<ul>
<li><code>--apk</code>: Absolute path to the APK you want to patch.</li>
</ul>
<h3 id="output-files">Output Files</h3>
<ul>
<li>The patched APK file will be created in the current working directory as <code>app_name-appmon.apk</code>.</li>
</ul>
<h2 id="usage-1">Usage</h2>
<ul>
<li>Over USB</li>
</ul>
<pre tabindex="0"><code>frida -U Gadget -l [frida_script]
</code></pre><ul>
<li>Specific Device</li>
</ul>
<pre tabindex="0"><code>frida Gadget -l [frida_script] -D [device_name]
</code></pre>]]></content>
        </item>
        
        <item>
            <title>Analyzing KD Live Memory Dump with Volatility</title>
            <link>https://sperixlabs.org/post/2024/05/analyzing-kd-live-memory-dump-with-volatility/</link>
            <pubDate>Wed, 01 May 2024 09:36:53 +0000</pubDate>
            
            <guid>https://sperixlabs.org/post/2024/05/analyzing-kd-live-memory-dump-with-volatility/</guid>
            <description>&lt;h3 id=&#34;step-1-identify-the-memory-image&#34;&gt;Step 1: Identify the Memory Image&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;NB&lt;/strong&gt;: Volatility version 2&lt;/p&gt;
&lt;p&gt;Ensure you have the memory dump file ready, potentially in a raw format or the specific format used by the capture tool.&lt;/p&gt;
&lt;h3 id=&#34;step-2-determine-the-profile&#34;&gt;Step 2: Determine the Profile&lt;/h3&gt;
&lt;p&gt;Use the following command to identify the appropriate profile for the memory dump:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;volatility -f &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;dumpfile&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; imageinfo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command helps in suggesting the most likely profile(s) based on the memory dump.&lt;/p&gt;
&lt;h3 id=&#34;step-3-basic-commands-for-analysis&#34;&gt;Step 3: Basic Commands for Analysis&lt;/h3&gt;
&lt;p&gt;Once the profile is identified, utilize the following commands to begin your analysis:&lt;/p&gt;</description>
            <content type="html"><![CDATA[<h3 id="step-1-identify-the-memory-image">Step 1: Identify the Memory Image</h3>
<p><strong>NB</strong>: Volatility version 2</p>
<p>Ensure you have the memory dump file ready, potentially in a raw format or the specific format used by the capture tool.</p>
<h3 id="step-2-determine-the-profile">Step 2: Determine the Profile</h3>
<p>Use the following command to identify the appropriate profile for the memory dump:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>volatility -f <span style="color:#f92672">[</span>dumpfile<span style="color:#f92672">]</span> imageinfo
</span></span></code></pre></div><p>This command helps in suggesting the most likely profile(s) based on the memory dump.</p>
<h3 id="step-3-basic-commands-for-analysis">Step 3: Basic Commands for Analysis</h3>
<p>Once the profile is identified, utilize the following commands to begin your analysis:</p>
<ul>
<li>
<p><strong>List Running Processes</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>volatility -f <span style="color:#f92672">[</span>dumpfile<span style="color:#f92672">]</span> --profile<span style="color:#f92672">=[</span>profile<span style="color:#f92672">]</span> pslist
</span></span></code></pre></div></li>
<li>
<p><strong>Check Active Network Connections</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>volatility -f <span style="color:#f92672">[</span>dumpfile<span style="color:#f92672">]</span> --profile<span style="color:#f92672">=[</span>profile<span style="color:#f92672">]</span> netscan
</span></span></code></pre></div></li>
<li>
<p><strong>View Open Files</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>volatility -f <span style="color:#f92672">[</span>dumpfile<span style="color:#f92672">]</span> --profile<span style="color:#f92672">=[</span>profile<span style="color:#f92672">]</span> filescan
</span></span></code></pre></div></li>
<li>
<p><strong>Dump Process Memory</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>volatility -f <span style="color:#f92672">[</span>dumpfile<span style="color:#f92672">]</span> --profile<span style="color:#f92672">=[</span>profile<span style="color:#f92672">]</span> memdump -p <span style="color:#f92672">[</span>pid<span style="color:#f92672">]</span> -D <span style="color:#f92672">[</span>output_directory<span style="color:#f92672">]</span>
</span></span></code></pre></div></li>
<li>
<p><strong>Extract Registry Keys</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>volatility -f <span style="color:#f92672">[</span>dumpfile<span style="color:#f92672">]</span> --profile<span style="color:#f92672">=[</span>profile<span style="color:#f92672">]</span> printkey -K <span style="color:#e6db74">&#34;Software\Microsoft\Windows\CurrentVersion\Run&#34;</span>
</span></span></code></pre></div></li>
</ul>
<h3 id="step-4-advanced-analysis">Step 4: Advanced Analysis</h3>
<p>For more detailed investigation, consider these commands:</p>
<ul>
<li>
<p><strong>Check for Hidden Processes</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>volatility -f <span style="color:#f92672">[</span>dumpfile<span style="color:#f92672">]</span> --profile<span style="color:#f92672">=[</span>profile<span style="color:#f92672">]</span> psxview
</span></span></code></pre></div></li>
<li>
<p><strong>Analyze Loaded DLLs</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>volatility -f <span style="color:#f92672">[</span>dumpfile<span style="color:#f92672">]</span> --profile<span style="color:#f92672">=[</span>profile<span style="color:#f92672">]</span> dlllist -p <span style="color:#f92672">[</span>pid<span style="color:#f92672">]</span>
</span></span></code></pre></div></li>
<li>
<p><strong>Search for Rootkits</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>volatility -f <span style="color:#f92672">[</span>dumpfile<span style="color:#f92672">]</span> --profile<span style="color:#f92672">=[</span>profile<span style="color:#f92672">]</span> malfind
</span></span></code></pre></div></li>
</ul>
<h3 id="step-5-extract-artifacts">Step 5: Extract Artifacts</h3>
<p>Extract various artifacts for forensic analysis:</p>
<ul>
<li>
<p><strong>Dump Registry for Offline Analysis</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>volatility -f <span style="color:#f92672">[</span>dumpfile<span style="color:#f92672">]</span> --profile<span style="color:#f92672">=[</span>profile<span style="color:#f92672">]</span> hivelist
</span></span><span style="display:flex;"><span>volatility -f <span style="color:#f92672">[</span>dumpfile<span style="color:#f92672">]</span> --profile<span style="color:#f92672">=[</span>profile<span style="color:#f92672">]</span> dumpregistry -H <span style="color:#f92672">[</span>hive_address<span style="color:#f92672">]</span> -D <span style="color:#f92672">[</span>output_directory<span style="color:#f92672">]</span>
</span></span></code></pre></div></li>
<li>
<p><strong>Recover Passwords</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>volatility -f <span style="color:#f92672">[</span>dumpfile<span style="color:#f92672">]</span> --profile<span style="color:#f92672">=[</span>profile<span style="color:#f92672">]</span> hashdump
</span></span></code></pre></div></li>
</ul>
<p>Replace <code>[dumpfile]</code>, <code>[profile]</code>, <code>[pid]</code>, <code>[hive_address]</code>, and <code>[output_directory]</code> with the actual details specific to your case.</p>
]]></content>
        </item>
        
        <item>
            <title>Obscurity is not Security: A Case Study of a Cross-Platform Mobile Application</title>
            <link>https://sperixlabs.org/post/2022/10/obscurity-is-not-security-a-case-study-of-a-cross-platform-mobile-application/</link>
            <pubDate>Sun, 09 Oct 2022 00:00:00 +0000</pubDate>
            
            <guid>https://sperixlabs.org/post/2022/10/obscurity-is-not-security-a-case-study-of-a-cross-platform-mobile-application/</guid>
            <description>&lt;p&gt;This research presents a security analysis on a cross-platform mobile application. The &lt;strong&gt;My Vodafone (Ghana)&lt;/strong&gt; application formed the basis for the analysis; detailing both static and dynamic analysis.&lt;/p&gt;
&lt;h3 id=&#34;technical-details&#34;&gt;Technical Details&lt;/h3&gt;
&lt;p&gt;The platform for the analysis was iOS. Details are below:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Title: My Vodafone (Ghana)
Version: 4.3.0
Bundle URL: com.vodafone.gh.myvodafone.app
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;directory-structure&#34;&gt;Directory Structure&lt;/h4&gt;
&lt;p&gt;A decrypted and decompressed ipa file shows the following contents:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── AccessibilityResources.bundle
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── Info.plist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── en.lproj
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│       └── Localizable.strings
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── AirshipAutomationResources.bundle
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── AirshipConfig.plist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── AirshipCoreResources.bundle
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── AirshipExtendedActionsResources.bundle
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── AirshipMessageCenterResources.bundle
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── Foundation.ttf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── Frameworks
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── NetPerformSDK.framework
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── SecLibRNFramework.framework
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── TealiumIOS.framework
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── TealiumIOSLifecycle.framework
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── GoogleMaps.bundle
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── GoogleService-Info.plist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── Info.plist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── Ionicons.ttf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── LaunchScreen.storyboardc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── MaterialCommunityIcons.ttf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── MaterialIcons.ttf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── Octicons.ttf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── PkgInfo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── SC_Info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── SimpleLineIcons.ttf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── Vodafone Rg Bold.ttf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── VodafoneLt.ttf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── VodafoneRg.ttf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── Zocial.ttf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── _CodeSignature
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── CodeResources
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── assets
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── App
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   ├── ExternalComponents
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   ├── Images
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── device-names.json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── main.jsbundle
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── myvodafoneapp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The &lt;strong&gt;Info.plist&lt;/strong&gt; file contents a summary of the information related to the application.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>This research presents a security analysis on a cross-platform mobile application. The <strong>My Vodafone (Ghana)</strong> application formed the basis for the analysis; detailing both static and dynamic analysis.</p>
<h3 id="technical-details">Technical Details</h3>
<p>The platform for the analysis was iOS. Details are below:</p>
<pre tabindex="0"><code>Title: My Vodafone (Ghana)
Version: 4.3.0
Bundle URL: com.vodafone.gh.myvodafone.app
</code></pre><h4 id="directory-structure">Directory Structure</h4>
<p>A decrypted and decompressed ipa file shows the following contents:</p>
<!-- raw HTML omitted -->
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>.
</span></span><span style="display:flex;"><span>├── AccessibilityResources.bundle
</span></span><span style="display:flex;"><span>│   ├── Info.plist
</span></span><span style="display:flex;"><span>│   └── en.lproj
</span></span><span style="display:flex;"><span>│       └── Localizable.strings
</span></span><span style="display:flex;"><span>├── AirshipAutomationResources.bundle
</span></span><span style="display:flex;"><span>├── AirshipConfig.plist
</span></span><span style="display:flex;"><span>├── AirshipCoreResources.bundle
</span></span><span style="display:flex;"><span>├── AirshipExtendedActionsResources.bundle
</span></span><span style="display:flex;"><span>├── AirshipMessageCenterResources.bundle
</span></span><span style="display:flex;"><span>├── Foundation.ttf
</span></span><span style="display:flex;"><span>├── Frameworks
</span></span><span style="display:flex;"><span>│   ├── NetPerformSDK.framework
</span></span><span style="display:flex;"><span>│   ├── SecLibRNFramework.framework
</span></span><span style="display:flex;"><span>│   ├── TealiumIOS.framework
</span></span><span style="display:flex;"><span>│   └── TealiumIOSLifecycle.framework
</span></span><span style="display:flex;"><span>├── GoogleMaps.bundle
</span></span><span style="display:flex;"><span>├── GoogleService-Info.plist
</span></span><span style="display:flex;"><span>├── Info.plist
</span></span><span style="display:flex;"><span>├── Ionicons.ttf
</span></span><span style="display:flex;"><span>├── LaunchScreen.storyboardc
</span></span><span style="display:flex;"><span>├── MaterialCommunityIcons.ttf
</span></span><span style="display:flex;"><span>├── MaterialIcons.ttf
</span></span><span style="display:flex;"><span>├── Octicons.ttf
</span></span><span style="display:flex;"><span>├── PkgInfo
</span></span><span style="display:flex;"><span>├── SC_Info
</span></span><span style="display:flex;"><span>├── SimpleLineIcons.ttf
</span></span><span style="display:flex;"><span>├── Vodafone Rg Bold.ttf
</span></span><span style="display:flex;"><span>├── VodafoneLt.ttf
</span></span><span style="display:flex;"><span>├── VodafoneRg.ttf
</span></span><span style="display:flex;"><span>├── Zocial.ttf
</span></span><span style="display:flex;"><span>├── _CodeSignature
</span></span><span style="display:flex;"><span>│   └── CodeResources
</span></span><span style="display:flex;"><span>├── assets
</span></span><span style="display:flex;"><span>│   ├── App
</span></span><span style="display:flex;"><span>│   │   ├── ExternalComponents
</span></span><span style="display:flex;"><span>│   │   ├── Images
</span></span><span style="display:flex;"><span>├── device-names.json
</span></span><span style="display:flex;"><span>├── main.jsbundle
</span></span><span style="display:flex;"><span>└── myvodafoneapp
</span></span></code></pre></div><!-- raw HTML omitted -->
<p>The <strong>Info.plist</strong> file contents a summary of the information related to the application.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>	MinimumOSVersion: 13.0
</span></span><span style="display:flex;"><span>	NSAppTransportSecurity:
</span></span><span style="display:flex;"><span>    	NSExceptionDomains:
</span></span><span style="display:flex;"><span>        	localhost:
</span></span><span style="display:flex;"><span>            	NSExceptionAllowsInsecureHTTPLoads:  true
</span></span><span style="display:flex;"><span>        	New Exception Domain:
</span></span><span style="display:flex;"><span>            	NSExceptionAllowsInsecureHTTPLoads:  true
</span></span><span style="display:flex;"><span>            	NSIncludesSubdomains:  true
</span></span><span style="display:flex;"><span>        	NSAllowsArbitraryLoads:  true
</span></span><span style="display:flex;"><span>        	DTXcodeBuild: 13F17a
</span></span><span style="display:flex;"><span>        	firebase_json_raw: eyJhbmRyb2lkX3Rhc2tfZXhlY3V0b3JfbWF4aW11bV9wb29sX3NpemUiOiAxMCwgImFuZHJvaWRfdGFza19leGVjdXRvcl9rZWVwX2FsaXZlX3NlY29uZHMiOiAzfQ<span style="color:#f92672">==</span>
</span></span><span style="display:flex;"><span>            	UISupportedDevices<span style="color:#f92672">[</span>0<span style="color:#f92672">]</span>: iPhone10,1
</span></span><span style="display:flex;"><span>    	UISupportedDevices<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: iPhone10,4
</span></span><span style="display:flex;"><span>    	UISupportedDevices<span style="color:#f92672">[</span>2<span style="color:#f92672">]</span>: iPhone12,8
</span></span><span style="display:flex;"><span>    	UISupportedDevices<span style="color:#f92672">[</span>3<span style="color:#f92672">]</span>: iPhone9,1
</span></span><span style="display:flex;"><span>    	UISupportedDevices<span style="color:#f92672">[</span>4<span style="color:#f92672">]</span>: iPhone9,3
</span></span><span style="display:flex;"><span>        	DTAppStoreToolsBuild: 13F100
</span></span><span style="display:flex;"><span>        	CFBundleName: myvodafoneapp
</span></span><span style="display:flex;"><span>            	CFBundleSupportedPlatforms<span style="color:#f92672">[</span>0<span style="color:#f92672">]</span>: iPhoneOS
</span></span><span style="display:flex;"><span>        	CFBundleDisplayName: My Vodafone
</span></span><span style="display:flex;"><span>        	ITSDRMScheme: v2
</span></span><span style="display:flex;"><span>        	DTPlatformBuild: 19F64
</span></span><span style="display:flex;"><span>        	CFBundleSignature: ????
</span></span><span style="display:flex;"><span>        	DTXcode: <span style="color:#ae81ff">1340</span>
</span></span><span style="display:flex;"><span>        	CFBundleVersion: <span style="color:#ae81ff">82</span>
</span></span><span style="display:flex;"><span>        	DTSDKName: iphoneos15.5
</span></span><span style="display:flex;"><span>            	UIDeviceFamily<span style="color:#f92672">[</span>0<span style="color:#f92672">]</span>: <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>    	UIDeviceFamily<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: <span style="color:#ae81ff">2</span>
</span></span><span style="display:flex;"><span>            	UIBackgroundModes<span style="color:#f92672">[</span>0<span style="color:#f92672">]</span>: remote-notification
</span></span><span style="display:flex;"><span>        	UIFileSharingEnabled:  true
</span></span><span style="display:flex;"><span>        	CFBundleIcons:
</span></span><span style="display:flex;"><span>            	CFBundlePrimaryIcon:
</span></span><span style="display:flex;"><span>                	CFBundleIconName: AppIcon
</span></span><span style="display:flex;"><span>                        	CFBundleIconFiles<span style="color:#f92672">[</span>0<span style="color:#f92672">]</span>: AppIcon60x60
</span></span><span style="display:flex;"><span>            	DTPlatformName: iphoneos
</span></span><span style="display:flex;"><span>            	CFBundleDevelopmentRegion: en
</span></span><span style="display:flex;"><span>            	NSLocationWhenInUseUsageDescription: To show you Vodafone retail shops and other important information based on your location
</span></span><span style="display:flex;"><span>                  	FirebaseDynamicLinksCustomDomains<span style="color:#f92672">[</span>0<span style="color:#f92672">]</span>: https://vodafone.com.gh/home
</span></span><span style="display:flex;"><span>            	NSLocationAlwaysAndWhenInUseUsageDescription: My Vodafone would like to access your location
</span></span><span style="display:flex;"><span>                  	CFBundleURLTypes<span style="color:#f92672">[</span>0<span style="color:#f92672">]</span>:
</span></span><span style="display:flex;"><span>                        	CFBundleURLSchemes<span style="color:#f92672">[</span>0<span style="color:#f92672">]</span>: mva
</span></span><span style="display:flex;"><span>                	CFBundleTypeRole: Editor
</span></span><span style="display:flex;"><span>                	CFBundleURLName: myvodafoneapp
</span></span><span style="display:flex;"><span>            	CFBundleURLTypes<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: com.vodafone.gh.myvodafone.app
</span></span><span style="display:flex;"><span>            	LSRequiresIPhoneOS:  true
</span></span><span style="display:flex;"><span>            	CFBundleURLTypes<span style="color:#f92672">[</span>2<span style="color:#f92672">]</span>: To set profile pictures <span style="color:#66d9ef">for</span> your accounts
</span></span><span style="display:flex;"><span>            	CFBundleURLTypes<span style="color:#f92672">[</span>3<span style="color:#f92672">]</span>: myvodafoneapp
</span></span><span style="display:flex;"><span>            	CFBundleURLTypes<span style="color:#f92672">[</span>4<span style="color:#f92672">]</span>: 21G72
</span></span><span style="display:flex;"><span>            	CFBundleURLTypes:
</span></span><span style="display:flex;"><span>        	CFBundlePackageType: APPL
</span></span><span style="display:flex;"><span>	LSApplicationQueriesSchemes<span style="color:#f92672">[</span>0<span style="color:#f92672">]</span>: whatsapp
</span></span><span style="display:flex;"><span>	LSApplicationQueriesSchemes<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: vodafonemusic
</span></span><span style="display:flex;"><span>	LSApplicationQueriesSchemes<span style="color:#f92672">[</span>2<span style="color:#f92672">]</span>: fb
</span></span><span style="display:flex;"><span>	LSApplicationQueriesSchemes<span style="color:#f92672">[</span>3<span style="color:#f92672">]</span>: youtube
</span></span><span style="display:flex;"><span>	LSApplicationQueriesSchemes<span style="color:#f92672">[</span>4<span style="color:#f92672">]</span>: twitter
</span></span><span style="display:flex;"><span>	LSApplicationQueriesSchemes<span style="color:#f92672">[</span>5<span style="color:#f92672">]</span>: 2ctv
</span></span><span style="display:flex;"><span>	LSApplicationQueriesSchemes<span style="color:#f92672">[</span>6<span style="color:#f92672">]</span>: wi-flix
</span></span><span style="display:flex;"><span>	LSApplicationQueriesSchemes<span style="color:#f92672">[</span>7<span style="color:#f92672">]</span>: dreamlab
</span></span><span style="display:flex;"><span>	NSContactsUsageDescription: Get easy access to your contacts during transactions. Eg: VFCash and Top Up
</span></span><span style="display:flex;"><span>	UIUserInterfaceStyle: Light
</span></span><span style="display:flex;"><span>	DTCompiler: com.apple.compilers.llvm.clang.1_0
</span></span><span style="display:flex;"><span>	UIRequiredDeviceCapabilities<span style="color:#f92672">[</span>0<span style="color:#f92672">]</span>: arm64
</span></span><span style="display:flex;"><span>	NSLocationAlwaysUsageDescription: To show you Vodafone retail shops and other important information based on your location
</span></span><span style="display:flex;"><span>	UIViewControllerBasedStatusBarAppearance:  false
</span></span><span style="display:flex;"><span>	NSCameraUsageDescription: To set profile pictures <span style="color:#66d9ef">for</span> your accounts
</span></span><span style="display:flex;"><span>	UISupportedInterfaceOrientations<span style="color:#f92672">[</span>0<span style="color:#f92672">]</span>: UIInterfaceOrientationPortrait
</span></span><span style="display:flex;"><span>	CFBundleInfoDictionaryVersion: 6.0
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>0<span style="color:#f92672">]</span>: Vodafone Rg Bold.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>1<span style="color:#f92672">]</span>: VodafoneLt.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>2<span style="color:#f92672">]</span>: VodafoneRg.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>3<span style="color:#f92672">]</span>: AntDesign.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>4<span style="color:#f92672">]</span>: Entypo.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>5<span style="color:#f92672">]</span>: EvilIcons.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>6<span style="color:#f92672">]</span>: Feather.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>7<span style="color:#f92672">]</span>: FontAwesome.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>8<span style="color:#f92672">]</span>: FontAwesome5_Brands.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>9<span style="color:#f92672">]</span>: FontAwesome5_Regular.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>10<span style="color:#f92672">]</span>: FontAwesome5_Solid.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>11<span style="color:#f92672">]</span>: Fontisto.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>12<span style="color:#f92672">]</span>: Foundation.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>13<span style="color:#f92672">]</span>: Ionicons.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>14<span style="color:#f92672">]</span>: MaterialCommunityIcons.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>15<span style="color:#f92672">]</span>: MaterialIcons.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>16<span style="color:#f92672">]</span>: Octicons.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>17<span style="color:#f92672">]</span>: SimpleLineIcons.ttf
</span></span><span style="display:flex;"><span>	UIAppFonts<span style="color:#f92672">[</span>18<span style="color:#f92672">]</span>: Zocial.ttf
</span></span><span style="display:flex;"><span>	NSAppleMusicUsageDescription: To allow access to Apple Music
</span></span><span style="display:flex;"><span>	FirebaseCrashlyticsCollectionEnabled:  false
</span></span><span style="display:flex;"><span>	DTSDKBuild: 19F64
</span></span><span style="display:flex;"><span>	UILaunchStoryboardName: LaunchScreen
</span></span><span style="display:flex;"><span>	DTPlatformVersion: 15.5
</span></span><span style="display:flex;"><span>	CFBundleShortVersionString: 4.3.0
</span></span><span style="display:flex;"><span>	LSSupportsOpeningDocumentsInPlace: YES
</span></span><span style="display:flex;"><span>	UIRequiresFullScreen:  true
</span></span></code></pre></div><p>In this file the supported devices are indicated; iPhone 10,4 etc. There is an exception to allow insecure HTTP loads.</p>
<p>There is a <code>firebase_json_raw</code> field which is base64 encoded and its decode value is <code>{&quot;android_task_executor_maximum_pool_size&quot;: 10, &quot;android_task_executor_keep_alive_seconds&quot;: 3}</code>; nothing really interesting here.</p>
<p>From the <code>Info.plist</code> file, there is a permission request for location, camera and contacts; <code>NSLocation</code>, <code>NSCamera</code> and <code>NSContacts</code>.</p>
<p>Interestingly, there is a permission to allow access to <code>Apple Music</code>; 😅 indicated as <code>NSAppleMusicUsageDescription: To allow access to Apple Music</code>.</p>
<p>The default application is indicated by <code>CFBundleURLName</code> and is <code>myvodafoneapp</code>. The bundle URL is defined by <code>CFBundleURLTypes</code> and the value is <code>com.vodafone.gh.myvodafone.app</code>.</p>
<p>There are eight(8) launch services registered in the application (for more details on launch services visit <a href="https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/LaunchServicesKeys.html);">https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/LaunchServicesKeys.html);</a> <code>whatsapp</code>, <code>vodafonemusic</code>, <code>fb</code>, <code>youtube</code>, <code>twitter</code>, <code>2ctv</code>, <code>wi-flix</code> and <code>dreamlab</code>.</p>
<p>There are about 19 fonts that are reference in the <code>Info.plist</code> file. The app version is indicated by the key <code>CFBundleShortVersionString</code> and it&rsquo;s value is <code>4.3.0</code>.</p>
<p>Inside the directory, there is a <code>GoogleService-Info.plist</code> file; which contains google services API keys, firebase database URL etc.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>ANDROID_CLIENT_ID: ***bc89vjr4p4.apps.googleusercontent.com
</span></span><span style="display:flex;"><span>API_KEY: AIza***3kzY
</span></span><span style="display:flex;"><span>BUNDLE_ID: com.vodafone.gh.myvodafone.app
</span></span><span style="display:flex;"><span>CLIENT_ID: ***-3fb9i3mkeok8dd***2t.apps.googleusercontent.com
</span></span><span style="display:flex;"><span>DATABASE_URL: https://vodaf***.firebaseio.com
</span></span><span style="display:flex;"><span>GCM_SENDER_ID: 63***49
</span></span><span style="display:flex;"><span>GOOGLE_APP_ID: 1:63*****749:ios:e91d****7a04
</span></span><span style="display:flex;"><span>IS_ADS_ENABLED: false
</span></span><span style="display:flex;"><span>IS_ANALYTICS_ENABLED: false
</span></span><span style="display:flex;"><span>IS_APPINVITE_ENABLED: true
</span></span><span style="display:flex;"><span>IS_GCM_ENABLED: true
</span></span><span style="display:flex;"><span>IS_SIGNIN_ENABLED: true
</span></span><span style="display:flex;"><span>PLIST_VERSION: <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>PROJECT_ID: vodafoneapp-****
</span></span><span style="display:flex;"><span>REVERSED_CLIENT_ID: com.googleusercontent.apps.63***49-3fb9***g2t
</span></span><span style="display:flex;"><span>STORAGE_BUCKET: vodafoneapp-****.ot.com
</span></span></code></pre></div><p>The application contains <code>AirShip</code> (<a href="https://www.airship.com">https://www.airship.com</a>) configuration files and bundles; the default <code>AirshipConfig.plist</code> file contains the following contents:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>developmentAppKey: Fzs****RhBw
</span></span><span style="display:flex;"><span>developmentAppSecret: Vbv***oMXMQ
</span></span><span style="display:flex;"><span>inProduction: true
</span></span><span style="display:flex;"><span>productionAppKey: bo****-ZQV1g
</span></span><span style="display:flex;"><span>productionAppSecret: zTY****l8Q
</span></span></code></pre></div><p>The framework directory contains, <code>NetPerformSDK.framework</code>, <code>SecLibRNFramework.framework</code>, <code>TealiumIOS.framework</code> and <code>TealiumIOSLifecycle.framework</code>. The <code>NetPerformSDK</code> is used for network speed testing, the <code>SecLibRNFramework</code> implement security functions (such as encryption/decryption of bytes of data, etc.), the <code>TealiumIOS</code> is a customer data hub framework.</p>
<p>The directory contains <code>device-names.json</code> file which indicates the various iOS devices supported by the application.</p>
<h3 id="static-analysis-of-application">Static Analysis of Application</h3>
<p>The application was developed using <code>React Native</code>. In the root directory of the application is a file named <code>main.jsbundle</code>; a bundled javascript of the whole application.</p>
<p>The bundle javascript when opened in a TextEditor contains a bunch of minified javascript code; shown below.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">__BUNDLE_START_TIME__</span><span style="color:#f92672">=</span><span style="color:#66d9ef">this</span>.<span style="color:#a6e22e">nativePerformanceNow</span><span style="color:#f92672">?</span><span style="color:#a6e22e">nativePerformanceNow</span>()<span style="color:#f92672">:</span>Date.<span style="color:#a6e22e">now</span>(),<span style="color:#a6e22e">__DEV__</span><span style="color:#f92672">=</span><span style="color:#66d9ef">false</span>,<span style="color:#a6e22e">process</span><span style="color:#f92672">=</span><span style="color:#66d9ef">this</span>.<span style="color:#a6e22e">process</span><span style="color:#f92672">||</span>{},<span style="color:#a6e22e">__METRO_GLOBAL_PREFIX__</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#39;&#39;</span>;<span style="color:#a6e22e">process</span>.<span style="color:#a6e22e">env</span><span style="color:#f92672">=</span><span style="color:#a6e22e">process</span>.<span style="color:#a6e22e">env</span><span style="color:#f92672">||</span>{};<span style="color:#a6e22e">process</span>.<span style="color:#a6e22e">env</span>.<span style="color:#a6e22e">NODE_ENV</span><span style="color:#f92672">=</span><span style="color:#a6e22e">process</span>.<span style="color:#a6e22e">env</span>.<span style="color:#a6e22e">NODE_ENV</span><span style="color:#f92672">||</span><span style="color:#e6db74">&#34;production&#34;</span>;
</span></span><span style="display:flex;"><span><span style="color:#f92672">!</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">r</span>){<span style="color:#e6db74">&#34;use strict&#34;</span>;<span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">__r</span><span style="color:#f92672">=</span><span style="color:#a6e22e">o</span>,<span style="color:#a6e22e">r</span>[<span style="color:#a6e22e">__METRO_GLOBAL_PREFIX__</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#34;__d&#34;</span>]<span style="color:#f92672">=</span><span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">r</span>,<span style="color:#a6e22e">i</span>,<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">if</span>(<span style="color:#66d9ef">null</span><span style="color:#f92672">!=</span><span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">i</span>])<span style="color:#66d9ef">return</span>;<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">o</span><span style="color:#f92672">=</span>{<span style="color:#a6e22e">dependencyMap</span><span style="color:#f92672">:</span><span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">factory</span><span style="color:#f92672">:</span><span style="color:#a6e22e">r</span>,<span style="color:#a6e22e">hasError</span><span style="color:#f92672">:!</span><span style="color:#ae81ff">1</span>,<span style="color:#a6e22e">importedAll</span><span style="color:#f92672">:</span><span style="color:#a6e22e">t</span>,<span style="color:#a6e22e">importedDefault</span><span style="color:#f92672">:</span><span style="color:#a6e22e">t</span>,<span style="color:#a6e22e">isInitialized</span><span style="color:#f92672">:!</span><span style="color:#ae81ff">1</span>,<span style="color:#a6e22e">publicModule</span><span style="color:#f92672">:</span>{<span style="color:#a6e22e">exports</span><span style="color:#f92672">:</span>{}}};<span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">i</span>]<span style="color:#f92672">=</span><span style="color:#a6e22e">o</span>},<span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">__c</span><span style="color:#f92672">=</span><span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">__registerSegment</span><span style="color:#f92672">=</span><span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">r</span>,<span style="color:#a6e22e">t</span>,<span style="color:#a6e22e">i</span>){<span style="color:#a6e22e">s</span>[<span style="color:#a6e22e">r</span>]<span style="color:#f92672">=</span><span style="color:#a6e22e">t</span>,<span style="color:#a6e22e">i</span><span style="color:#f92672">&amp;&amp;</span><span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">forEach</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">t</span>){<span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">t</span>]<span style="color:#f92672">||</span><span style="color:#a6e22e">v</span>.<span style="color:#a6e22e">has</span>(<span style="color:#a6e22e">t</span>)<span style="color:#f92672">||</span><span style="color:#a6e22e">v</span>.<span style="color:#a6e22e">set</span>(<span style="color:#a6e22e">t</span>,<span style="color:#a6e22e">r</span>)})};<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">e</span><span style="color:#f92672">=</span><span style="color:#a6e22e">n</span>(),<span style="color:#a6e22e">t</span><span style="color:#f92672">=</span>{},<span style="color:#a6e22e">i</span><span style="color:#f92672">=</span>{}.<span style="color:#a6e22e">hasOwnProperty</span>;<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">n</span>(){<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">e</span><span style="color:#f92672">=</span>Object.<span style="color:#a6e22e">create</span>(<span style="color:#66d9ef">null</span>)}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">r</span>){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">t</span><span style="color:#f92672">=</span><span style="color:#a6e22e">r</span>,<span style="color:#a6e22e">i</span><span style="color:#f92672">=</span><span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">t</span>];<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">i</span><span style="color:#f92672">&amp;&amp;</span><span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">isInitialized</span><span style="color:#f92672">?</span><span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">publicModule</span>.<span style="color:#a6e22e">exports</span><span style="color:#f92672">:</span><span style="color:#a6e22e">d</span>(<span style="color:#a6e22e">t</span>,<span style="color:#a6e22e">i</span>)}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">r</span>){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">i</span><span style="color:#f92672">=</span><span style="color:#a6e22e">r</span>;<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">i</span>]<span style="color:#f92672">&amp;&amp;</span><span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">i</span>].<span style="color:#a6e22e">importedDefault</span><span style="color:#f92672">!==</span><span style="color:#a6e22e">t</span>)<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">i</span>].<span style="color:#a6e22e">importedDefault</span>;<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">n</span><span style="color:#f92672">=</span><span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">i</span>),<span style="color:#a6e22e">l</span><span style="color:#f92672">=</span><span style="color:#a6e22e">n</span><span style="color:#f92672">&amp;&amp;</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">__esModule</span><span style="color:#f92672">?</span><span style="color:#a6e22e">n</span>.<span style="color:#66d9ef">default</span><span style="color:#f92672">:</span><span style="color:#a6e22e">n</span>;<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">i</span>].<span style="color:#a6e22e">importedDefault</span><span style="color:#f92672">=</span><span style="color:#a6e22e">l</span>}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">u</span>(<span style="color:#a6e22e">r</span>){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">n</span><span style="color:#f92672">=</span><span style="color:#a6e22e">r</span>;<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">n</span>]<span style="color:#f92672">&amp;&amp;</span><span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">n</span>].<span style="color:#a6e22e">importedAll</span><span style="color:#f92672">!==</span><span style="color:#a6e22e">t</span>)<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">n</span>].<span style="color:#a6e22e">importedAll</span>;<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">l</span>,<span style="color:#a6e22e">u</span><span style="color:#f92672">=</span><span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">n</span>);<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">u</span><span style="color:#f92672">&amp;&amp;</span><span style="color:#a6e22e">u</span>.<span style="color:#a6e22e">__esModule</span>)<span style="color:#a6e22e">l</span><span style="color:#f92672">=</span><span style="color:#a6e22e">u</span>;<span style="color:#66d9ef">else</span>{<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">l</span><span style="color:#f92672">=</span>{},<span style="color:#a6e22e">u</span>)<span style="color:#66d9ef">for</span>(<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">a</span> <span style="color:#66d9ef">in</span> <span style="color:#a6e22e">u</span>)<span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">call</span>(<span style="color:#a6e22e">u</span>,<span style="color:#a6e22e">a</span>)<span style="color:#f92672">&amp;&amp;</span>(<span style="color:#a6e22e">l</span>[<span style="color:#a6e22e">a</span>]<span style="color:#f92672">=</span><span style="color:#a6e22e">u</span>[<span style="color:#a6e22e">a</span>]);<span style="color:#a6e22e">l</span>.<span style="color:#66d9ef">default</span><span style="color:#f92672">=</span><span style="color:#a6e22e">u</span>}<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">n</span>].<span style="color:#a6e22e">importedAll</span><span style="color:#f92672">=</span><span style="color:#a6e22e">l</span>}<span style="color:#a6e22e">o</span>.<span style="color:#a6e22e">importDefault</span><span style="color:#f92672">=</span><span style="color:#a6e22e">l</span>,<span style="color:#a6e22e">o</span>.<span style="color:#a6e22e">importAll</span><span style="color:#f92672">=</span><span style="color:#a6e22e">u</span>;<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">a</span><span style="color:#f92672">=!</span><span style="color:#ae81ff">1</span>;<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">d</span>(<span style="color:#a6e22e">e</span>,<span style="color:#a6e22e">t</span>){<span style="color:#66d9ef">if</span>(<span style="color:#f92672">!</span><span style="color:#a6e22e">a</span><span style="color:#f92672">&amp;&amp;</span><span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">ErrorUtils</span>){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">i</span>;<span style="color:#a6e22e">a</span><span style="color:#f92672">=!</span><span style="color:#ae81ff">0</span>;<span style="color:#66d9ef">try</span>{<span style="color:#a6e22e">i</span><span style="color:#f92672">=</span><span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">e</span>,<span style="color:#a6e22e">t</span>)}<span style="color:#66d9ef">catch</span>(<span style="color:#a6e22e">e</span>){<span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">ErrorUtils</span>.<span style="color:#a6e22e">reportFatalError</span>(<span style="color:#a6e22e">e</span>)}<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">a</span><span style="color:#f92672">=!</span><span style="color:#ae81ff">1</span>,<span style="color:#a6e22e">i</span>}<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">e</span>,<span style="color:#a6e22e">t</span>)}<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">f</span><span style="color:#f92672">=</span><span style="color:#ae81ff">16</span>,<span style="color:#a6e22e">c</span><span style="color:#f92672">=</span><span style="color:#ae81ff">65535</span>;<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">p</span>(<span style="color:#a6e22e">r</span>){<span style="color:#66d9ef">return</span>{<span style="color:#a6e22e">segmentId</span><span style="color:#f92672">:</span><span style="color:#a6e22e">r</span><span style="color:#f92672">&gt;&gt;&gt;</span><span style="color:#a6e22e">f</span>,<span style="color:#a6e22e">localId</span><span style="color:#f92672">:</span><span style="color:#a6e22e">r</span><span style="color:#f92672">&amp;</span><span style="color:#a6e22e">c</span>}}<span style="color:#a6e22e">o</span>.<span style="color:#a6e22e">unpackModuleId</span><span style="color:#f92672">=</span><span style="color:#a6e22e">p</span>,<span style="color:#a6e22e">o</span>.<span style="color:#a6e22e">packModuleId</span><span style="color:#f92672">=</span><span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">r</span>){<span style="color:#66d9ef">return</span>(<span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">segmentId</span><span style="color:#f92672">&lt;&lt;</span><span style="color:#a6e22e">f</span>)<span style="color:#f92672">+</span><span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">localId</span>};<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">s</span><span style="color:#f92672">=</span>[],<span style="color:#a6e22e">v</span><span style="color:#f92672">=</span><span style="color:#66d9ef">new</span> <span style="color:#a6e22e">Map</span>;<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">t</span>,<span style="color:#a6e22e">i</span>){<span style="color:#66d9ef">if</span>(<span style="color:#f92672">!</span><span style="color:#a6e22e">i</span><span style="color:#f92672">&amp;&amp;</span><span style="color:#a6e22e">s</span>.<span style="color:#a6e22e">length</span><span style="color:#f92672">&gt;</span><span style="color:#ae81ff">0</span>){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">a</span><span style="color:#f92672">=</span><span style="color:#66d9ef">null</span><span style="color:#f92672">!==</span>(<span style="color:#a6e22e">n</span><span style="color:#f92672">=</span><span style="color:#a6e22e">v</span>.<span style="color:#a6e22e">get</span>(<span style="color:#a6e22e">t</span>))<span style="color:#f92672">&amp;&amp;</span><span style="color:#66d9ef">void</span> <span style="color:#ae81ff">0</span><span style="color:#f92672">!==</span><span style="color:#a6e22e">n</span><span style="color:#f92672">?</span><span style="color:#a6e22e">n</span><span style="color:#f92672">:</span><span style="color:#ae81ff">0</span>,<span style="color:#a6e22e">d</span><span style="color:#f92672">=</span><span style="color:#a6e22e">s</span>[<span style="color:#a6e22e">a</span>];<span style="color:#66d9ef">null</span><span style="color:#f92672">!=</span><span style="color:#a6e22e">d</span><span style="color:#f92672">&amp;&amp;</span>(<span style="color:#a6e22e">d</span>(<span style="color:#a6e22e">t</span>),<span style="color:#a6e22e">i</span><span style="color:#f92672">=</span><span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">t</span>],<span style="color:#a6e22e">v</span>.<span style="color:#66d9ef">delete</span>(<span style="color:#a6e22e">t</span>))}<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">f</span><span style="color:#f92672">=</span><span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">nativeRequire</span>;<span style="color:#66d9ef">if</span>(<span style="color:#f92672">!</span><span style="color:#a6e22e">i</span><span style="color:#f92672">&amp;&amp;</span><span style="color:#a6e22e">f</span>){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">c</span><span style="color:#f92672">=</span><span style="color:#a6e22e">p</span>(<span style="color:#a6e22e">t</span>),<span style="color:#a6e22e">h</span><span style="color:#f92672">=</span><span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">segmentId</span>;<span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">localId</span>,<span style="color:#a6e22e">h</span>),<span style="color:#a6e22e">i</span><span style="color:#f92672">=</span><span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">t</span>]}<span style="color:#66d9ef">if</span>(<span style="color:#f92672">!</span><span style="color:#a6e22e">i</span>)<span style="color:#66d9ef">throw</span> Error(<span style="color:#e6db74">&#39;Requiring unknown module &#34;&#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">t</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#39;&#34;.&#39;</span>);<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">hasError</span>)<span style="color:#66d9ef">throw</span> <span style="color:#a6e22e">_</span>(<span style="color:#a6e22e">t</span>,<span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">error</span>);<span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">isInitialized</span><span style="color:#f92672">=!</span><span style="color:#ae81ff">0</span>;<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">m</span><span style="color:#f92672">=</span><span style="color:#a6e22e">i</span>,<span style="color:#a6e22e">g</span><span style="color:#f92672">=</span><span style="color:#a6e22e">m</span>.<span style="color:#a6e22e">factory</span>,<span style="color:#a6e22e">I</span><span style="color:#f92672">=</span><span style="color:#a6e22e">m</span>.<span style="color:#a6e22e">dependencyMap</span>;<span style="color:#66d9ef">try</span>{<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">M</span><span style="color:#f92672">=</span><span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">publicModule</span>;<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">M</span>.<span style="color:#a6e22e">id</span><span style="color:#f92672">=</span><span style="color:#a6e22e">t</span>,<span style="color:#a6e22e">g</span>(<span style="color:#a6e22e">r</span>,<span style="color:#a6e22e">o</span>,<span style="color:#a6e22e">l</span>,<span style="color:#a6e22e">u</span>,<span style="color:#a6e22e">M</span>,<span style="color:#a6e22e">M</span>.<span style="color:#a6e22e">exports</span>,<span style="color:#a6e22e">I</span>),<span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">factory</span><span style="color:#f92672">=</span><span style="color:#66d9ef">void</span> <span style="color:#ae81ff">0</span>,<span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">dependencyMap</span><span style="color:#f92672">=</span><span style="color:#66d9ef">void</span> <span style="color:#ae81ff">0</span>,<span style="color:#a6e22e">M</span>.<span style="color:#a6e22e">exports</span>}<span style="color:#66d9ef">catch</span>(<span style="color:#a6e22e">r</span>){<span style="color:#66d9ef">throw</span> <span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">hasError</span><span style="color:#f92672">=!</span><span style="color:#ae81ff">0</span>,<span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">error</span><span style="color:#f92672">=</span><span style="color:#a6e22e">r</span>,<span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">isInitialized</span><span style="color:#f92672">=!</span><span style="color:#ae81ff">1</span>,<span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">publicModule</span>.<span style="color:#a6e22e">exports</span><span style="color:#f92672">=</span><span style="color:#66d9ef">void</span> <span style="color:#ae81ff">0</span>,<span style="color:#a6e22e">r</span>}}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">_</span>(<span style="color:#a6e22e">r</span>,<span style="color:#a6e22e">e</span>){<span style="color:#66d9ef">return</span> Error(<span style="color:#e6db74">&#39;Requiring module &#34;&#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">r</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#39;&#34;, which threw an exception: &#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">e</span>)}})(<span style="color:#e6db74">&#39;undefined&#39;</span><span style="color:#f92672">!=</span><span style="color:#66d9ef">typeof</span> <span style="color:#a6e22e">globalThis</span><span style="color:#f92672">?</span><span style="color:#a6e22e">globalThis</span><span style="color:#f92672">:</span><span style="color:#e6db74">&#39;undefined&#39;</span><span style="color:#f92672">!=</span><span style="color:#66d9ef">typeof</span> <span style="color:#a6e22e">global</span><span style="color:#f92672">?</span><span style="color:#a6e22e">global</span><span style="color:#f92672">:</span><span style="color:#e6db74">&#39;undefined&#39;</span><span style="color:#f92672">!=</span><span style="color:#66d9ef">typeof</span> window<span style="color:#f92672">?</span>window<span style="color:#f92672">:</span><span style="color:#66d9ef">this</span>);
</span></span><span style="display:flex;"><span><span style="color:#f92672">!</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">e</span><span style="color:#f92672">=</span>(<span style="color:#66d9ef">function</span>(){<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">n</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>){<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">e</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">e</span><span style="color:#f92672">=</span>{};<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">forEach</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">r</span>){<span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">n</span>]<span style="color:#f92672">=!</span><span style="color:#ae81ff">0</span>}),<span style="color:#a6e22e">e</span>}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">r</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">r</span>,<span style="color:#a6e22e">u</span>){<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">formatValueCalls</span><span style="color:#f92672">++</span>,<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">formatValueCalls</span><span style="color:#f92672">&gt;</span><span style="color:#ae81ff">200</span>)<span style="color:#66d9ef">return</span><span style="color:#e6db74">&#34;[TOO BIG formatValueCalls &#34;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">formatValueCalls</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#34; exceeded limit of 200]&#34;</span>;<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">f</span><span style="color:#f92672">=</span><span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">r</span>);<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">f</span>)<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">f</span>;<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">c</span><span style="color:#f92672">=</span>Object.<span style="color:#a6e22e">keys</span>(<span style="color:#a6e22e">r</span>),<span style="color:#a6e22e">s</span><span style="color:#f92672">=</span><span style="color:#a6e22e">e</span>(<span style="color:#a6e22e">c</span>);<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">d</span>(<span style="color:#a6e22e">r</span>)<span style="color:#f92672">&amp;&amp;</span>(<span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">indexOf</span>(<span style="color:#e6db74">&#39;message&#39;</span>)<span style="color:#f92672">&gt;=</span><span style="color:#ae81ff">0</span><span style="color:#f92672">||</span><span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">indexOf</span>(<span style="color:#e6db74">&#39;description&#39;</span>)<span style="color:#f92672">&gt;=</span><span style="color:#ae81ff">0</span>))<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">r</span>);<span style="color:#66d9ef">if</span>(<span style="color:#ae81ff">0</span><span style="color:#f92672">===</span><span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">length</span>){<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">v</span>(<span style="color:#a6e22e">r</span>)){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">g</span><span style="color:#f92672">=</span><span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">name</span><span style="color:#f92672">?</span><span style="color:#e6db74">&#39;: &#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">name</span><span style="color:#f92672">:</span><span style="color:#e6db74">&#39;&#39;</span>;<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(<span style="color:#e6db74">&#39;[Function&#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">g</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#39;]&#39;</span>,<span style="color:#e6db74">&#39;special&#39;</span>)}<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">p</span>(<span style="color:#a6e22e">r</span>))<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(RegExp.<span style="color:#a6e22e">prototype</span>.<span style="color:#a6e22e">toString</span>.<span style="color:#a6e22e">call</span>(<span style="color:#a6e22e">r</span>),<span style="color:#e6db74">&#39;regexp&#39;</span>);<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">y</span>(<span style="color:#a6e22e">r</span>))<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(Date.<span style="color:#a6e22e">prototype</span>.<span style="color:#a6e22e">toString</span>.<span style="color:#a6e22e">call</span>(<span style="color:#a6e22e">r</span>),<span style="color:#e6db74">&#39;date&#39;</span>);<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">d</span>(<span style="color:#a6e22e">r</span>))<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">r</span>)}<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">h</span>,<span style="color:#a6e22e">b</span>,<span style="color:#a6e22e">m</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#39;&#39;</span>,<span style="color:#a6e22e">j</span><span style="color:#f92672">=!</span><span style="color:#ae81ff">1</span>,<span style="color:#a6e22e">O</span><span style="color:#f92672">=</span>[<span style="color:#e6db74">&#39;{&#39;</span>,<span style="color:#e6db74">&#39;}&#39;</span>];(<span style="color:#a6e22e">h</span><span style="color:#f92672">=</span><span style="color:#a6e22e">r</span>,Array.<span style="color:#a6e22e">isArray</span>(<span style="color:#a6e22e">h</span>)<span style="color:#f92672">&amp;&amp;</span>(<span style="color:#a6e22e">j</span><span style="color:#f92672">=!</span><span style="color:#ae81ff">0</span>,<span style="color:#a6e22e">O</span><span style="color:#f92672">=</span>[<span style="color:#e6db74">&#39;[&#39;</span>,<span style="color:#e6db74">&#39;]&#39;</span>]),<span style="color:#a6e22e">v</span>(<span style="color:#a6e22e">r</span>))<span style="color:#f92672">&amp;&amp;</span>(<span style="color:#a6e22e">m</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#39; [Function&#39;</span><span style="color:#f92672">+</span>(<span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">name</span><span style="color:#f92672">?</span><span style="color:#e6db74">&#39;: &#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">name</span><span style="color:#f92672">:</span><span style="color:#e6db74">&#39;&#39;</span>)<span style="color:#f92672">+</span><span style="color:#e6db74">&#39;]&#39;</span>);<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">p</span>(<span style="color:#a6e22e">r</span>)<span style="color:#f92672">&amp;&amp;</span>(<span style="color:#a6e22e">m</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#39; &#39;</span><span style="color:#f92672">+</span>RegExp.<span style="color:#a6e22e">prototype</span>.<span style="color:#a6e22e">toString</span>.<span style="color:#a6e22e">call</span>(<span style="color:#a6e22e">r</span>)),<span style="color:#a6e22e">y</span>(<span style="color:#a6e22e">r</span>)<span style="color:#f92672">&amp;&amp;</span>(<span style="color:#a6e22e">m</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#39; &#39;</span><span style="color:#f92672">+</span>Date.<span style="color:#a6e22e">prototype</span>.<span style="color:#a6e22e">toUTCString</span>.<span style="color:#a6e22e">call</span>(<span style="color:#a6e22e">r</span>)),<span style="color:#a6e22e">d</span>(<span style="color:#a6e22e">r</span>)<span style="color:#f92672">&amp;&amp;</span>(<span style="color:#a6e22e">m</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#39; &#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">r</span>)),<span style="color:#ae81ff">0</span><span style="color:#f92672">!==</span><span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">length</span><span style="color:#f92672">||</span><span style="color:#a6e22e">j</span><span style="color:#f92672">&amp;&amp;</span><span style="color:#ae81ff">0</span><span style="color:#f92672">!=</span><span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">length</span><span style="color:#f92672">?</span><span style="color:#a6e22e">u</span><span style="color:#f92672">&lt;</span><span style="color:#ae81ff">0</span><span style="color:#f92672">?</span><span style="color:#a6e22e">p</span>(<span style="color:#a6e22e">r</span>)<span style="color:#f92672">?</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(RegExp.<span style="color:#a6e22e">prototype</span>.<span style="color:#a6e22e">toString</span>.<span style="color:#a6e22e">call</span>(<span style="color:#a6e22e">r</span>),<span style="color:#e6db74">&#39;regexp&#39;</span>)<span style="color:#f92672">:</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(<span style="color:#e6db74">&#39;[Object]&#39;</span>,<span style="color:#e6db74">&#39;special&#39;</span>)<span style="color:#f92672">:</span>(<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">seen</span>.<span style="color:#a6e22e">push</span>(<span style="color:#a6e22e">r</span>),<span style="color:#a6e22e">b</span><span style="color:#f92672">=</span><span style="color:#a6e22e">j</span><span style="color:#f92672">?</span><span style="color:#a6e22e">i</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">r</span>,<span style="color:#a6e22e">u</span>,<span style="color:#a6e22e">s</span>,<span style="color:#a6e22e">c</span>)<span style="color:#f92672">:</span><span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">map</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">e</span>){<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">r</span>,<span style="color:#a6e22e">u</span>,<span style="color:#a6e22e">s</span>,<span style="color:#a6e22e">e</span>,<span style="color:#a6e22e">j</span>)}),<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">seen</span>.<span style="color:#a6e22e">pop</span>(),<span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">b</span>,<span style="color:#a6e22e">m</span>,<span style="color:#a6e22e">O</span>))<span style="color:#f92672">:</span><span style="color:#a6e22e">O</span>[<span style="color:#ae81ff">0</span>]<span style="color:#f92672">+</span><span style="color:#a6e22e">m</span><span style="color:#f92672">+</span><span style="color:#a6e22e">O</span>[<span style="color:#ae81ff">1</span>]}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>){<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">s</span>(<span style="color:#a6e22e">e</span>))<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(<span style="color:#e6db74">&#39;undefined&#39;</span>,<span style="color:#e6db74">&#39;undefined&#39;</span>);<span style="color:#66d9ef">if</span>(<span style="color:#e6db74">&#39;string&#39;</span><span style="color:#f92672">==</span><span style="color:#66d9ef">typeof</span> <span style="color:#a6e22e">e</span>){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">r</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&#39;&#34;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">JSON</span>.<span style="color:#a6e22e">stringify</span>(<span style="color:#a6e22e">e</span>).<span style="color:#a6e22e">replace</span>(<span style="color:#e6db74">/^&#34;|&#34;$/g</span>,<span style="color:#e6db74">&#39;&#39;</span>).<span style="color:#a6e22e">replace</span>(<span style="color:#e6db74">/&#39;/g</span>,<span style="color:#e6db74">&#34;\\&#39;&#34;</span>).<span style="color:#a6e22e">replace</span>(<span style="color:#e6db74">/\\&#34;/g</span>,<span style="color:#e6db74">&#39;&#34;&#39;</span>)<span style="color:#f92672">+</span><span style="color:#e6db74">&#34;&#39;&#34;</span>;<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(<span style="color:#a6e22e">r</span>,<span style="color:#e6db74">&#39;string&#39;</span>)}<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">e</span>)<span style="color:#f92672">?</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(<span style="color:#e6db74">&#39;&#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">e</span>,<span style="color:#e6db74">&#39;number&#39;</span>)<span style="color:#f92672">:</span><span style="color:#a6e22e">u</span>(<span style="color:#a6e22e">e</span>)<span style="color:#f92672">?</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(<span style="color:#e6db74">&#39;&#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">e</span>,<span style="color:#e6db74">&#39;boolean&#39;</span>)<span style="color:#f92672">:</span><span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">e</span>)<span style="color:#f92672">?</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(<span style="color:#e6db74">&#39;null&#39;</span>,<span style="color:#e6db74">&#39;null&#39;</span>)<span style="color:#f92672">:</span><span style="color:#66d9ef">void</span> <span style="color:#ae81ff">0</span>}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span><span style="color:#e6db74">&#39;[&#39;</span><span style="color:#f92672">+</span>Error.<span style="color:#a6e22e">prototype</span>.<span style="color:#a6e22e">toString</span>.<span style="color:#a6e22e">call</span>(<span style="color:#a6e22e">n</span>)<span style="color:#f92672">+</span><span style="color:#e6db74">&#39;]&#39;</span>}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">i</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>,<span style="color:#a6e22e">r</span>,<span style="color:#a6e22e">t</span>,<span style="color:#a6e22e">o</span>){<span style="color:#66d9ef">for</span>(<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">i</span><span style="color:#f92672">=</span>[],<span style="color:#a6e22e">a</span><span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>,<span style="color:#a6e22e">u</span><span style="color:#f92672">=</span><span style="color:#a6e22e">e</span>.<span style="color:#a6e22e">length</span>;<span style="color:#a6e22e">a</span><span style="color:#f92672">&lt;</span><span style="color:#a6e22e">u</span>;<span style="color:#f92672">++</span><span style="color:#a6e22e">a</span>)<span style="color:#a6e22e">b</span>(<span style="color:#a6e22e">e</span>,String(<span style="color:#a6e22e">a</span>))<span style="color:#f92672">?</span><span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">push</span>(<span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>,<span style="color:#a6e22e">r</span>,<span style="color:#a6e22e">t</span>,String(<span style="color:#a6e22e">a</span>),<span style="color:#f92672">!</span><span style="color:#ae81ff">0</span>))<span style="color:#f92672">:</span><span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">push</span>(<span style="color:#e6db74">&#39;&#39;</span>);<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">o</span>.<span style="color:#a6e22e">forEach</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">o</span>){<span style="color:#a6e22e">o</span>.<span style="color:#a6e22e">match</span>(<span style="color:#e6db74">/^\d+$/</span>)<span style="color:#f92672">||</span><span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">push</span>(<span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>,<span style="color:#a6e22e">r</span>,<span style="color:#a6e22e">t</span>,<span style="color:#a6e22e">o</span>,<span style="color:#f92672">!</span><span style="color:#ae81ff">0</span>))}),<span style="color:#a6e22e">i</span>}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>,<span style="color:#a6e22e">t</span>,<span style="color:#a6e22e">o</span>,<span style="color:#a6e22e">i</span>,<span style="color:#a6e22e">l</span>){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">a</span>,<span style="color:#a6e22e">u</span>,<span style="color:#a6e22e">c</span>;<span style="color:#66d9ef">if</span>((<span style="color:#a6e22e">c</span><span style="color:#f92672">=</span>Object.<span style="color:#a6e22e">getOwnPropertyDescriptor</span>(<span style="color:#a6e22e">e</span>,<span style="color:#a6e22e">i</span>)<span style="color:#f92672">||</span>{<span style="color:#a6e22e">value</span><span style="color:#f92672">:</span><span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">i</span>]}).<span style="color:#a6e22e">get</span><span style="color:#f92672">?</span><span style="color:#a6e22e">u</span><span style="color:#f92672">=</span><span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">set</span><span style="color:#f92672">?</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(<span style="color:#e6db74">&#39;[Getter/Setter]&#39;</span>,<span style="color:#e6db74">&#39;special&#39;</span>)<span style="color:#f92672">:</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(<span style="color:#e6db74">&#39;[Getter]&#39;</span>,<span style="color:#e6db74">&#39;special&#39;</span>)<span style="color:#f92672">:</span><span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">set</span><span style="color:#f92672">&amp;&amp;</span>(<span style="color:#a6e22e">u</span><span style="color:#f92672">=</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(<span style="color:#e6db74">&#39;[Setter]&#39;</span>,<span style="color:#e6db74">&#39;special&#39;</span>)),<span style="color:#a6e22e">b</span>(<span style="color:#a6e22e">o</span>,<span style="color:#a6e22e">i</span>)<span style="color:#f92672">||</span>(<span style="color:#a6e22e">a</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#39;[&#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">i</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#39;]&#39;</span>),<span style="color:#a6e22e">u</span><span style="color:#f92672">||</span>(<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">seen</span>.<span style="color:#a6e22e">indexOf</span>(<span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">value</span>)<span style="color:#f92672">&lt;</span><span style="color:#ae81ff">0</span><span style="color:#f92672">?</span>(<span style="color:#a6e22e">u</span><span style="color:#f92672">=</span><span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">t</span>)<span style="color:#f92672">?</span><span style="color:#a6e22e">r</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">value</span>,<span style="color:#66d9ef">null</span>)<span style="color:#f92672">:</span><span style="color:#a6e22e">r</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">value</span>,<span style="color:#a6e22e">t</span><span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>)).<span style="color:#a6e22e">indexOf</span>(<span style="color:#e6db74">&#39;\n&#39;</span>)<span style="color:#f92672">&gt;-</span><span style="color:#ae81ff">1</span><span style="color:#f92672">&amp;&amp;</span>(<span style="color:#a6e22e">u</span><span style="color:#f92672">=</span><span style="color:#a6e22e">l</span><span style="color:#f92672">?</span><span style="color:#a6e22e">u</span>.<span style="color:#a6e22e">split</span>(<span style="color:#e6db74">&#39;\n&#39;</span>).<span style="color:#a6e22e">map</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span><span style="color:#e6db74">&#39;  &#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">n</span>}).<span style="color:#a6e22e">join</span>(<span style="color:#e6db74">&#39;\n&#39;</span>).<span style="color:#a6e22e">substr</span>(<span style="color:#ae81ff">2</span>)<span style="color:#f92672">:</span><span style="color:#e6db74">&#39;\n&#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">u</span>.<span style="color:#a6e22e">split</span>(<span style="color:#e6db74">&#39;\n&#39;</span>).<span style="color:#a6e22e">map</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span><span style="color:#e6db74">&#39;   &#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">n</span>}).<span style="color:#a6e22e">join</span>(<span style="color:#e6db74">&#39;\n&#39;</span>))<span style="color:#f92672">:</span><span style="color:#a6e22e">u</span><span style="color:#f92672">=</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(<span style="color:#e6db74">&#39;[Circular]&#39;</span>,<span style="color:#e6db74">&#39;special&#39;</span>)),<span style="color:#a6e22e">s</span>(<span style="color:#a6e22e">a</span>)){<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">l</span><span style="color:#f92672">&amp;&amp;</span><span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">match</span>(<span style="color:#e6db74">/^\d+$/</span>))<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">u</span>;(<span style="color:#a6e22e">a</span><span style="color:#f92672">=</span><span style="color:#a6e22e">JSON</span>.<span style="color:#a6e22e">stringify</span>(<span style="color:#e6db74">&#39;&#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">i</span>)).<span style="color:#a6e22e">match</span>(<span style="color:#e6db74">/^&#34;([a-zA-Z_][a-zA-Z_0-9]*)&#34;$/</span>)<span style="color:#f92672">?</span>(<span style="color:#a6e22e">a</span><span style="color:#f92672">=</span><span style="color:#a6e22e">a</span>.<span style="color:#a6e22e">substr</span>(<span style="color:#ae81ff">1</span>,<span style="color:#a6e22e">a</span>.<span style="color:#a6e22e">length</span><span style="color:#f92672">-</span><span style="color:#ae81ff">2</span>),<span style="color:#a6e22e">a</span><span style="color:#f92672">=</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(<span style="color:#a6e22e">a</span>,<span style="color:#e6db74">&#39;name&#39;</span>))<span style="color:#f92672">:</span>(<span style="color:#a6e22e">a</span><span style="color:#f92672">=</span><span style="color:#a6e22e">a</span>.<span style="color:#a6e22e">replace</span>(<span style="color:#e6db74">/&#39;/g</span>,<span style="color:#e6db74">&#34;\\&#39;&#34;</span>).<span style="color:#a6e22e">replace</span>(<span style="color:#e6db74">/\\&#34;/g</span>,<span style="color:#e6db74">&#39;&#34;&#39;</span>).<span style="color:#a6e22e">replace</span>(<span style="color:#e6db74">/(^&#34;|&#34;$)/g</span>,<span style="color:#e6db74">&#34;&#39;&#34;</span>),<span style="color:#a6e22e">a</span><span style="color:#f92672">=</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stylize</span>(<span style="color:#a6e22e">a</span>,<span style="color:#e6db74">&#39;string&#39;</span>))}<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">a</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#39;: &#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">u</span>}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>,<span style="color:#a6e22e">r</span>){<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">reduce</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>){<span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>,<span style="color:#a6e22e">e</span>.<span style="color:#a6e22e">indexOf</span>(<span style="color:#e6db74">&#39;\n&#39;</span>)<span style="color:#f92672">&gt;=</span><span style="color:#ae81ff">0</span><span style="color:#f92672">&amp;&amp;</span><span style="color:#ae81ff">0</span>,<span style="color:#a6e22e">n</span><span style="color:#f92672">+</span><span style="color:#a6e22e">e</span>.<span style="color:#a6e22e">replace</span>(<span style="color:#e6db74">/\u001b\[\d\d?m/g</span>,<span style="color:#e6db74">&#39;&#39;</span>).<span style="color:#a6e22e">length</span><span style="color:#f92672">+</span><span style="color:#ae81ff">1</span>},<span style="color:#ae81ff">0</span>)<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">60</span><span style="color:#f92672">?</span><span style="color:#a6e22e">r</span>[<span style="color:#ae81ff">0</span>]<span style="color:#f92672">+</span>(<span style="color:#e6db74">&#39;&#39;</span><span style="color:#f92672">===</span><span style="color:#a6e22e">e</span><span style="color:#f92672">?</span><span style="color:#e6db74">&#39;&#39;</span><span style="color:#f92672">:</span><span style="color:#a6e22e">e</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#39;\n &#39;</span>)<span style="color:#f92672">+</span><span style="color:#e6db74">&#39; &#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">join</span>(<span style="color:#e6db74">&#39;,\n  &#39;</span>)<span style="color:#f92672">+</span><span style="color:#e6db74">&#39; &#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">r</span>[<span style="color:#ae81ff">1</span>]<span style="color:#f92672">:</span><span style="color:#a6e22e">r</span>[<span style="color:#ae81ff">0</span>]<span style="color:#f92672">+</span><span style="color:#a6e22e">e</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#39; &#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">join</span>(<span style="color:#e6db74">&#39;, &#39;</span>)<span style="color:#f92672">+</span><span style="color:#e6db74">&#39; &#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">r</span>[<span style="color:#ae81ff">1</span>]}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">u</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span><span style="color:#e6db74">&#39;boolean&#39;</span><span style="color:#f92672">==</span><span style="color:#66d9ef">typeof</span> <span style="color:#a6e22e">n</span>}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span> <span style="color:#66d9ef">null</span><span style="color:#f92672">===</span><span style="color:#a6e22e">n</span>}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span><span style="color:#e6db74">&#39;number&#39;</span><span style="color:#f92672">==</span><span style="color:#66d9ef">typeof</span> <span style="color:#a6e22e">n</span>}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">s</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span> <span style="color:#66d9ef">void</span> <span style="color:#ae81ff">0</span><span style="color:#f92672">===</span><span style="color:#a6e22e">n</span>}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">p</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">g</span>(<span style="color:#a6e22e">n</span>)<span style="color:#f92672">&amp;&amp;</span><span style="color:#e6db74">&#39;[object RegExp]&#39;</span><span style="color:#f92672">===</span><span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">n</span>)}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">g</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span><span style="color:#e6db74">&#39;object&#39;</span><span style="color:#f92672">==</span><span style="color:#66d9ef">typeof</span> <span style="color:#a6e22e">n</span><span style="color:#f92672">&amp;&amp;</span><span style="color:#66d9ef">null</span><span style="color:#f92672">!==</span><span style="color:#a6e22e">n</span>}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">y</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">g</span>(<span style="color:#a6e22e">n</span>)<span style="color:#f92672">&amp;&amp;</span><span style="color:#e6db74">&#39;[object Date]&#39;</span><span style="color:#f92672">===</span><span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">n</span>)}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">d</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">g</span>(<span style="color:#a6e22e">n</span>)<span style="color:#f92672">&amp;&amp;</span>(<span style="color:#e6db74">&#39;[object Error]&#39;</span><span style="color:#f92672">===</span><span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">n</span>)<span style="color:#f92672">||</span><span style="color:#a6e22e">n</span> <span style="color:#66d9ef">instanceof</span> Error)}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">v</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span><span style="color:#e6db74">&#39;function&#39;</span><span style="color:#f92672">==</span><span style="color:#66d9ef">typeof</span> <span style="color:#a6e22e">n</span>}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span> Object.<span style="color:#a6e22e">prototype</span>.<span style="color:#a6e22e">toString</span>.<span style="color:#a6e22e">call</span>(<span style="color:#a6e22e">n</span>)}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">b</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>){<span style="color:#66d9ef">return</span> Object.<span style="color:#a6e22e">prototype</span>.<span style="color:#a6e22e">hasOwnProperty</span>.<span style="color:#a6e22e">call</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>)}<span style="color:#66d9ef">return</span> <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">e</span>,<span style="color:#a6e22e">t</span>){<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">r</span>({<span style="color:#a6e22e">seen</span><span style="color:#f92672">:</span>[],<span style="color:#a6e22e">formatValueCalls</span><span style="color:#f92672">:</span><span style="color:#ae81ff">0</span>,<span style="color:#a6e22e">stylize</span><span style="color:#f92672">:</span><span style="color:#a6e22e">n</span>},<span style="color:#a6e22e">e</span>,<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">depth</span>)}})(),<span style="color:#a6e22e">r</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#39;(index)&#39;</span>,<span style="color:#a6e22e">t</span><span style="color:#f92672">=</span>{<span style="color:#a6e22e">trace</span><span style="color:#f92672">:</span><span style="color:#ae81ff">0</span>,<span style="color:#a6e22e">info</span><span style="color:#f92672">:</span><span style="color:#ae81ff">1</span>,<span style="color:#a6e22e">warn</span><span style="color:#f92672">:</span><span style="color:#ae81ff">2</span>,<span style="color:#a6e22e">error</span><span style="color:#f92672">:</span><span style="color:#ae81ff">3</span>},<span style="color:#a6e22e">o</span><span style="color:#f92672">=</span>[];<span style="color:#a6e22e">o</span>[<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">trace</span>]<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;debug&#39;</span>,<span style="color:#a6e22e">o</span>[<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">info</span>]<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;log&#39;</span>,<span style="color:#a6e22e">o</span>[<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">warn</span>]<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;warning&#39;</span>,<span style="color:#a6e22e">o</span>[<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">error</span>]<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;error&#39;</span>;<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">i</span><span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>;<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">r</span>){<span style="color:#66d9ef">return</span> <span style="color:#66d9ef">function</span>(){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">l</span>;<span style="color:#a6e22e">l</span><span style="color:#f92672">=</span><span style="color:#ae81ff">1</span><span style="color:#f92672">===</span><span style="color:#a6e22e">arguments</span>.<span style="color:#a6e22e">length</span><span style="color:#f92672">&amp;&amp;</span><span style="color:#e6db74">&#39;string&#39;</span><span style="color:#f92672">==</span><span style="color:#66d9ef">typeof</span> <span style="color:#a6e22e">arguments</span>[<span style="color:#ae81ff">0</span>]<span style="color:#f92672">?</span><span style="color:#a6e22e">arguments</span>[<span style="color:#ae81ff">0</span>]<span style="color:#f92672">:</span>Array.<span style="color:#a6e22e">prototype</span>.<span style="color:#a6e22e">map</span>.<span style="color:#a6e22e">call</span>(<span style="color:#a6e22e">arguments</span>,<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">e</span>(<span style="color:#a6e22e">n</span>,{<span style="color:#a6e22e">depth</span><span style="color:#f92672">:</span><span style="color:#ae81ff">10</span>})}).<span style="color:#a6e22e">join</span>(<span style="color:#e6db74">&#39;, &#39;</span>);<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">a</span><span style="color:#f92672">=</span><span style="color:#a6e22e">arguments</span>[<span style="color:#ae81ff">0</span>],<span style="color:#a6e22e">u</span><span style="color:#f92672">=</span><span style="color:#a6e22e">r</span>;<span style="color:#e6db74">&#39;string&#39;</span><span style="color:#f92672">==</span><span style="color:#66d9ef">typeof</span> <span style="color:#a6e22e">a</span><span style="color:#f92672">&amp;&amp;</span><span style="color:#e6db74">&#39;Warning: &#39;</span><span style="color:#f92672">===</span><span style="color:#a6e22e">a</span>.<span style="color:#a6e22e">slice</span>(<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">9</span>)<span style="color:#f92672">&amp;&amp;</span><span style="color:#a6e22e">u</span><span style="color:#f92672">&gt;=</span><span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">error</span><span style="color:#f92672">&amp;&amp;</span>(<span style="color:#a6e22e">u</span><span style="color:#f92672">=</span><span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">warn</span>),<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">__inspectorLog</span><span style="color:#f92672">&amp;&amp;</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">__inspectorLog</span>(<span style="color:#a6e22e">o</span>[<span style="color:#a6e22e">u</span>],<span style="color:#a6e22e">l</span>,[].<span style="color:#a6e22e">slice</span>.<span style="color:#a6e22e">call</span>(<span style="color:#a6e22e">arguments</span>),<span style="color:#a6e22e">i</span>),<span style="color:#a6e22e">s</span>.<span style="color:#a6e22e">length</span><span style="color:#f92672">&amp;&amp;</span>(<span style="color:#a6e22e">l</span><span style="color:#f92672">=</span><span style="color:#a6e22e">p</span>(<span style="color:#e6db74">&#39;&#39;</span>,<span style="color:#a6e22e">l</span>)),<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">nativeLoggingHook</span>(<span style="color:#a6e22e">l</span>,<span style="color:#a6e22e">u</span>)}}<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>){<span style="color:#66d9ef">return</span> Array.<span style="color:#a6e22e">apply</span>(<span style="color:#66d9ef">null</span>,Array(<span style="color:#a6e22e">e</span>)).<span style="color:#a6e22e">map</span>(<span style="color:#66d9ef">function</span>(){<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>})}<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">u</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#34;\u2502&#34;</span>,<span style="color:#a6e22e">f</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#34;\u2510&#34;</span>,<span style="color:#a6e22e">c</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#34;\u2518&#34;</span>,<span style="color:#a6e22e">s</span><span style="color:#f92672">=</span>[];<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">p</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>){<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">s</span>.<span style="color:#a6e22e">join</span>(<span style="color:#e6db74">&#39;&#39;</span>)<span style="color:#f92672">+</span><span style="color:#a6e22e">n</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#39; &#39;</span><span style="color:#f92672">+</span>(<span style="color:#a6e22e">e</span><span style="color:#f92672">||</span><span style="color:#e6db74">&#39;&#39;</span>)}<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">nativeLoggingHook</span>){<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">console</span>;<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">console</span><span style="color:#f92672">=</span>{<span style="color:#a6e22e">error</span><span style="color:#f92672">:</span><span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">error</span>),<span style="color:#a6e22e">info</span><span style="color:#f92672">:</span><span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">info</span>),<span style="color:#a6e22e">log</span><span style="color:#f92672">:</span><span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">info</span>),<span style="color:#a6e22e">warn</span><span style="color:#f92672">:</span><span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">warn</span>),<span style="color:#a6e22e">trace</span><span style="color:#f92672">:</span><span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">trace</span>),<span style="color:#a6e22e">debug</span><span style="color:#f92672">:</span><span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">trace</span>),<span style="color:#a6e22e">table</span><span style="color:#f92672">:</span><span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">e</span>){<span style="color:#66d9ef">if</span>(<span style="color:#f92672">!</span>Array.<span style="color:#a6e22e">isArray</span>(<span style="color:#a6e22e">e</span>)){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">o</span><span style="color:#f92672">=</span><span style="color:#a6e22e">e</span>;<span style="color:#66d9ef">for</span>(<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">i</span> <span style="color:#66d9ef">in</span> <span style="color:#a6e22e">e</span><span style="color:#f92672">=</span>[],<span style="color:#a6e22e">o</span>)<span style="color:#66d9ef">if</span>(<span style="color:#a6e22e">o</span>.<span style="color:#a6e22e">hasOwnProperty</span>(<span style="color:#a6e22e">i</span>)){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">l</span><span style="color:#f92672">=</span><span style="color:#a6e22e">o</span>[<span style="color:#a6e22e">i</span>];<span style="color:#a6e22e">l</span>[<span style="color:#a6e22e">r</span>]<span style="color:#f92672">=</span><span style="color:#a6e22e">i</span>,<span style="color:#a6e22e">e</span>.<span style="color:#a6e22e">push</span>(<span style="color:#a6e22e">l</span>)}}<span style="color:#66d9ef">if</span>(<span style="color:#ae81ff">0</span><span style="color:#f92672">!==</span><span style="color:#a6e22e">e</span>.<span style="color:#a6e22e">length</span>){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">u</span><span style="color:#f92672">=</span>Object.<span style="color:#a6e22e">keys</span>(<span style="color:#a6e22e">e</span>[<span style="color:#ae81ff">0</span>]).<span style="color:#a6e22e">sort</span>(),<span style="color:#a6e22e">f</span><span style="color:#f92672">=</span>[],<span style="color:#a6e22e">c</span><span style="color:#f92672">=</span>[];<span style="color:#a6e22e">u</span>.<span style="color:#a6e22e">forEach</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">r</span>){<span style="color:#a6e22e">c</span>[<span style="color:#a6e22e">r</span>]<span style="color:#f92672">=</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">length</span>;<span style="color:#66d9ef">for</span>(<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">t</span><span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>;<span style="color:#a6e22e">t</span><span style="color:#f92672">&lt;</span><span style="color:#a6e22e">e</span>.<span style="color:#a6e22e">length</span>;<span style="color:#a6e22e">t</span><span style="color:#f92672">++</span>){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">o</span><span style="color:#f92672">=</span>(<span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">t</span>][<span style="color:#a6e22e">n</span>]<span style="color:#f92672">||</span><span style="color:#e6db74">&#39;?&#39;</span>).<span style="color:#a6e22e">toString</span>();<span style="color:#a6e22e">f</span>[<span style="color:#a6e22e">t</span>]<span style="color:#f92672">=</span><span style="color:#a6e22e">f</span>[<span style="color:#a6e22e">t</span>]<span style="color:#f92672">||</span>[],<span style="color:#a6e22e">f</span>[<span style="color:#a6e22e">t</span>][<span style="color:#a6e22e">r</span>]<span style="color:#f92672">=</span><span style="color:#a6e22e">o</span>,<span style="color:#a6e22e">c</span>[<span style="color:#a6e22e">r</span>]<span style="color:#f92672">=</span>Math.<span style="color:#a6e22e">max</span>(<span style="color:#a6e22e">c</span>[<span style="color:#a6e22e">r</span>],<span style="color:#a6e22e">o</span>.<span style="color:#a6e22e">length</span>)}});<span style="color:#66d9ef">for</span>(<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">s</span><span style="color:#f92672">=</span><span style="color:#a6e22e">y</span>(<span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">map</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>){<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">a</span>(<span style="color:#e6db74">&#39;-&#39;</span>,<span style="color:#a6e22e">n</span>).<span style="color:#a6e22e">join</span>(<span style="color:#e6db74">&#39;&#39;</span>)}),<span style="color:#e6db74">&#39;-&#39;</span>),<span style="color:#a6e22e">p</span><span style="color:#f92672">=</span>[<span style="color:#a6e22e">y</span>(<span style="color:#a6e22e">u</span>),<span style="color:#a6e22e">s</span>],<span style="color:#a6e22e">g</span><span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>;<span style="color:#a6e22e">g</span><span style="color:#f92672">&lt;</span><span style="color:#a6e22e">e</span>.<span style="color:#a6e22e">length</span>;<span style="color:#a6e22e">g</span><span style="color:#f92672">++</span>)<span style="color:#a6e22e">p</span>.<span style="color:#a6e22e">push</span>(<span style="color:#a6e22e">y</span>(<span style="color:#a6e22e">f</span>[<span style="color:#a6e22e">g</span>]));<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">nativeLoggingHook</span>(<span style="color:#e6db74">&#39;\n&#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">p</span>.<span style="color:#a6e22e">join</span>(<span style="color:#e6db74">&#39;\n&#39;</span>),<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">info</span>)}<span style="color:#66d9ef">else</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">nativeLoggingHook</span>(<span style="color:#e6db74">&#39;&#39;</span>,<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">info</span>);<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">y</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>){<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">r</span><span style="color:#f92672">=</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">map</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>){<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span><span style="color:#f92672">+</span><span style="color:#a6e22e">a</span>(<span style="color:#e6db74">&#39; &#39;</span>,<span style="color:#a6e22e">c</span>[<span style="color:#a6e22e">e</span>]<span style="color:#f92672">-</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">length</span>).<span style="color:#a6e22e">join</span>(<span style="color:#e6db74">&#39;&#39;</span>)});<span style="color:#66d9ef">return</span> <span style="color:#a6e22e">e</span><span style="color:#f92672">=</span><span style="color:#a6e22e">e</span><span style="color:#f92672">||</span><span style="color:#e6db74">&#39; &#39;</span>,<span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">join</span>(<span style="color:#a6e22e">e</span><span style="color:#f92672">+</span><span style="color:#e6db74">&#39;|&#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">e</span>)}},<span style="color:#a6e22e">group</span><span style="color:#f92672">:</span><span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">e</span>){<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">nativeLoggingHook</span>(<span style="color:#a6e22e">p</span>(<span style="color:#a6e22e">f</span>,<span style="color:#a6e22e">e</span>),<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">info</span>),<span style="color:#a6e22e">s</span>.<span style="color:#a6e22e">push</span>(<span style="color:#a6e22e">u</span>)},<span style="color:#a6e22e">groupEnd</span><span style="color:#f92672">:</span><span style="color:#66d9ef">function</span>(){<span style="color:#a6e22e">s</span>.<span style="color:#a6e22e">pop</span>(),<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">nativeLoggingHook</span>(<span style="color:#a6e22e">p</span>(<span style="color:#a6e22e">c</span>),<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">info</span>)},<span style="color:#a6e22e">groupCollapsed</span><span style="color:#f92672">:</span><span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">e</span>){<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">nativeLoggingHook</span>(<span style="color:#a6e22e">p</span>(<span style="color:#a6e22e">c</span>,<span style="color:#a6e22e">e</span>),<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">info</span>),<span style="color:#a6e22e">s</span>.<span style="color:#a6e22e">push</span>(<span style="color:#a6e22e">u</span>)},<span style="color:#a6e22e">assert</span><span style="color:#f92672">:</span><span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">e</span>,<span style="color:#a6e22e">r</span>){<span style="color:#a6e22e">e</span><span style="color:#f92672">||</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">nativeLoggingHook</span>(<span style="color:#e6db74">&#39;Assertion failed: &#39;</span><span style="color:#f92672">+</span><span style="color:#a6e22e">r</span>,<span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">error</span>)}},Object.<span style="color:#a6e22e">defineProperty</span>(<span style="color:#a6e22e">console</span>,<span style="color:#e6db74">&#39;_isPolyfilled&#39;</span>,{<span style="color:#a6e22e">value</span><span style="color:#f92672">:!</span><span style="color:#ae81ff">0</span>,<span style="color:#a6e22e">enumerable</span><span style="color:#f92672">:!</span><span style="color:#ae81ff">1</span>})}<span style="color:#66d9ef">else</span> <span style="color:#66d9ef">if</span>(<span style="color:#f92672">!</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">console</span>){<span style="color:#66d9ef">function</span> <span style="color:#a6e22e">g</span>(){}<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">y</span><span style="color:#f92672">=</span><span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">print</span><span style="color:#f92672">||</span><span style="color:#a6e22e">g</span>;<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">console</span><span style="color:#f92672">=</span>{<span style="color:#a6e22e">debug</span><span style="color:#f92672">:</span><span style="color:#a6e22e">y</span>,<span style="color:#a6e22e">error</span><span style="color:#f92672">:</span><span style="color:#a6e22e">y</span>,<span style="color:#a6e22e">info</span><span style="color:#f92672">:</span><span style="color:#a6e22e">y</span>,<span style="color:#a6e22e">log</span><span style="color:#f92672">:</span><span style="color:#a6e22e">y</span>,<span style="color:#a6e22e">trace</span><span style="color:#f92672">:</span><span style="color:#a6e22e">y</span>,<span style="color:#a6e22e">warn</span><span style="color:#f92672">:</span><span style="color:#a6e22e">y</span>,<span style="color:#a6e22e">assert</span><span style="color:#f92672">:</span><span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>,<span style="color:#a6e22e">e</span>){<span style="color:#a6e22e">n</span><span style="color:#f92672">||</span><span style="color:#a6e22e">y</span>(<span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#a6e22e">Assertion</span> <span style="color:#a6e22e">failed</span><span style="color:#f92672">:</span> 
</span></span></code></pre></div><p>An unbundled code can be generated by dumping the entired bundled JS in an unminify (<a href="https://unminifyjs.sperixlabs.org">https://unminifyjs.sperixlabs.org</a>). This results in a more refined JS; as shown below.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">__BUNDLE_START_TIME__</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">this</span>.<span style="color:#a6e22e">nativePerformanceNow</span> <span style="color:#f92672">?</span> <span style="color:#a6e22e">nativePerformanceNow</span>() <span style="color:#f92672">:</span> Date.<span style="color:#a6e22e">now</span>(),
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">__DEV__</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">false</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">process</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">this</span>.<span style="color:#a6e22e">process</span> <span style="color:#f92672">||</span> {},
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">__METRO_GLOBAL_PREFIX__</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;&#39;</span>;
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">process</span>.<span style="color:#a6e22e">env</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">process</span>.<span style="color:#a6e22e">env</span> <span style="color:#f92672">||</span> {};
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">process</span>.<span style="color:#a6e22e">env</span>.<span style="color:#a6e22e">NODE_ENV</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">process</span>.<span style="color:#a6e22e">env</span>.<span style="color:#a6e22e">NODE_ENV</span> <span style="color:#f92672">||</span> <span style="color:#e6db74">&#34;production&#34;</span>;
</span></span><span style="display:flex;"><span><span style="color:#f92672">!</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">r</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;use strict&#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">__r</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">r</span>[<span style="color:#a6e22e">__METRO_GLOBAL_PREFIX__</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;__d&#34;</span>] <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">r</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (<span style="color:#66d9ef">null</span> <span style="color:#f92672">!=</span> <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">i</span>]) <span style="color:#66d9ef">return</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">dependencyMap</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">n</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">factory</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">r</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">hasError</span><span style="color:#f92672">:</span> <span style="color:#f92672">!</span><span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">importedAll</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">t</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">importedDefault</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">t</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">isInitialized</span><span style="color:#f92672">:</span> <span style="color:#f92672">!</span><span style="color:#ae81ff">1</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">publicModule</span><span style="color:#f92672">:</span> {
</span></span><span style="display:flex;"><span>                <span style="color:#a6e22e">exports</span><span style="color:#f92672">:</span> {}
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        };
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">i</span>] <span style="color:#f92672">=</span> <span style="color:#a6e22e">o</span>
</span></span><span style="display:flex;"><span>    }, <span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">__c</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">n</span>, <span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">__registerSegment</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">r</span>, <span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">i</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">s</span>[<span style="color:#a6e22e">r</span>] <span style="color:#f92672">=</span> <span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">i</span> <span style="color:#f92672">&amp;&amp;</span> <span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">forEach</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">t</span>) {
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">t</span>] <span style="color:#f92672">||</span> <span style="color:#a6e22e">v</span>.<span style="color:#a6e22e">has</span>(<span style="color:#a6e22e">t</span>) <span style="color:#f92672">||</span> <span style="color:#a6e22e">v</span>.<span style="color:#a6e22e">set</span>(<span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">r</span>)
</span></span><span style="display:flex;"><span>        })
</span></span><span style="display:flex;"><span>    };
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">e</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">n</span>(),
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">t</span> <span style="color:#f92672">=</span> {},
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> {}.<span style="color:#a6e22e">hasOwnProperty</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">function</span> <span style="color:#a6e22e">n</span>() {
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">e</span> <span style="color:#f92672">=</span> Object.<span style="color:#a6e22e">create</span>(<span style="color:#66d9ef">null</span>)
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">function</span> <span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">r</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">t</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">r</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">t</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">i</span> <span style="color:#f92672">&amp;&amp;</span> <span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">isInitialized</span> <span style="color:#f92672">?</span> <span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">publicModule</span>.<span style="color:#a6e22e">exports</span> <span style="color:#f92672">:</span> <span style="color:#a6e22e">d</span>(<span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">i</span>)
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">function</span> <span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">r</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">r</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (<span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">i</span>] <span style="color:#f92672">&amp;&amp;</span> <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">i</span>].<span style="color:#a6e22e">importedDefault</span> <span style="color:#f92672">!==</span> <span style="color:#a6e22e">t</span>) <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">i</span>].<span style="color:#a6e22e">importedDefault</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">n</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">i</span>),
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">n</span> <span style="color:#f92672">&amp;&amp;</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">__esModule</span> <span style="color:#f92672">?</span> <span style="color:#a6e22e">n</span>.<span style="color:#66d9ef">default</span> <span style="color:#f92672">:</span> <span style="color:#a6e22e">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">i</span>].<span style="color:#a6e22e">importedDefault</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">l</span>
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">function</span> <span style="color:#a6e22e">u</span>(<span style="color:#a6e22e">r</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">n</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">r</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (<span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">n</span>] <span style="color:#f92672">&amp;&amp;</span> <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">n</span>].<span style="color:#a6e22e">importedAll</span> <span style="color:#f92672">!==</span> <span style="color:#a6e22e">t</span>) <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">n</span>].<span style="color:#a6e22e">importedAll</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">n</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (<span style="color:#a6e22e">u</span> <span style="color:#f92672">&amp;&amp;</span> <span style="color:#a6e22e">u</span>.<span style="color:#a6e22e">__esModule</span>) <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">u</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">else</span> {
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">if</span> (<span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> {}, <span style="color:#a6e22e">u</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">a</span> <span style="color:#66d9ef">in</span> <span style="color:#a6e22e">u</span>) <span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">call</span>(<span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">a</span>) <span style="color:#f92672">&amp;&amp;</span> (<span style="color:#a6e22e">l</span>[<span style="color:#a6e22e">a</span>] <span style="color:#f92672">=</span> <span style="color:#a6e22e">u</span>[<span style="color:#a6e22e">a</span>]);
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">l</span>.<span style="color:#66d9ef">default</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">u</span>
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">n</span>].<span style="color:#a6e22e">importedAll</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">l</span>
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">o</span>.<span style="color:#a6e22e">importDefault</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>.<span style="color:#a6e22e">importAll</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">u</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">a</span> <span style="color:#f92672">=</span> <span style="color:#f92672">!</span><span style="color:#ae81ff">1</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">function</span> <span style="color:#a6e22e">d</span>(<span style="color:#a6e22e">e</span>, <span style="color:#a6e22e">t</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (<span style="color:#f92672">!</span><span style="color:#a6e22e">a</span> <span style="color:#f92672">&amp;&amp;</span> <span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">ErrorUtils</span>) {
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">a</span> <span style="color:#f92672">=</span> <span style="color:#f92672">!</span><span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">try</span> {
</span></span><span style="display:flex;"><span>                <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">e</span>, <span style="color:#a6e22e">t</span>)
</span></span><span style="display:flex;"><span>            } <span style="color:#66d9ef">catch</span> (<span style="color:#a6e22e">e</span>) {
</span></span><span style="display:flex;"><span>                <span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">ErrorUtils</span>.<span style="color:#a6e22e">reportFatalError</span>(<span style="color:#a6e22e">e</span>)
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">a</span> <span style="color:#f92672">=</span> <span style="color:#f92672">!</span><span style="color:#ae81ff">1</span>, <span style="color:#a6e22e">i</span>
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">e</span>, <span style="color:#a6e22e">t</span>)
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">f</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">16</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">c</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">65535</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">function</span> <span style="color:#a6e22e">p</span>(<span style="color:#a6e22e">r</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> {
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">segmentId</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">r</span> <span style="color:#f92672">&gt;&gt;&gt;</span> <span style="color:#a6e22e">f</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">localId</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">r</span> <span style="color:#f92672">&amp;</span> <span style="color:#a6e22e">c</span>
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">o</span>.<span style="color:#a6e22e">unpackModuleId</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">p</span>, <span style="color:#a6e22e">o</span>.<span style="color:#a6e22e">packModuleId</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">r</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> (<span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">segmentId</span> <span style="color:#f92672">&lt;&lt;</span> <span style="color:#a6e22e">f</span>) <span style="color:#f92672">+</span> <span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">localId</span>
</span></span><span style="display:flex;"><span>    };
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">s</span> <span style="color:#f92672">=</span> [],
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">v</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">Map</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">function</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">i</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (<span style="color:#f92672">!</span><span style="color:#a6e22e">i</span> <span style="color:#f92672">&amp;&amp;</span> <span style="color:#a6e22e">s</span>.<span style="color:#a6e22e">length</span> <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span>) {
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">n</span>, <span style="color:#a6e22e">a</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">null</span> <span style="color:#f92672">!==</span> (<span style="color:#a6e22e">n</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">v</span>.<span style="color:#a6e22e">get</span>(<span style="color:#a6e22e">t</span>)) <span style="color:#f92672">&amp;&amp;</span> <span style="color:#66d9ef">void</span> <span style="color:#ae81ff">0</span> <span style="color:#f92672">!==</span> <span style="color:#a6e22e">n</span> <span style="color:#f92672">?</span> <span style="color:#a6e22e">n</span> <span style="color:#f92672">:</span> <span style="color:#ae81ff">0</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#a6e22e">d</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">s</span>[<span style="color:#a6e22e">a</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">null</span> <span style="color:#f92672">!=</span> <span style="color:#a6e22e">d</span> <span style="color:#f92672">&amp;&amp;</span> (<span style="color:#a6e22e">d</span>(<span style="color:#a6e22e">t</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">t</span>], <span style="color:#a6e22e">v</span>.<span style="color:#66d9ef">delete</span>(<span style="color:#a6e22e">t</span>))
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">f</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">r</span>.<span style="color:#a6e22e">nativeRequire</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (<span style="color:#f92672">!</span><span style="color:#a6e22e">i</span> <span style="color:#f92672">&amp;&amp;</span> <span style="color:#a6e22e">f</span>) {
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">c</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">p</span>(<span style="color:#a6e22e">t</span>),
</span></span><span style="display:flex;"><span>                <span style="color:#a6e22e">h</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">segmentId</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">localId</span>, <span style="color:#a6e22e">h</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">e</span>[<span style="color:#a6e22e">t</span>]
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (<span style="color:#f92672">!</span><span style="color:#a6e22e">i</span>) <span style="color:#66d9ef">throw</span> Error(<span style="color:#e6db74">&#39;Requiring unknown module &#34;&#39;</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">t</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">&#39;&#34;.&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (<span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">hasError</span>) <span style="color:#66d9ef">throw</span> <span style="color:#a6e22e">_</span>(<span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">error</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">isInitialized</span> <span style="color:#f92672">=</span> <span style="color:#f92672">!</span><span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">m</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">i</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">g</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">m</span>.<span style="color:#a6e22e">factory</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">I</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">m</span>.<span style="color:#a6e22e">dependencyMap</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">try</span> {
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">M</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">publicModule</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">M</span>.<span style="color:#a6e22e">id</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">g</span>(<span style="color:#a6e22e">r</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">M</span>, <span style="color:#a6e22e">M</span>.<span style="color:#a6e22e">exports</span>, <span style="color:#a6e22e">I</span>), <span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">factory</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">void</span> <span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">dependencyMap</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">void</span> <span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">M</span>.<span style="color:#a6e22e">exports</span>
</span></span><span style="display:flex;"><span>        } <span style="color:#66d9ef">catch</span> (<span style="color:#a6e22e">r</span>) {
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">throw</span> <span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">hasError</span> <span style="color:#f92672">=</span> <span style="color:#f92672">!</span><span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">error</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">r</span>, <span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">isInitialized</span> <span style="color:#f92672">=</span> <span style="color:#f92672">!</span><span style="color:#ae81ff">1</span>, <span style="color:#a6e22e">i</span>.<span style="color:#a6e22e">publicModule</span>.<span style="color:#a6e22e">exports</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">void</span> <span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">r</span>
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span></code></pre></div><p>A deep dive through the unminified JS file reveals some default endpoints and constants such as:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span> <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">vfCashQueryStatement</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;vfCashQueryStatement&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">smartSurfPurchase</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;smartSurfPurchase&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">smartSurfBalanceSummary</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;smartSurfBalanceSummary&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">vfCashGetTerminalDetails</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;vfCashGetTerminalDetails&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">payMerchantQR</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;payMerchantQR&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">vfCashQRCodeDetails</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;getQRDetails&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">vfCashNewEndpoint</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;https://*****appmw.vodafone.com.gh/MVAppAPI/VF_Cash&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">vfCashNewEndpointUAT</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;https://*****appmw.vodafone.com.gh/MVAppAPIUAT/VF_Cash&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">vfCashDeleteFreqContacts</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;vfCashDeleteFreqContacts&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">vfCashGetFreqContacts</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;vfCashGetFreqContacts&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">vfCashAddFreqContact</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;vfCashAddFreqContacts&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">TestUrl</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;https://*****appmw.vodafone.com.gh/MVAppAPIUAT/User&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">vfCashTestUrl</span><span style="color:#f92672">:</span> <span style="color:#e6db74">&#34;https://*****appmw.vodafone.com.gh/MVAppAPI/User&#34;</span>,
</span></span><span style="display:flex;"><span>        .....
</span></span><span style="display:flex;"><span>};
</span></span></code></pre></div><p>The <code>UserLoginAction</code> is shown below:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">n</span>.<span style="color:#66d9ef">default</span>.<span style="color:#a6e22e">loginUserAction</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#a6e22e">S</span> <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>                    <span style="color:#a6e22e">username</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">t</span>,
</span></span><span style="display:flex;"><span>                    <span style="color:#a6e22e">password</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">s</span>,
</span></span><span style="display:flex;"><span>                    <span style="color:#a6e22e">action</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">u</span>,
</span></span><span style="display:flex;"><span>                    <span style="color:#a6e22e">OS</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">o</span>
</span></span><span style="display:flex;"><span>                };
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">s</span>) {
</span></span><span style="display:flex;"><span>                <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">x</span>(<span style="color:#f92672">!</span><span style="color:#ae81ff">0</span>)), (<span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">r</span>(<span style="color:#a6e22e">d</span>[<span style="color:#ae81ff">16</span>]).<span style="color:#a6e22e">makeRequest</span>)(<span style="color:#a6e22e">n</span>.<span style="color:#66d9ef">default</span>.<span style="color:#a6e22e">userAuthenticationUrl</span>, <span style="color:#e6db74">&#39;post&#39;</span>, <span style="color:#a6e22e">S</span>, <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>) {
</span></span><span style="display:flex;"><span>                    <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">x</span>(<span style="color:#f92672">!</span><span style="color:#ae81ff">1</span>));
</span></span><span style="display:flex;"><span>                    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">RESPONSECODE</span>,
</span></span><span style="display:flex;"><span>                        <span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">s</span>(),
</span></span><span style="display:flex;"><span>                        <span style="color:#a6e22e">S</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">JSON</span>.<span style="color:#a6e22e">parse</span>(<span style="color:#a6e22e">JSON</span>.<span style="color:#a6e22e">stringify</span>(<span style="color:#a6e22e">u</span>.<span style="color:#a6e22e">authenticate</span>.<span style="color:#a6e22e">userData</span>)),
</span></span><span style="display:flex;"><span>                        <span style="color:#a6e22e">E</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">JSON</span>.<span style="color:#a6e22e">parse</span>(<span style="color:#a6e22e">JSON</span>.<span style="color:#a6e22e">stringify</span>(<span style="color:#a6e22e">u</span>.<span style="color:#a6e22e">authenticate</span>.<span style="color:#a6e22e">defaultService</span>));
</span></span><span style="display:flex;"><span>                    <span style="color:#66d9ef">if</span> (<span style="color:#ae81ff">0</span> <span style="color:#f92672">==</span> <span style="color:#a6e22e">o</span>) {
</span></span><span style="display:flex;"><span>                        <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">f</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">SESSION</span>.<span style="color:#a6e22e">key</span>,
</span></span><span style="display:flex;"><span>                            <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">SESSION</span>.<span style="color:#a6e22e">secret</span>,
</span></span><span style="display:flex;"><span>                            <span style="color:#a6e22e">p</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">SESSION</span>.<span style="color:#a6e22e">session</span>,
</span></span><span style="display:flex;"><span>                            <span style="color:#a6e22e">A</span> <span style="color:#f92672">=</span> (<span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">r</span>(<span style="color:#a6e22e">d</span>[<span style="color:#ae81ff">17</span>]).<span style="color:#a6e22e">handleSessionVals</span>)(<span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">p</span>, <span style="color:#a6e22e">l</span>),
</span></span><span style="display:flex;"><span>                            <span style="color:#a6e22e">R</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">p</span>.<span style="color:#a6e22e">replace</span>(<span style="color:#e6db74">/-/g</span>, <span style="color:#e6db74">&#39;&#39;</span>);
</span></span><span style="display:flex;"><span>                        <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">RESPONSEDATA</span>.<span style="color:#a6e22e">ServiceList</span>;
</span></span><span style="display:flex;"><span>                        <span style="color:#a6e22e">S</span>.<span style="color:#a6e22e">formattedSessionId</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">R</span>, <span style="color:#a6e22e">S</span>.<span style="color:#a6e22e">hashedKey</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">A</span>, <span style="color:#a6e22e">S</span>.<span style="color:#a6e22e">sessionId</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">p</span>, <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">z</span>(<span style="color:#a6e22e">S</span>, <span style="color:#a6e22e">E</span>, <span style="color:#e6db74">&#39;&#39;</span>)), <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">w</span>(<span style="color:#f92672">!</span><span style="color:#ae81ff">0</span>)), <span style="color:#a6e22e">c</span>(<span style="color:#f92672">!</span><span style="color:#ae81ff">0</span>, <span style="color:#e6db74">&#39;Successfully logged in&#39;</span>)
</span></span><span style="display:flex;"><span>                    } <span style="color:#66d9ef">else</span> <span style="color:#66d9ef">if</span> (<span style="color:#ae81ff">1</span> <span style="color:#f92672">==</span> <span style="color:#a6e22e">o</span>) {
</span></span><span style="display:flex;"><span>                        <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">RESPONSEMESSAGE</span>;
</span></span><span style="display:flex;"><span>                        <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">w</span>(<span style="color:#f92672">!</span><span style="color:#ae81ff">1</span>))
</span></span><span style="display:flex;"><span>                    } <span style="color:#66d9ef">else</span> <span style="color:#66d9ef">if</span> (<span style="color:#ae81ff">2</span> <span style="color:#f92672">==</span> <span style="color:#a6e22e">o</span>) {
</span></span><span style="display:flex;"><span>                        <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">RESPONSEMESSAGE</span>;
</span></span><span style="display:flex;"><span>                        <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">w</span>(<span style="color:#f92672">!</span><span style="color:#ae81ff">1</span>))
</span></span><span style="display:flex;"><span>                    }
</span></span><span style="display:flex;"><span>                }, <span style="color:#66d9ef">null</span>)
</span></span><span style="display:flex;"><span>            }
</span></span></code></pre></div><p>The parameters for the user login action are the <strong>username</strong>, <strong>password</strong>, <strong>action</strong> and <strong>os</strong>. From the code snippet, the response returns a session <strong>key</strong>, <strong>secret</strong> and a <strong>session</strong> value.</p>
<p>A <strong>hashedKey</strong> is computed from the expression <code>A = (0, r(d[17]).handleSessionVals)(f, p, l)</code>. A <strong>formattedSesssionId</strong> is also derived from the expression <code>R = p.replace(/-/g, '')</code>.</p>
<p><strong>handleSessionVals</strong> function is shown below:</p>
<pre tabindex="0"><code>e.handleSessionVals = function(t, c, o) {
    var u = t.concat(c).concat(o);
    return n.default.hex_md5(u).substring(0, 16)
};
    
</code></pre><p>From the above function, the <strong>handleSessionVals</strong> takes the following parameters respectively: <strong>SESSION.key</strong>, <strong>SESSION.session</strong>, and <strong>SESSION.secret</strong>. To generate the <strong>handleSessionVals</strong>, the <strong>SESSION.key</strong> is concatenated with the <strong>SESSION.session</strong>, and further concatenated with the <strong>SESSION.secret</strong>. The result is passed to <strong>hex_md5</strong> function and first <strong>16</strong> characters returned.</p>
<p>The <code>hex_md5</code> function is shown below:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span><span style="color:#a6e22e">m</span>.<span style="color:#a6e22e">exports</span>.<span style="color:#a6e22e">hex_md5</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">_</span>(<span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">n</span>), <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">length</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">t</span>))
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>It also relies on other subroutines as shown below:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">n</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&#34;</span>, <span style="color:#a6e22e">t</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">8</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">n</span>, <span style="color:#a6e22e">t</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">t</span> <span style="color:#f92672">&gt;&gt;</span> <span style="color:#ae81ff">5</span>] <span style="color:#f92672">|=</span> <span style="color:#ae81ff">128</span> <span style="color:#f92672">&lt;&lt;</span> <span style="color:#a6e22e">t</span> <span style="color:#f92672">%</span> <span style="color:#ae81ff">32</span>, <span style="color:#a6e22e">n</span>[<span style="color:#ae81ff">14</span> <span style="color:#f92672">+</span> (<span style="color:#a6e22e">t</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">64</span> <span style="color:#f92672">&gt;&gt;&gt;</span> <span style="color:#ae81ff">9</span> <span style="color:#f92672">&lt;&lt;</span> <span style="color:#ae81ff">4</span>)] <span style="color:#f92672">=</span> <span style="color:#a6e22e">t</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">1732584193</span>, <span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">271733879</span>, <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">1732584194</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">271733878</span>, <span style="color:#a6e22e">d</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; <span style="color:#a6e22e">d</span> <span style="color:#f92672">&lt;</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">length</span>; <span style="color:#a6e22e">d</span> <span style="color:#f92672">+=</span> <span style="color:#ae81ff">16</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">_</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">o</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">s</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">u</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">x</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">i</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#a6e22e">A</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">l</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">0</span>], <span style="color:#ae81ff">7</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">680876936</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span>], <span style="color:#ae81ff">12</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">389564586</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">2</span>], <span style="color:#ae81ff">17</span>, <span style="color:#ae81ff">606105819</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">3</span>], <span style="color:#ae81ff">22</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1044525330</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">4</span>], <span style="color:#ae81ff">7</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">176418897</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">5</span>], <span style="color:#ae81ff">12</span>, <span style="color:#ae81ff">1200080426</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">6</span>], <span style="color:#ae81ff">17</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1473231341</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">7</span>], <span style="color:#ae81ff">22</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">45705983</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">8</span>], <span style="color:#ae81ff">7</span>, <span style="color:#ae81ff">1770035416</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">9</span>], <span style="color:#ae81ff">12</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1958414417</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">10</span>], <span style="color:#ae81ff">17</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">42063</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">11</span>], <span style="color:#ae81ff">22</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1990404162</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">12</span>], <span style="color:#ae81ff">7</span>, <span style="color:#ae81ff">1804603682</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">13</span>], <span style="color:#ae81ff">12</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">40341101</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">14</span>], <span style="color:#ae81ff">17</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1502002290</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">15</span>], <span style="color:#ae81ff">22</span>, <span style="color:#ae81ff">1236535329</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span>], <span style="color:#ae81ff">5</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">165796510</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">6</span>], <span style="color:#ae81ff">9</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1069501632</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">11</span>], <span style="color:#ae81ff">14</span>, <span style="color:#ae81ff">643717713</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">0</span>], <span style="color:#ae81ff">20</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">373897302</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">5</span>], <span style="color:#ae81ff">5</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">701558691</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">10</span>], <span style="color:#ae81ff">9</span>, <span style="color:#ae81ff">38016083</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">15</span>], <span style="color:#ae81ff">14</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">660478335</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">4</span>], <span style="color:#ae81ff">20</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">405537848</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">9</span>], <span style="color:#ae81ff">5</span>, <span style="color:#ae81ff">568446438</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">14</span>], <span style="color:#ae81ff">9</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1019803690</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">3</span>], <span style="color:#ae81ff">14</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">187363961</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">8</span>], <span style="color:#ae81ff">20</span>, <span style="color:#ae81ff">1163531501</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">13</span>], <span style="color:#ae81ff">5</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1444681467</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">2</span>], <span style="color:#ae81ff">9</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">51403784</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">7</span>], <span style="color:#ae81ff">14</span>, <span style="color:#ae81ff">1735328473</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">12</span>], <span style="color:#ae81ff">20</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1926607734</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">5</span>], <span style="color:#ae81ff">4</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">378558</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">8</span>], <span style="color:#ae81ff">11</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">2022574463</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">11</span>], <span style="color:#ae81ff">16</span>, <span style="color:#ae81ff">1839030562</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">14</span>], <span style="color:#ae81ff">23</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">35309556</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span>], <span style="color:#ae81ff">4</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1530992060</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">4</span>], <span style="color:#ae81ff">11</span>, <span style="color:#ae81ff">1272893353</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">7</span>], <span style="color:#ae81ff">16</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">155497632</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">10</span>], <span style="color:#ae81ff">23</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1094730640</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">13</span>], <span style="color:#ae81ff">4</span>, <span style="color:#ae81ff">681279174</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">0</span>], <span style="color:#ae81ff">11</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">358537222</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">3</span>], <span style="color:#ae81ff">16</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">722521979</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">6</span>], <span style="color:#ae81ff">23</span>, <span style="color:#ae81ff">76029189</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">9</span>], <span style="color:#ae81ff">4</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">640364487</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">12</span>], <span style="color:#ae81ff">11</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">421815835</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">15</span>], <span style="color:#ae81ff">16</span>, <span style="color:#ae81ff">530742520</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">2</span>], <span style="color:#ae81ff">23</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">995338651</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">0</span>], <span style="color:#ae81ff">6</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">198630844</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">7</span>], <span style="color:#ae81ff">10</span>, <span style="color:#ae81ff">1126891415</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">14</span>], <span style="color:#ae81ff">15</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1416354905</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">5</span>], <span style="color:#ae81ff">21</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">57434055</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">12</span>], <span style="color:#ae81ff">6</span>, <span style="color:#ae81ff">1700485571</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">3</span>], <span style="color:#ae81ff">10</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1894986606</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">10</span>], <span style="color:#ae81ff">15</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1051523</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span>], <span style="color:#ae81ff">21</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">2054922799</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">8</span>], <span style="color:#ae81ff">6</span>, <span style="color:#ae81ff">1873313359</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">15</span>], <span style="color:#ae81ff">10</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">30611744</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">6</span>], <span style="color:#ae81ff">15</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1560198380</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">13</span>], <span style="color:#ae81ff">21</span>, <span style="color:#ae81ff">1309151649</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">4</span>], <span style="color:#ae81ff">6</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">145523070</span>), <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">11</span>], <span style="color:#ae81ff">10</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1120210379</span>), <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">2</span>], <span style="color:#ae81ff">15</span>, <span style="color:#ae81ff">718787259</span>), <span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">d</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">9</span>], <span style="color:#ae81ff">21</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">343485551</span>), <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">v</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">_</span>), <span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">v</span>(<span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">s</span>), <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">v</span>(<span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">x</span>), <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">v</span>(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">A</span>)
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> Array(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">i</span>, <span style="color:#a6e22e">l</span>)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">u</span>(<span style="color:#a6e22e">n</span>, <span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">c</span>, <span style="color:#a6e22e">a</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">v</span>((<span style="color:#a6e22e">f</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">v</span>(<span style="color:#a6e22e">v</span>(<span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">n</span>), <span style="color:#a6e22e">v</span>(<span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">a</span>))) <span style="color:#f92672">&lt;&lt;</span> (<span style="color:#a6e22e">h</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">c</span>) <span style="color:#f92672">|</span> <span style="color:#a6e22e">f</span> <span style="color:#f92672">&gt;&gt;&gt;</span> <span style="color:#ae81ff">32</span> <span style="color:#f92672">-</span> <span style="color:#a6e22e">h</span>, <span style="color:#a6e22e">o</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">h</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">c</span>(<span style="color:#a6e22e">n</span>, <span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">c</span>, <span style="color:#a6e22e">a</span>, <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">h</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">u</span>(<span style="color:#a6e22e">t</span> <span style="color:#f92672">&amp;</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">|</span> <span style="color:#f92672">~</span><span style="color:#a6e22e">t</span> <span style="color:#f92672">&amp;</span> <span style="color:#a6e22e">c</span>, <span style="color:#a6e22e">n</span>, <span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">a</span>, <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">h</span>)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">a</span>(<span style="color:#a6e22e">n</span>, <span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">c</span>, <span style="color:#a6e22e">a</span>, <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">h</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">u</span>(<span style="color:#a6e22e">t</span> <span style="color:#f92672">&amp;</span> <span style="color:#a6e22e">c</span> <span style="color:#f92672">|</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">&amp;</span> <span style="color:#f92672">~</span><span style="color:#a6e22e">c</span>, <span style="color:#a6e22e">n</span>, <span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">a</span>, <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">h</span>)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">f</span>(<span style="color:#a6e22e">n</span>, <span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">c</span>, <span style="color:#a6e22e">a</span>, <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">h</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">u</span>(<span style="color:#a6e22e">t</span> <span style="color:#f92672">^</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">^</span> <span style="color:#a6e22e">c</span>, <span style="color:#a6e22e">n</span>, <span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">a</span>, <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">h</span>)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">h</span>(<span style="color:#a6e22e">n</span>, <span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">c</span>, <span style="color:#a6e22e">a</span>, <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">h</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">u</span>(<span style="color:#a6e22e">o</span> <span style="color:#f92672">^</span> (<span style="color:#a6e22e">t</span> <span style="color:#f92672">|</span> <span style="color:#f92672">~</span><span style="color:#a6e22e">c</span>), <span style="color:#a6e22e">n</span>, <span style="color:#a6e22e">t</span>, <span style="color:#a6e22e">a</span>, <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">h</span>)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">i</span>(<span style="color:#a6e22e">n</span>, <span style="color:#a6e22e">u</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">c</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">length</span> <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">16</span> <span style="color:#f92672">&amp;&amp;</span> (<span style="color:#a6e22e">c</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">c</span>, <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">length</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">t</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">a</span> <span style="color:#f92672">=</span> Array(<span style="color:#ae81ff">16</span>), <span style="color:#a6e22e">f</span> <span style="color:#f92672">=</span> Array(<span style="color:#ae81ff">16</span>), <span style="color:#a6e22e">h</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; <span style="color:#a6e22e">h</span> <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">16</span>; <span style="color:#a6e22e">h</span><span style="color:#f92672">++</span>) <span style="color:#a6e22e">a</span>[<span style="color:#a6e22e">h</span>] <span style="color:#f92672">=</span> <span style="color:#ae81ff">909522486</span> <span style="color:#f92672">^</span> <span style="color:#a6e22e">c</span>[<span style="color:#a6e22e">h</span>], <span style="color:#a6e22e">f</span>[<span style="color:#a6e22e">h</span>] <span style="color:#f92672">=</span> <span style="color:#ae81ff">1549556828</span> <span style="color:#f92672">^</span> <span style="color:#a6e22e">c</span>[<span style="color:#a6e22e">h</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">i</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">a</span>.<span style="color:#a6e22e">concat</span>(<span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">u</span>)), <span style="color:#ae81ff">512</span> <span style="color:#f92672">+</span> <span style="color:#a6e22e">u</span>.<span style="color:#a6e22e">length</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">t</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">o</span>(<span style="color:#a6e22e">f</span>.<span style="color:#a6e22e">concat</span>(<span style="color:#a6e22e">i</span>), <span style="color:#ae81ff">640</span>)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">v</span>(<span style="color:#a6e22e">n</span>, <span style="color:#a6e22e">t</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> (<span style="color:#ae81ff">65535</span> <span style="color:#f92672">&amp;</span> <span style="color:#a6e22e">n</span>) <span style="color:#f92672">+</span> (<span style="color:#ae81ff">65535</span> <span style="color:#f92672">&amp;</span> <span style="color:#a6e22e">t</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> (<span style="color:#a6e22e">n</span> <span style="color:#f92672">&gt;&gt;</span> <span style="color:#ae81ff">16</span>) <span style="color:#f92672">+</span> (<span style="color:#a6e22e">t</span> <span style="color:#f92672">&gt;&gt;</span> <span style="color:#ae81ff">16</span>) <span style="color:#f92672">+</span> (<span style="color:#a6e22e">o</span> <span style="color:#f92672">&gt;&gt;</span> <span style="color:#ae81ff">16</span>) <span style="color:#f92672">&lt;&lt;</span> <span style="color:#ae81ff">16</span> <span style="color:#f92672">|</span> <span style="color:#ae81ff">65535</span> <span style="color:#f92672">&amp;</span> <span style="color:#a6e22e">o</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">l</span>(<span style="color:#a6e22e">n</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> Array(), <span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; <span style="color:#a6e22e">u</span> <span style="color:#f92672">&lt;</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">length</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">t</span>; <span style="color:#a6e22e">u</span> <span style="color:#f92672">+=</span> <span style="color:#a6e22e">t</span>) <span style="color:#a6e22e">o</span>[<span style="color:#a6e22e">u</span> <span style="color:#f92672">&gt;&gt;</span> <span style="color:#ae81ff">5</span>] <span style="color:#f92672">|=</span> (<span style="color:#ae81ff">255</span> <span style="color:#f92672">&amp;</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">charCodeAt</span>(<span style="color:#a6e22e">u</span> <span style="color:#f92672">/</span> <span style="color:#a6e22e">t</span>)) <span style="color:#f92672">&lt;&lt;</span> <span style="color:#a6e22e">u</span> <span style="color:#f92672">%</span> <span style="color:#ae81ff">32</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">o</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">d</span>(<span style="color:#a6e22e">n</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&#34;</span>, <span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; <span style="color:#a6e22e">u</span> <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">32</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">length</span>; <span style="color:#a6e22e">u</span> <span style="color:#f92672">+=</span> <span style="color:#a6e22e">t</span>) <span style="color:#a6e22e">o</span> <span style="color:#f92672">+=</span> String.<span style="color:#a6e22e">fromCharCode</span>(<span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">u</span> <span style="color:#f92672">&gt;&gt;</span> <span style="color:#ae81ff">5</span>] <span style="color:#f92672">&gt;&gt;&gt;</span> <span style="color:#a6e22e">u</span> <span style="color:#f92672">%</span> <span style="color:#ae81ff">32</span> <span style="color:#f92672">&amp;</span> <span style="color:#ae81ff">255</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">o</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">_</span>(<span style="color:#a6e22e">n</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">t</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&#34;</span>, <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; <span style="color:#a6e22e">o</span> <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">4</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">length</span>; <span style="color:#a6e22e">o</span><span style="color:#f92672">++</span>) <span style="color:#a6e22e">t</span> <span style="color:#f92672">+=</span> <span style="color:#e6db74">&#34;0123456789abcdef&#34;</span>.<span style="color:#a6e22e">charAt</span>(<span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">o</span> <span style="color:#f92672">&gt;&gt;</span> <span style="color:#ae81ff">2</span>] <span style="color:#f92672">&gt;&gt;</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">%</span> <span style="color:#ae81ff">4</span> <span style="color:#f92672">*</span> <span style="color:#ae81ff">8</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">4</span> <span style="color:#f92672">&amp;</span> <span style="color:#ae81ff">15</span>) <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;0123456789abcdef&#34;</span>.<span style="color:#a6e22e">charAt</span>(<span style="color:#a6e22e">n</span>[<span style="color:#a6e22e">o</span> <span style="color:#f92672">&gt;&gt;</span> <span style="color:#ae81ff">2</span>] <span style="color:#f92672">&gt;&gt;</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">%</span> <span style="color:#ae81ff">4</span> <span style="color:#f92672">*</span> <span style="color:#ae81ff">8</span> <span style="color:#f92672">&amp;</span> <span style="color:#ae81ff">15</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">t</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">function</span> <span style="color:#a6e22e">s</span>(<span style="color:#a6e22e">t</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&#34;</span>, <span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; <span style="color:#a6e22e">u</span> <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">4</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">length</span>; <span style="color:#a6e22e">u</span> <span style="color:#f92672">+=</span> <span style="color:#ae81ff">3</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">var</span> <span style="color:#a6e22e">c</span> <span style="color:#f92672">=</span> (<span style="color:#a6e22e">t</span>[<span style="color:#a6e22e">u</span> <span style="color:#f92672">&gt;&gt;</span> <span style="color:#ae81ff">2</span>] <span style="color:#f92672">&gt;&gt;</span> <span style="color:#a6e22e">u</span> <span style="color:#f92672">%</span> <span style="color:#ae81ff">4</span> <span style="color:#f92672">*</span> <span style="color:#ae81ff">8</span> <span style="color:#f92672">&amp;</span> <span style="color:#ae81ff">255</span>) <span style="color:#f92672">&lt;&lt;</span> <span style="color:#ae81ff">16</span> <span style="color:#f92672">|</span> (<span style="color:#a6e22e">t</span>[<span style="color:#a6e22e">u</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span> <span style="color:#f92672">&gt;&gt;</span> <span style="color:#ae81ff">2</span>] <span style="color:#f92672">&gt;&gt;</span> (<span style="color:#a6e22e">u</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span>) <span style="color:#f92672">%</span> <span style="color:#ae81ff">4</span> <span style="color:#f92672">*</span> <span style="color:#ae81ff">8</span> <span style="color:#f92672">&amp;</span> <span style="color:#ae81ff">255</span>) <span style="color:#f92672">&lt;&lt;</span> <span style="color:#ae81ff">8</span> <span style="color:#f92672">|</span> <span style="color:#a6e22e">t</span>[<span style="color:#a6e22e">u</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">2</span> <span style="color:#f92672">&gt;&gt;</span> <span style="color:#ae81ff">2</span>] <span style="color:#f92672">&gt;&gt;</span> (<span style="color:#a6e22e">u</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">2</span>) <span style="color:#f92672">%</span> <span style="color:#ae81ff">4</span> <span style="color:#f92672">*</span> <span style="color:#ae81ff">8</span> <span style="color:#f92672">&amp;</span> <span style="color:#ae81ff">255</span>, <span style="color:#a6e22e">a</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; <span style="color:#a6e22e">a</span> <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">4</span>; <span style="color:#a6e22e">a</span><span style="color:#f92672">++</span>) <span style="color:#ae81ff">8</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">u</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">6</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">a</span> <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">32</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">length</span> <span style="color:#f92672">?</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">+=</span> <span style="color:#a6e22e">n</span> <span style="color:#f92672">:</span> <span style="color:#a6e22e">o</span> <span style="color:#f92672">+=</span> <span style="color:#e6db74">&#34;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#34;</span>.<span style="color:#a6e22e">charAt</span>(<span style="color:#a6e22e">c</span> <span style="color:#f92672">&gt;&gt;</span> <span style="color:#ae81ff">6</span> <span style="color:#f92672">*</span> (<span style="color:#ae81ff">3</span> <span style="color:#f92672">-</span> <span style="color:#a6e22e">a</span>) <span style="color:#f92672">&amp;</span> <span style="color:#ae81ff">63</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">o</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>From the analysis of the bundle JS, all network requests aside the <code>UserLoginAction</code> involve an <code>encryption</code> of the request payload and a <code>decryption</code> of the response payload. Example is shown below:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span><span style="color:#66d9ef">return</span> <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">t</span>) {
</span></span><span style="display:flex;"><span>	(<span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">r</span>(<span style="color:#a6e22e">d</span>[<span style="color:#ae81ff">18</span>]).<span style="color:#a6e22e">encrypt2</span>)(<span style="color:#a6e22e">l</span>, <span style="color:#a6e22e">S</span>, <span style="color:#a6e22e">S</span>).<span style="color:#a6e22e">then</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">s</span>) {
</span></span><span style="display:flex;"><span>	    <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">Y</span>(<span style="color:#e6db74">&#39;deleting default service&#39;</span>));
</span></span><span style="display:flex;"><span>	    <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">f</span> <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>	        <span style="color:#a6e22e">requestBody</span><span style="color:#f92672">:</span> <span style="color:#a6e22e">s</span>
</span></span><span style="display:flex;"><span>	    };
</span></span><span style="display:flex;"><span>	    (<span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">r</span>(<span style="color:#a6e22e">d</span>[<span style="color:#ae81ff">16</span>]).<span style="color:#a6e22e">makeRequest</span>)(<span style="color:#a6e22e">n</span>.<span style="color:#66d9ef">default</span>.<span style="color:#a6e22e">userAuthenticationUrl</span>, <span style="color:#e6db74">&#39;post&#39;</span>, <span style="color:#a6e22e">f</span>, <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>) {
</span></span><span style="display:flex;"><span>	        (<span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">r</span>(<span style="color:#a6e22e">d</span>[<span style="color:#ae81ff">18</span>]).<span style="color:#a6e22e">decrypt2</span>)(<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">responseBody</span>, <span style="color:#a6e22e">S</span>, <span style="color:#a6e22e">S</span>).<span style="color:#a6e22e">then</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>) {
</span></span><span style="display:flex;"><span>	            <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">Y</span>(<span style="color:#e6db74">&#39;deleting account response&#39;</span>));
</span></span><span style="display:flex;"><span>	            <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">s</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">JSON</span>.<span style="color:#a6e22e">parse</span>(<span style="color:#a6e22e">n</span>),
</span></span><span style="display:flex;"><span>	                <span style="color:#a6e22e">f</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">s</span>.<span style="color:#a6e22e">RESPONSECODE</span>;
</span></span><span style="display:flex;"><span>	            <span style="color:#66d9ef">if</span> (<span style="color:#ae81ff">0</span> <span style="color:#f92672">===</span> <span style="color:#a6e22e">f</span>) {
</span></span><span style="display:flex;"><span>	                <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">ie</span>()), <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">se</span>(<span style="color:#a6e22e">E</span>, <span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">c</span>, <span style="color:#a6e22e">u</span>, <span style="color:#a6e22e">S</span>)), <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">Y</span>(<span style="color:#e6db74">&#39;deleting account passed&#39;</span>));
</span></span><span style="display:flex;"><span>	                <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">s</span>.<span style="color:#a6e22e">RESPONSEMESSAGE</span>;
</span></span><span style="display:flex;"><span>	                <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">oe</span>(<span style="color:#a6e22e">l</span>))
</span></span><span style="display:flex;"><span>	            } <span style="color:#66d9ef">else</span> <span style="color:#66d9ef">if</span> (<span style="color:#ae81ff">1</span> <span style="color:#f92672">===</span> <span style="color:#a6e22e">f</span> <span style="color:#f92672">||</span> <span style="color:#ae81ff">2</span> <span style="color:#f92672">===</span> <span style="color:#a6e22e">f</span>) {
</span></span><span style="display:flex;"><span>	                <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">Y</span>(<span style="color:#e6db74">&#39;deleting account failed&#39;</span>));
</span></span><span style="display:flex;"><span>	                <span style="color:#66d9ef">var</span> <span style="color:#a6e22e">l</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">s</span>.<span style="color:#a6e22e">RESPONSEMESSAGE</span>;
</span></span><span style="display:flex;"><span>	                <span style="color:#a6e22e">t</span>(<span style="color:#a6e22e">oe</span>(<span style="color:#a6e22e">l</span>))
</span></span><span style="display:flex;"><span>	            }
</span></span><span style="display:flex;"><span>	        })
</span></span><span style="display:flex;"><span>	    }, <span style="color:#a6e22e">p</span>)
</span></span><span style="display:flex;"><span>	})
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>The next action is to figure out what <code>encrypt2</code> and <code>decrypt2</code> do. These two functions are shown below:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span><span style="color:#a6e22e">e</span>.<span style="color:#a6e22e">encrypt2</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">e</span>.<span style="color:#a6e22e">decrypt2</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">void</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">var</span> <span style="color:#a6e22e">n</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">r</span>(<span style="color:#a6e22e">d</span>[<span style="color:#ae81ff">0</span>])(<span style="color:#a6e22e">r</span>(<span style="color:#a6e22e">d</span>[<span style="color:#ae81ff">1</span>])),
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">t</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">r</span>(<span style="color:#a6e22e">d</span>[<span style="color:#ae81ff">0</span>])(<span style="color:#a6e22e">r</span>(<span style="color:#a6e22e">d</span>[<span style="color:#ae81ff">2</span>])),
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">u</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">r</span>(<span style="color:#a6e22e">d</span>[<span style="color:#ae81ff">3</span>]),
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">c</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">u</span>.<span style="color:#a6e22e">NativeModules</span>.<span style="color:#a6e22e">AesCrypto</span>;
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">e</span>.<span style="color:#a6e22e">encrypt2</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">l</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#66d9ef">default</span>.<span style="color:#66d9ef">async</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> (;;) <span style="color:#66d9ef">switch</span> (<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">prev</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">next</span>) {
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> <span style="color:#ae81ff">0</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">if</span> (<span style="color:#e6db74">&#39;android&#39;</span> <span style="color:#f92672">!==</span> <span style="color:#a6e22e">u</span>.<span style="color:#a6e22e">Platform</span>.<span style="color:#a6e22e">OS</span>) {
</span></span><span style="display:flex;"><span>                    <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">next</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">2</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#66d9ef">break</span>
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">abrupt</span>(<span style="color:#e6db74">&#34;return&#34;</span>, <span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">encrypt</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">l</span>).<span style="color:#a6e22e">then</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>) {
</span></span><span style="display:flex;"><span>                    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>
</span></span><span style="display:flex;"><span>                }).<span style="color:#66d9ef">catch</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>) {}));
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> <span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">abrupt</span>(<span style="color:#e6db74">&#34;return&#34;</span>, <span style="color:#a6e22e">t</span>.<span style="color:#66d9ef">default</span>.<span style="color:#a6e22e">encrypt</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">l</span>).<span style="color:#a6e22e">then</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>) {
</span></span><span style="display:flex;"><span>                    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>
</span></span><span style="display:flex;"><span>                }).<span style="color:#66d9ef">catch</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>) {}));
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> <span style="color:#ae81ff">3</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;end&#34;</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stop</span>()
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }, <span style="color:#66d9ef">null</span>, <span style="color:#66d9ef">null</span>, <span style="color:#66d9ef">null</span>, Promise)
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">e</span>.<span style="color:#a6e22e">decrypt2</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">l</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#66d9ef">default</span>.<span style="color:#66d9ef">async</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> (;;) <span style="color:#66d9ef">switch</span> (<span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">prev</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">next</span>) {
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> <span style="color:#ae81ff">0</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">if</span> (<span style="color:#e6db74">&#39;android&#39;</span> <span style="color:#f92672">!==</span> <span style="color:#a6e22e">u</span>.<span style="color:#a6e22e">Platform</span>.<span style="color:#a6e22e">OS</span>) {
</span></span><span style="display:flex;"><span>                    <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">next</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">2</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#66d9ef">break</span>
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">abrupt</span>(<span style="color:#e6db74">&#34;return&#34;</span>, <span style="color:#a6e22e">c</span>.<span style="color:#a6e22e">decrypt</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">l</span>).<span style="color:#a6e22e">then</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>) {
</span></span><span style="display:flex;"><span>                    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>
</span></span><span style="display:flex;"><span>                }).<span style="color:#66d9ef">catch</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>) {}));
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> <span style="color:#ae81ff">2</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">abrupt</span>(<span style="color:#e6db74">&#34;return&#34;</span>, <span style="color:#a6e22e">t</span>.<span style="color:#66d9ef">default</span>.<span style="color:#a6e22e">decrypt</span>(<span style="color:#a6e22e">o</span>, <span style="color:#a6e22e">f</span>, <span style="color:#a6e22e">l</span>).<span style="color:#a6e22e">then</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>) {
</span></span><span style="display:flex;"><span>                    <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>
</span></span><span style="display:flex;"><span>                }).<span style="color:#66d9ef">catch</span>(<span style="color:#66d9ef">function</span>(<span style="color:#a6e22e">n</span>) {}));
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> <span style="color:#ae81ff">3</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;end&#34;</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#a6e22e">n</span>.<span style="color:#a6e22e">stop</span>()
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }, <span style="color:#66d9ef">null</span>, <span style="color:#66d9ef">null</span>, <span style="color:#66d9ef">null</span>, Promise)
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>The above encryption and decryption function relies on a native AES crypto library <code>c = u.NativeModules.AesCrypto</code>; a React-Native bridge.</p>
<p>Decompiling the <code>myvodafoneapp</code> binary in <strong>Hopper</strong> (<a href="https://www.hopperapp.com">https://www.hopperapp.com</a>) shows the following <code>RCTAesCrypto</code> encrypt/decrypt function. The parameters of both the encryption/decryption function takes two arguments; the <strong>key</strong> and the <strong>initialization vector</strong>.</p>
<p>Encryption Code (Assembly):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-asm" data-lang="asm"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">-[</span><span style="color:#a6e22e">RCTAesCrypto</span> <span style="color:#66d9ef">encrypt</span>:<span style="color:#66d9ef">appkey</span>:<span style="color:#66d9ef">gIv</span>:<span style="color:#66d9ef">resolver</span>:<span style="color:#66d9ef">rejecter</span>:]:
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d34</span>         <span style="color:#66d9ef">stp</span>        <span style="color:#66d9ef">x28</span>, <span style="color:#66d9ef">x27</span>, [<span style="color:#66d9ef">sp</span>, <span style="color:#75715e">#-0x60]!                     ; Objective C Implementation defined at 0x10172eb58 (instance method), DATA XREF=0x10172eb58
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d38</span>         <span style="color:#66d9ef">stp</span>        <span style="color:#66d9ef">x26</span>, <span style="color:#66d9ef">x25</span>, [<span style="color:#66d9ef">sp</span>, <span style="color:#75715e">#0x10]
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d3c</span>         <span style="color:#66d9ef">stp</span>        <span style="color:#66d9ef">x24</span>, <span style="color:#66d9ef">x23</span>, [<span style="color:#66d9ef">sp</span>, <span style="color:#75715e">#0x20]
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d40</span>         <span style="color:#66d9ef">stp</span>        <span style="color:#66d9ef">x22</span>, <span style="color:#66d9ef">x21</span>, [<span style="color:#66d9ef">sp</span>, <span style="color:#75715e">#0x30]
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d44</span>         <span style="color:#66d9ef">stp</span>        <span style="color:#66d9ef">x20</span>, <span style="color:#66d9ef">x19</span>, [<span style="color:#66d9ef">sp</span>, <span style="color:#75715e">#0x40]
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d48</span>         <span style="color:#66d9ef">stp</span>        <span style="color:#66d9ef">fp</span>, <span style="color:#66d9ef">lr</span>, [<span style="color:#66d9ef">sp</span>, <span style="color:#75715e">#0x50]
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d4c</span>         <span style="color:#66d9ef">add</span>        <span style="color:#66d9ef">fp</span>, <span style="color:#66d9ef">sp</span>, <span style="color:#75715e">#0x50
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d50</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x22</span>, <span style="color:#66d9ef">x6</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d54</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x23</span>, <span style="color:#66d9ef">x5</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d58</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x21</span>, <span style="color:#66d9ef">x4</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d5c</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x20</span>, <span style="color:#66d9ef">x3</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d60</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x0</span>, <span style="color:#66d9ef">x2</span>                                      <span style="color:#75715e">; argument &#34;instance&#34; for method imp___stubs__objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d64</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_retain</span>                    <span style="color:#75715e">; objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d68</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x19</span>, <span style="color:#66d9ef">x0</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d6c</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x0</span>, <span style="color:#66d9ef">x20</span>                                     <span style="color:#75715e">; argument &#34;instance&#34; for method imp___stubs__objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d70</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_retain</span>                    <span style="color:#75715e">; objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d74</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x20</span>, <span style="color:#66d9ef">x0</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d78</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x0</span>, <span style="color:#66d9ef">x21</span>                                     <span style="color:#75715e">; argument &#34;instance&#34; for method imp___stubs__objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d7c</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_retain</span>                    <span style="color:#75715e">; objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d80</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x21</span>, <span style="color:#66d9ef">x0</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d84</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x0</span>, <span style="color:#66d9ef">x22</span>                                     <span style="color:#75715e">; argument &#34;instance&#34; for method imp___stubs__objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d88</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_retain</span>                    <span style="color:#75715e">; objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d8c</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x22</span>, <span style="color:#66d9ef">x0</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d90</span>         <span style="color:#66d9ef">adrp</span>       <span style="color:#66d9ef">x27</span>, <span style="color:#75715e">#0x101880000
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d94</span>         <span style="color:#66d9ef">ldr</span>        <span style="color:#66d9ef">x25</span>, [<span style="color:#66d9ef">x27</span>, <span style="color:#75715e">#0x160]                          ; objc_cls_ref_SecurityUtil,__objc_class_SecurityUtil_class
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d98</span>         <span style="color:#66d9ef">adrp</span>       <span style="color:#66d9ef">x8</span>, <span style="color:#75715e">#0x10186e000                            ; &amp;@selector(sharedMenuController)
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4d9c</span>         <span style="color:#66d9ef">ldr</span>        <span style="color:#66d9ef">x24</span>, [<span style="color:#66d9ef">x8</span>, <span style="color:#75715e">#0x398]                           ; &#34;encryptAESData:app_key:gIv:&#34;,@selector(encryptAESData:app_key:gIv:)
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4da0</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x0</span>, <span style="color:#66d9ef">x23</span>                                     <span style="color:#75715e">; argument &#34;instance&#34; for method imp___stubs__objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4da4</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_retain</span>                    <span style="color:#75715e">; objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4da8</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x23</span>, <span style="color:#66d9ef">x0</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4dac</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x0</span>, <span style="color:#66d9ef">x25</span>                                     <span style="color:#75715e">; argument &#34;instance&#34; for method imp___stubs__objc_msgSend
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4db0</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x1</span>, <span style="color:#66d9ef">x24</span>                                     <span style="color:#75715e">; argument &#34;selector&#34; for method imp___stubs__objc_msgSend
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4db4</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x2</span>, <span style="color:#66d9ef">x19</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4db8</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x3</span>, <span style="color:#66d9ef">x20</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4dbc</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x4</span>, <span style="color:#66d9ef">x21</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4dc0</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_msgSend</span>                   <span style="color:#75715e">; objc_msgSend
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4dc4</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">fp</span>, <span style="color:#66d9ef">fp</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4dc8</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_retainAutoreleasedReturnValue</span> <span style="color:#75715e">; objc_retainAutoreleasedReturnValue
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4dcc</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x25</span>, <span style="color:#66d9ef">x0</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4dd0</span>         <span style="color:#66d9ef">adrp</span>       <span style="color:#66d9ef">x8</span>, <span style="color:#75715e">#0x101861000                            ; &amp;@selector(dealloc)
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4dd4</span>         <span style="color:#66d9ef">ldr</span>        <span style="color:#66d9ef">x1</span>, [<span style="color:#66d9ef">x8</span>, <span style="color:#75715e">#0x58]                             ; argument &#34;selector&#34; for method imp___stubs__objc_msgSend, &#34;length&#34;,@selector(length)
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4dd8</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_msgSend</span>                   <span style="color:#75715e">; objc_msgSend
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ddc</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x26</span>, <span style="color:#66d9ef">x0</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4de0</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x0</span>, <span style="color:#66d9ef">x25</span>                                     <span style="color:#75715e">; argument &#34;instance&#34; for method imp___stubs__objc_release
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4de4</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_release</span>                   <span style="color:#75715e">; objc_release
</span></span></span></code></pre></div><p>Encryption Code (Obj C):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-objc" data-lang="objc"><span style="display:flex;"><span>-(<span style="color:#66d9ef">void</span>)<span style="color:#a6e22e">encrypt:</span>(<span style="color:#66d9ef">void</span> <span style="color:#f92672">*</span>)arg2 <span style="color:#a6e22e">appkey:</span>(<span style="color:#66d9ef">void</span> <span style="color:#f92672">*</span>)arg3 <span style="color:#a6e22e">gIv:</span>(<span style="color:#66d9ef">void</span> <span style="color:#f92672">*</span>)arg4 <span style="color:#a6e22e">resolver:</span>(<span style="color:#66d9ef">void</span> <span style="color:#f92672">*</span>)arg5 <span style="color:#a6e22e">rejecter:</span>(<span style="color:#66d9ef">void</span> <span style="color:#f92672">*</span>)arg6 {
</span></span><span style="display:flex;"><span>    var_50 <span style="color:#f92672">=</span> r28;
</span></span><span style="display:flex;"><span>    stack[<span style="color:#f92672">-</span><span style="color:#ae81ff">88</span>] <span style="color:#f92672">=</span> r27;
</span></span><span style="display:flex;"><span>    r31 <span style="color:#f92672">=</span> r31 <span style="color:#f92672">+</span> <span style="color:#ae81ff">0xffffffffffffffa0</span>;
</span></span><span style="display:flex;"><span>    var_40 <span style="color:#f92672">=</span> r26;
</span></span><span style="display:flex;"><span>    stack[<span style="color:#f92672">-</span><span style="color:#ae81ff">72</span>] <span style="color:#f92672">=</span> r25;
</span></span><span style="display:flex;"><span>    var_30 <span style="color:#f92672">=</span> r24;
</span></span><span style="display:flex;"><span>    stack[<span style="color:#f92672">-</span><span style="color:#ae81ff">56</span>] <span style="color:#f92672">=</span> r23;
</span></span><span style="display:flex;"><span>    var_20 <span style="color:#f92672">=</span> r22;
</span></span><span style="display:flex;"><span>    stack[<span style="color:#f92672">-</span><span style="color:#ae81ff">40</span>] <span style="color:#f92672">=</span> r21;
</span></span><span style="display:flex;"><span>    var_10 <span style="color:#f92672">=</span> r20;
</span></span><span style="display:flex;"><span>    stack[<span style="color:#f92672">-</span><span style="color:#ae81ff">24</span>] <span style="color:#f92672">=</span> r19;
</span></span><span style="display:flex;"><span>    saved_fp <span style="color:#f92672">=</span> r29;
</span></span><span style="display:flex;"><span>    stack[<span style="color:#f92672">-</span><span style="color:#ae81ff">8</span>] <span style="color:#f92672">=</span> r30;
</span></span><span style="display:flex;"><span>    r19 <span style="color:#f92672">=</span> [arg2 <span style="color:#66d9ef">retain</span>];
</span></span><span style="display:flex;"><span>    r20 <span style="color:#f92672">=</span> [arg3 <span style="color:#66d9ef">retain</span>];
</span></span><span style="display:flex;"><span>    r21 <span style="color:#f92672">=</span> [arg4 <span style="color:#66d9ef">retain</span>];
</span></span><span style="display:flex;"><span>    r22 <span style="color:#f92672">=</span> [arg6 <span style="color:#66d9ef">retain</span>];
</span></span><span style="display:flex;"><span>    r23 <span style="color:#f92672">=</span> [arg5 <span style="color:#66d9ef">retain</span>];
</span></span><span style="display:flex;"><span>    r0 <span style="color:#f92672">=</span> [SecurityUtil encryptAESData:r19 app_key:r20 gIv:r21];
</span></span><span style="display:flex;"><span>    r29 <span style="color:#f92672">=</span> <span style="color:#f92672">&amp;</span>saved_fp;
</span></span><span style="display:flex;"><span>    r0 <span style="color:#f92672">=</span> [r0 <span style="color:#66d9ef">retain</span>];
</span></span><span style="display:flex;"><span>    r26 <span style="color:#f92672">=</span> [r0 length];
</span></span><span style="display:flex;"><span>    [r0 <span style="color:#66d9ef">release</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (r26 <span style="color:#f92672">==</span> <span style="color:#ae81ff">0x0</span>) {
</span></span><span style="display:flex;"><span>            (<span style="color:#f92672">*</span>(r22 <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x10</span>))(r22, <span style="color:#e6db74">@&#34;ERROR&#34;</span>, <span style="color:#e6db74">@&#34;decrypt failed&#34;</span>, <span style="color:#ae81ff">0x0</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    (<span style="color:#f92672">*</span>(r23 <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x10</span>))(r23, [[SecurityUtil encryptAESData:r19 app_key:r20 gIv:r21] <span style="color:#66d9ef">retain</span>]);
</span></span><span style="display:flex;"><span>    [r23 <span style="color:#66d9ef">release</span>];
</span></span><span style="display:flex;"><span>    [r24 <span style="color:#66d9ef">release</span>];
</span></span><span style="display:flex;"><span>    [r22 <span style="color:#66d9ef">release</span>];
</span></span><span style="display:flex;"><span>    [r21 <span style="color:#66d9ef">release</span>];
</span></span><span style="display:flex;"><span>    [r20 <span style="color:#66d9ef">release</span>];
</span></span><span style="display:flex;"><span>    [r19 <span style="color:#66d9ef">release</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Decryption Code (Assembly):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-asm" data-lang="asm"><span style="display:flex;"><span>                     <span style="color:#960050;background-color:#1e0010">-[</span><span style="color:#a6e22e">RCTAesCrypto</span> <span style="color:#66d9ef">decrypt</span>:<span style="color:#66d9ef">appkey</span>:<span style="color:#66d9ef">gIv</span>:<span style="color:#66d9ef">resolver</span>:<span style="color:#66d9ef">rejecter</span>:]:
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4e94</span>         <span style="color:#66d9ef">stp</span>        <span style="color:#66d9ef">x28</span>, <span style="color:#66d9ef">x27</span>, [<span style="color:#66d9ef">sp</span>, <span style="color:#75715e">#-0x60]!                     ; Objective C Implementation defined at 0x10172eb70 (instance method), DATA XREF=0x10172eb70
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4e98</span>         <span style="color:#66d9ef">stp</span>        <span style="color:#66d9ef">x26</span>, <span style="color:#66d9ef">x25</span>, [<span style="color:#66d9ef">sp</span>, <span style="color:#75715e">#0x10]
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4e9c</span>         <span style="color:#66d9ef">stp</span>        <span style="color:#66d9ef">x24</span>, <span style="color:#66d9ef">x23</span>, [<span style="color:#66d9ef">sp</span>, <span style="color:#75715e">#0x20]
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ea0</span>         <span style="color:#66d9ef">stp</span>        <span style="color:#66d9ef">x22</span>, <span style="color:#66d9ef">x21</span>, [<span style="color:#66d9ef">sp</span>, <span style="color:#75715e">#0x30]
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ea4</span>         <span style="color:#66d9ef">stp</span>        <span style="color:#66d9ef">x20</span>, <span style="color:#66d9ef">x19</span>, [<span style="color:#66d9ef">sp</span>, <span style="color:#75715e">#0x40]
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ea8</span>         <span style="color:#66d9ef">stp</span>        <span style="color:#66d9ef">fp</span>, <span style="color:#66d9ef">lr</span>, [<span style="color:#66d9ef">sp</span>, <span style="color:#75715e">#0x50]
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4eac</span>         <span style="color:#66d9ef">add</span>        <span style="color:#66d9ef">fp</span>, <span style="color:#66d9ef">sp</span>, <span style="color:#75715e">#0x50
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4eb0</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x22</span>, <span style="color:#66d9ef">x6</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4eb4</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x23</span>, <span style="color:#66d9ef">x5</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4eb8</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x21</span>, <span style="color:#66d9ef">x4</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ebc</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x20</span>, <span style="color:#66d9ef">x3</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ec0</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x0</span>, <span style="color:#66d9ef">x2</span>                                      <span style="color:#75715e">; argument &#34;instance&#34; for method imp___stubs__objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ec4</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_retain</span>                    <span style="color:#75715e">; objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ec8</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x19</span>, <span style="color:#66d9ef">x0</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ecc</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x0</span>, <span style="color:#66d9ef">x20</span>                                     <span style="color:#75715e">; argument &#34;instance&#34; for method imp___stubs__objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ed0</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_retain</span>                    <span style="color:#75715e">; objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ed4</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x20</span>, <span style="color:#66d9ef">x0</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ed8</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x0</span>, <span style="color:#66d9ef">x21</span>                                     <span style="color:#75715e">; argument &#34;instance&#34; for method imp___stubs__objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4edc</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_retain</span>                    <span style="color:#75715e">; objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ee0</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x21</span>, <span style="color:#66d9ef">x0</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ee4</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x0</span>, <span style="color:#66d9ef">x22</span>                                     <span style="color:#75715e">; argument &#34;instance&#34; for method imp___stubs__objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ee8</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_retain</span>                    <span style="color:#75715e">; objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4eec</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x22</span>, <span style="color:#66d9ef">x0</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ef0</span>         <span style="color:#66d9ef">adrp</span>       <span style="color:#66d9ef">x27</span>, <span style="color:#75715e">#0x101880000
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ef4</span>         <span style="color:#66d9ef">ldr</span>        <span style="color:#66d9ef">x25</span>, [<span style="color:#66d9ef">x27</span>, <span style="color:#75715e">#0x160]                          ; objc_cls_ref_SecurityUtil,__objc_class_SecurityUtil_class
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4ef8</span>         <span style="color:#66d9ef">adrp</span>       <span style="color:#66d9ef">x8</span>, <span style="color:#75715e">#0x10186e000                            ; &amp;@selector(sharedMenuController)
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4efc</span>         <span style="color:#66d9ef">ldr</span>        <span style="color:#66d9ef">x24</span>, [<span style="color:#66d9ef">x8</span>, <span style="color:#75715e">#0x3a0]                           ; &#34;decryptAESNString:app_key:gIv:&#34;,@selector(decryptAESNString:app_key:gIv:)
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f00</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x0</span>, <span style="color:#66d9ef">x23</span>                                     <span style="color:#75715e">; argument &#34;instance&#34; for method imp___stubs__objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f04</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_retain</span>                    <span style="color:#75715e">; objc_retain
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f08</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x23</span>, <span style="color:#66d9ef">x0</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f0c</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x0</span>, <span style="color:#66d9ef">x25</span>                                     <span style="color:#75715e">; argument &#34;instance&#34; for method imp___stubs__objc_msgSend
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f10</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x1</span>, <span style="color:#66d9ef">x24</span>                                     <span style="color:#75715e">; argument &#34;selector&#34; for method imp___stubs__objc_msgSend
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f14</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x2</span>, <span style="color:#66d9ef">x19</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f18</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x3</span>, <span style="color:#66d9ef">x20</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f1c</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x4</span>, <span style="color:#66d9ef">x21</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f20</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_msgSend</span>                   <span style="color:#75715e">; objc_msgSend
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f24</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">fp</span>, <span style="color:#66d9ef">fp</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f28</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_retainAutoreleasedReturnValue</span> <span style="color:#75715e">; objc_retainAutoreleasedReturnValue
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f2c</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x25</span>, <span style="color:#66d9ef">x0</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f30</span>         <span style="color:#66d9ef">adrp</span>       <span style="color:#66d9ef">x8</span>, <span style="color:#75715e">#0x101861000                            ; &amp;@selector(dealloc)
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f34</span>         <span style="color:#66d9ef">ldr</span>        <span style="color:#66d9ef">x1</span>, [<span style="color:#66d9ef">x8</span>, <span style="color:#75715e">#0x58]                             ; argument &#34;selector&#34; for method imp___stubs__objc_msgSend, &#34;length&#34;,@selector(length)
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f38</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_msgSend</span>                   <span style="color:#75715e">; objc_msgSend
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f3c</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x26</span>, <span style="color:#66d9ef">x0</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f40</span>         <span style="color:#66d9ef">mov</span>        <span style="color:#66d9ef">x0</span>, <span style="color:#66d9ef">x25</span>                                     <span style="color:#75715e">; argument &#34;instance&#34; for method imp___stubs__objc_release
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#960050;background-color:#1e0010">00000001006</span><span style="color:#a6e22e">b4f44</span>         <span style="color:#66d9ef">bl</span>         <span style="color:#66d9ef">imp___stubs__objc_release</span>                   <span style="color:#75715e">; objc_release
</span></span></span></code></pre></div><p>Decryption Code (Obj C):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-objc" data-lang="objc"><span style="display:flex;"><span>-(<span style="color:#66d9ef">void</span>)<span style="color:#a6e22e">decrypt:</span>(<span style="color:#66d9ef">void</span> <span style="color:#f92672">*</span>)arg2 <span style="color:#a6e22e">appkey:</span>(<span style="color:#66d9ef">void</span> <span style="color:#f92672">*</span>)arg3 <span style="color:#a6e22e">gIv:</span>(<span style="color:#66d9ef">void</span> <span style="color:#f92672">*</span>)arg4 <span style="color:#a6e22e">resolver:</span>(<span style="color:#66d9ef">void</span> <span style="color:#f92672">*</span>)arg5 <span style="color:#a6e22e">rejecter:</span>(<span style="color:#66d9ef">void</span> <span style="color:#f92672">*</span>)arg6 {
</span></span><span style="display:flex;"><span>    var_50 <span style="color:#f92672">=</span> r28;
</span></span><span style="display:flex;"><span>    stack[<span style="color:#f92672">-</span><span style="color:#ae81ff">88</span>] <span style="color:#f92672">=</span> r27;
</span></span><span style="display:flex;"><span>    r31 <span style="color:#f92672">=</span> r31 <span style="color:#f92672">+</span> <span style="color:#ae81ff">0xffffffffffffffa0</span>;
</span></span><span style="display:flex;"><span>    var_40 <span style="color:#f92672">=</span> r26;
</span></span><span style="display:flex;"><span>    stack[<span style="color:#f92672">-</span><span style="color:#ae81ff">72</span>] <span style="color:#f92672">=</span> r25;
</span></span><span style="display:flex;"><span>    var_30 <span style="color:#f92672">=</span> r24;
</span></span><span style="display:flex;"><span>    stack[<span style="color:#f92672">-</span><span style="color:#ae81ff">56</span>] <span style="color:#f92672">=</span> r23;
</span></span><span style="display:flex;"><span>    var_20 <span style="color:#f92672">=</span> r22;
</span></span><span style="display:flex;"><span>    stack[<span style="color:#f92672">-</span><span style="color:#ae81ff">40</span>] <span style="color:#f92672">=</span> r21;
</span></span><span style="display:flex;"><span>    var_10 <span style="color:#f92672">=</span> r20;
</span></span><span style="display:flex;"><span>    stack[<span style="color:#f92672">-</span><span style="color:#ae81ff">24</span>] <span style="color:#f92672">=</span> r19;
</span></span><span style="display:flex;"><span>    saved_fp <span style="color:#f92672">=</span> r29;
</span></span><span style="display:flex;"><span>    stack[<span style="color:#f92672">-</span><span style="color:#ae81ff">8</span>] <span style="color:#f92672">=</span> r30;
</span></span><span style="display:flex;"><span>    r19 <span style="color:#f92672">=</span> [arg2 <span style="color:#66d9ef">retain</span>];
</span></span><span style="display:flex;"><span>    r20 <span style="color:#f92672">=</span> [arg3 <span style="color:#66d9ef">retain</span>];
</span></span><span style="display:flex;"><span>    r21 <span style="color:#f92672">=</span> [arg4 <span style="color:#66d9ef">retain</span>];
</span></span><span style="display:flex;"><span>    r22 <span style="color:#f92672">=</span> [arg6 <span style="color:#66d9ef">retain</span>];
</span></span><span style="display:flex;"><span>    r23 <span style="color:#f92672">=</span> [arg5 <span style="color:#66d9ef">retain</span>];
</span></span><span style="display:flex;"><span>    r0 <span style="color:#f92672">=</span> [SecurityUtil decryptAESNString:r19 app_key:r20 gIv:r21];
</span></span><span style="display:flex;"><span>    r29 <span style="color:#f92672">=</span> <span style="color:#f92672">&amp;</span>saved_fp;
</span></span><span style="display:flex;"><span>    r0 <span style="color:#f92672">=</span> [r0 <span style="color:#66d9ef">retain</span>];
</span></span><span style="display:flex;"><span>    r26 <span style="color:#f92672">=</span> [r0 length];
</span></span><span style="display:flex;"><span>    [r0 <span style="color:#66d9ef">release</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (r26 <span style="color:#f92672">==</span> <span style="color:#ae81ff">0x0</span>) {
</span></span><span style="display:flex;"><span>            (<span style="color:#f92672">*</span>(r22 <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x10</span>))(r22, <span style="color:#e6db74">@&#34;ERROR&#34;</span>, <span style="color:#e6db74">@&#34;decrypt failed&#34;</span>, <span style="color:#ae81ff">0x0</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    (<span style="color:#f92672">*</span>(r23 <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x10</span>))(r23, [[SecurityUtil decryptAESNString:r19 app_key:r20 gIv:r21] <span style="color:#66d9ef">retain</span>]);
</span></span><span style="display:flex;"><span>    [r23 <span style="color:#66d9ef">release</span>];
</span></span><span style="display:flex;"><span>    [r24 <span style="color:#66d9ef">release</span>];
</span></span><span style="display:flex;"><span>    [r22 <span style="color:#66d9ef">release</span>];
</span></span><span style="display:flex;"><span>    [r21 <span style="color:#66d9ef">release</span>];
</span></span><span style="display:flex;"><span>    [r20 <span style="color:#66d9ef">release</span>];
</span></span><span style="display:flex;"><span>    [r19 <span style="color:#66d9ef">release</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>From the above analysis, it can be figured out that the <strong>handleSessionVals</strong> is used in the encryption and decryption of the payload; it is passed as both the <strong>key</strong> and <strong>iv</strong>.</p>
<h3 id="dynamic-analysis-of-the-application">Dynamic Analysis of the Application</h3>
<p>Proxying the app through Burpsuite, a sample request payload for the <code>UserLoginAction</code> is shown below:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>POST /MVAppAPI/UserSvc HTTP/1.1
</span></span><span style="display:flex;"><span>Host: *****.vodafone.com.gh
</span></span><span style="display:flex;"><span>Cookie: visid_incap_2779200<span style="color:#f92672">=</span>fGaJ****TC8gi1Asypddu; visid_incap_2779192<span style="color:#f92672">=</span>yX5OR1yhT***J0jIO4sGROSVst
</span></span><span style="display:flex;"><span>Accept: application/json, text/plain, */*
</span></span><span style="display:flex;"><span>Content-Type: application/json
</span></span><span style="display:flex;"><span>User-Agent: myvodafoneapp/85 CFNetwork/1237 Darwin/20.4.0
</span></span><span style="display:flex;"><span>Accept-Language: en-gb
</span></span><span style="display:flex;"><span>Content-Length: <span style="color:#ae81ff">170</span>
</span></span><span style="display:flex;"><span>Accept-Encoding: gzip, deflate
</span></span><span style="display:flex;"><span>Connection: close
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span><span style="color:#e6db74">&#34;username&#34;</span>:<span style="color:#e6db74">&#34;****&#34;</span>,<span style="color:#e6db74">&#34;password&#34;</span>:<span style="color:#e6db74">&#34;****&#34;</span>,<span style="color:#e6db74">&#34;action&#34;</span>:<span style="color:#e6db74">&#34;loginToAccount&#34;</span>,<span style="color:#e6db74">&#34;os&#34;</span>:<span style="color:#e6db74">&#34;iOS v4.3.2&#34;</span>,<span style="color:#e6db74">&#34;udid&#34;</span>:<span style="color:#e6db74">&#34;***&#34;</span><span style="color:#f92672">}</span>
</span></span></code></pre></div><p>The response payload for the <code>UserLoginAction</code> contains the <strong>SESSION</strong> variables need to generate the <strong>AES Key</strong>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span><span style="color:#e6db74">&#34;SESSION&#34;</span><span style="color:#960050;background-color:#1e0010">:</span>{<span style="color:#f92672">&#34;session&#34;</span>:<span style="color:#e6db74">&#34;cf31ac47-**-46a6-bea3-**&#34;</span>,<span style="color:#f92672">&#34;secret&#34;</span>:<span style="color:#e6db74">&#34;*****-68ab-4303-b400-d0620751e51b&#34;</span>,<span style="color:#f92672">&#34;key&#34;</span>:<span style="color:#e6db74">&#34;cb4****f-a7af-4cff-****-03ab9c584563&#34;</span>}<span style="color:#960050;background-color:#1e0010">,</span><span style="color:#e6db74">&#34;RESPONSEMESSAGE&#34;</span><span style="color:#960050;background-color:#1e0010">:</span><span style="color:#e6db74">&#34;Successfully processed&#34;</span>
</span></span></code></pre></div><p>Any subsequent request made after the <code>UserLoginAction</code> uses an encrypted payload, which is decrypted using the <strong>AES Key</strong>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>POST /MVAppAPI/User HTTP/2
</span></span><span style="display:flex;"><span>Host: ***.vodafone.com.gh
</span></span><span style="display:flex;"><span>Accept: application/json, text/plain, */*
</span></span><span style="display:flex;"><span>Content-Type: application/json
</span></span><span style="display:flex;"><span>Accept-Encoding: gzip, deflate
</span></span><span style="display:flex;"><span>User-Agent: myvodafoneapp/85 CFNetwork/1237 Darwin/20.4.0
</span></span><span style="display:flex;"><span>Username: ****
</span></span><span style="display:flex;"><span>Session: cf31ac474f7d46a6bea3ef1c2bbf5d4b
</span></span><span style="display:flex;"><span>Accept-Language: en-gb
</span></span><span style="display:flex;"><span>Content-Length: <span style="color:#ae81ff">150</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span><span style="color:#e6db74">&#34;requestBody&#34;</span>:<span style="color:#e6db74">&#34;e1jzR6XK+kEQHazEFOvFUOTqx/eDkFZ2MvbiUsXEWiejd/ENUdLt1G0aIMtnqEmP\r\n35QQIJ24dpBv4yIiEm2lyF+FLX6UAdtXmJA9GDBhVaL+rMTT1N7RLK9e3Ov9mes5&#34;</span><span style="color:#f92672">}</span>
</span></span></code></pre></div><p>A session value is added as part of the headers; <code>Session: cf31ac474f7d46a6bea3ef1c2bbf5d4b</code>. The value for the session key is the same as the <strong>SESSION.session</strong> variable with all the <code>-</code> replaced with <code> </code>.</p>
<p>A sample encrypted request payload is shown below:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>POST /MVAppAPI/UserSvc HTTP/2
</span></span><span style="display:flex;"><span>Host: ****.vodafone.com.gh
</span></span><span style="display:flex;"><span>Cookie: incap_ses_1700_2779192<span style="color:#f92672">=</span>Tsu/V8sg8W0inf4mEZ2XF19YQWMAAAAARfvc5voyaCHQ85F5P4wG9A<span style="color:#f92672">==</span>; visid_incap_2779200<span style="color:#f92672">=</span>fGaJiBltQTWwMlBPhy/wUa5JL2MAAAAAQUIPAAAAAABOZ1nGbBQTC8gi1Asypddu; visid_incap_2779192<span style="color:#f92672">=</span>yX5OR1yhTBGPcy0+DGw0M3lJL2MAAAAAQUIPAAAAAACBiVyt59J0jIO4sGROSVst
</span></span><span style="display:flex;"><span>Accept: application/json, text/plain, */*
</span></span><span style="display:flex;"><span>Content-Type: application/json
</span></span><span style="display:flex;"><span>Accept-Encoding: gzip, deflate
</span></span><span style="display:flex;"><span>User-Agent: myvodafoneapp/85 CFNetwork/1237 Darwin/20.4.0
</span></span><span style="display:flex;"><span>Username: ***
</span></span><span style="display:flex;"><span>Session: cf31ac474f7d46a6bea3ef1c2bbf5d4b
</span></span><span style="display:flex;"><span>Accept-Language: en-gb
</span></span><span style="display:flex;"><span>Content-Length: <span style="color:#ae81ff">150</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span><span style="color:#e6db74">&#34;requestBody&#34;</span>:<span style="color:#e6db74">&#34;PY9DdDAVRfZat+uP/kVWa54ykhCmeS8N82elBHP3wiiLdQOnsbY+gb3DvQrTtdto\r\ngkoK/EirSeJ79ahHZ+p+A4lSCO7aOh697hn02G+PIP6Yf5jgLKGQL+DsW33NxQzC&#34;</span><span style="color:#f92672">}</span>
</span></span></code></pre></div><p>For instance, the encrypted <code>PY9DdDAVRfZat+uP/kVWa54ykhCmeS8N82elBHP3wiiLdQOnsbY+gb3DvQrTtdto\r\ngkoK/EirSeJ79ahHZ+p+A4lSCO7aOh697hn02G+PIP6Yf5jgLKGQL+DsW33NxQzC</code> decrypts to <code>{&quot;action&quot;:&quot;getAccountServices&quot;,&quot;msisdn&quot;:&quot;***&quot;,&quot;username&quot;:&quot;****&quot;,&quot;os&quot;:&quot;iOS v4.3.2&quot;}</code> using the derived AES Key.</p>
]]></content>
        </item>
        
        <item>
            <title>Protecting Your Privacy Online</title>
            <link>https://sperixlabs.org/post/2022/03/protecting-your-privacy-online/</link>
            <pubDate>Sun, 13 Mar 2022 18:41:53 +0000</pubDate>
            
            <guid>https://sperixlabs.org/post/2022/03/protecting-your-privacy-online/</guid>
            <description>&lt;p&gt;The current surge in the usage of smart devices has contributed significantly to the large volumes of internet traffic data being generated. In the year 2021, it was estimated that the total population in the world was 7.83 billion and about 4.66 billion of them are active internet users; which constitutes about 59.5 of the total population [1]. On average, 57 exabytes of data were generated per month in that year [2]. These facts illustrate how many people are engaged in online activities, hence the need for people to protect their privacy online.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>The current surge in the usage of smart devices has contributed significantly to the large volumes of internet traffic data being generated. In the year 2021, it was estimated that the total population in the world was 7.83 billion and about 4.66 billion of them are active internet users; which constitutes about 59.5 of the total population [1]. On average, 57 exabytes of data were generated per month in that year [2]. These facts illustrate how many people are engaged in online activities, hence the need for people to protect their privacy online.</p>
<p>There are several ways internet users can adopt to enhance their privacy online. This article focuses mainly on how users can prevent or minimize online tracking through the use of “cookies”. A brief overview of online tracking is presented together with some techniques to minimize the tracking.</p>
<p>Users&rsquo; activities online leave a trail. When a user visits a website, a file called “cookie” is stored on his browser. Websites use cookies to enhance users’ browsing experience. Cookies are used to keep your login sessions on visited websites active. They can also be used to show topics of interest. Some are used to show targeted advertisements and some are also used by analytics companies to get details about websites users visit. These details can include the number of hours a user spent on a site, pages visited, etc. These details are sometimes used to resolve issues on the visited websites to enhance the user experience.</p>
<p>Despite the positive usage of cookies, some websites use them in device fingerprinting. Device fingerprinting is a technique where the websites use the cookies to uniquely identify your browser/device and hence can track your activities. This results in targeted ads across all your electronic devices.</p>
<p>One cannot completely get rid of targeted ads. A user can adjust his privacy settings on the browsers used in surfing the internet. One can decide to allow certain types of cookies to be stored on the websites visited. Furthermore, one can decide to delete the stored cookies. This approach isn’t permanent since cookies deleted or cleared can be set again. Hence one will be required to clear them periodically.</p>
<p>Most mobile devices have a privacy settings option that enables one to control targeted ads. For instance, on an iPhone one can disable Ad personalization, location control, tracking controls, and also reset advertising identifiers. A new feature called “Private Relay” can be turned on the protect your location and browsing activity while using their Safari browser.</p>
<p>Ad blockers can be used to prevent target ads. Not all ads can be blocked by ad blockers. Recently, it has been realized that some websites are capable of detecting the use of ad blockers and therefore block users from accessing some specific content on their website. It is expedient for users. To compare the features and reviews of these ad blockers before using them. It should be noted that ad blockers do not protect one from viruses or malware infections.</p>
<p>If you don’t want the browsing history, cookies, etc to be persistent and used in user tracking, there is an option for private mode in all browsers. In Chrome, it is called “Incognito” mode whereas Firefox calls it “Private Browsing”; just to mention a few. Even though incognito browsing does have certain benefits, it still doesn’t fully maintain your privacy online. Anonymous search engines like “duckduckgo” and virtual private networks can help boost your online privacy; a story for another day.</p>
<p>In summary, this article highlights a few approaches to help protect your privacy online. It will be advisable to adopt these techniques together with other resilient techniques to enhance your online privacy.</p>
<h2 id="references">References:</h2>
<p>[1] <a href="https://websitesetup.org/news/internet-facts-stats/">https://websitesetup.org/news/internet-facts-stats/</a></p>
<p>[2] <a href="https://www.statista.com/statistics/292859/north-america-mobile-data-traffic/">https://www.statista.com/statistics/292859/north-america-mobile-data-traffic/</a></p>
]]></content>
        </item>
        
        <item>
            <title>How to Sign macOS PKG Files for Deployment</title>
            <link>https://sperixlabs.org/post/2022/02/how-to-sign-macos-pkg-files-for-deployment/</link>
            <pubDate>Wed, 02 Feb 2022 09:36:53 +0000</pubDate>
            
            <guid>https://sperixlabs.org/post/2022/02/how-to-sign-macos-pkg-files-for-deployment/</guid>
            <description>&lt;p&gt;Signing a package is a multi-step process.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Generate a signing request.&lt;/li&gt;
&lt;li&gt;Generate Developer ID Installer certificate.&lt;/li&gt;
&lt;li&gt;Sign the macOS PKG file.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;steps-to-generate-a-signing-request&#34;&gt;Steps to Generate a Signing Request&lt;/h3&gt;
&lt;p&gt;For generating a certificate, first of all you require a Certificate Signing Request (CSR) file.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open “&lt;strong&gt;Keychain Access&lt;/strong&gt;” program within your macOS device.&lt;/li&gt;
&lt;li&gt;Click on Keychain Access appearing on the top menu bar.&lt;/li&gt;
&lt;li&gt;Go to &lt;strong&gt;Certificate Assistant&lt;/strong&gt; &amp;gt; &lt;strong&gt;Request a Certificate From a Certificate Authority&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Add your email address in the User Email Address field, and name in the Common Name field. Leave the CA Email Address field blank.&lt;/li&gt;
&lt;li&gt;Under the Request is option, click Saved to Disc.&lt;/li&gt;
&lt;li&gt;Click Continue.&lt;/li&gt;
&lt;li&gt;Specify the location on the device where the .csr file is to be saved and click Save.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The signing request will be saved to your machine in the specified location. This file is required to generate the “&lt;strong&gt;Developer ID Installer&lt;/strong&gt;” certificate.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>Signing a package is a multi-step process.</p>
<ol>
<li>Generate a signing request.</li>
<li>Generate Developer ID Installer certificate.</li>
<li>Sign the macOS PKG file.</li>
</ol>
<h3 id="steps-to-generate-a-signing-request">Steps to Generate a Signing Request</h3>
<p>For generating a certificate, first of all you require a Certificate Signing Request (CSR) file.</p>
<ol>
<li>Open “<strong>Keychain Access</strong>” program within your macOS device.</li>
<li>Click on Keychain Access appearing on the top menu bar.</li>
<li>Go to <strong>Certificate Assistant</strong> &gt; <strong>Request a Certificate From a Certificate Authority</strong>.</li>
<li>Add your email address in the User Email Address field, and name in the Common Name field. Leave the CA Email Address field blank.</li>
<li>Under the Request is option, click Saved to Disc.</li>
<li>Click Continue.</li>
<li>Specify the location on the device where the .csr file is to be saved and click Save.</li>
</ol>
<p>The signing request will be saved to your machine in the specified location. This file is required to generate the “<strong>Developer ID Installer</strong>” certificate.</p>
<h3 id="steps-to-generate-developer-id-installer-certificate">Steps to Generate Developer ID Installer Certificate</h3>
<p>To generate the certificate:</p>
<ol>
<li>Go to <strong>Apple Developer Portal</strong>. Click on <strong>Accounts</strong>.</li>
<li>Either create a new account or sign in using an existing account.</li>
<li>Click on <strong>Certificates</strong> &gt; <strong>IDs</strong> &gt; <strong>Profiles</strong>.</li>
<li>Click on <strong>Certificates +</strong> and select <strong>Developer ID Installer</strong>.</li>
<li>Upload the Certificate Signing Request which was downloaded in the above step.</li>
<li>The Developer ID Installer certificate will be generated. Download the certificate and install it on your macOS device to sign the packages.</li>
</ol>
<h3 id="steps-to-build-and-sign-a-macos-pkg-file">Steps to Build and Sign a macOS PKG file</h3>
<p>To build and sign a macOS PKG file for a third-party app,</p>
<ol>
<li>Install the app on the device.</li>
<li>Open &ldquo;<strong>Terminal</strong>&rdquo;.</li>
<li>Build the .pkg file using the pkgbuild command.</li>
</ol>
<pre tabindex="0"><code>pkgbuild --component /path_to_installed_app/macapp.app      --install-location /Applications   --sign &#34;Developer ID Installer: *******&#34;       /path_to_saved_package/packagename.pkg
</code></pre><p>Here, the quoted text refers to the name of your certificate. The two arguments specify the location of the already installed .app file (/path_to_installed_app/macapp.app) and the location of the newly generated .pkg file (/path_to_saved_package/packagename.pkg), respectively.</p>
<ol start="4">
<li>Sign the .pkg file using the productbuild command.</li>
</ol>
<pre tabindex="0"><code>productbuild --package /path_to_saved_package/packagename.pkg       --content /path_to_app/         --sign &#34;Developer ID Installer: *******&#34;       /path_to_signed_pkg/signed.pkg
</code></pre><p>Here, the quoted text refers to the name of the certificate. The two arguments specify the location of the newly generated .pkg file (/path_to_saved_package/packagename.pkg) and the location of the signed .pkg file (/path_to_signed_pkg/signed.pkg), respectively.</p>
<h3 id="steps-to-sign-macos-pkg-files">Steps to sign macOS PKG files</h3>
<p>To sign a macOS PKG file,</p>
<ol>
<li>Open “<strong>Keychain Access</strong>” within the Mac and locate the certificate. The name of the certificate should be of the format: Developer ID Installer: Apple account name (serial number).</li>
<li>Open “<strong>Terminal</strong>”. The command to sign the package should look something like this:</li>
</ol>
<pre tabindex="0"><code>productsign -sign “Developer ID Installer: Your Apple Account Name (**********)” ~/Desktop/example.pkg ~/Desktop/signed-example.pkg
</code></pre><p>Here, the quoted text following the –sign tag refers to the name of your certificate. The two arguments, following the name of the certificate, refer to the current location of the unsigned package (/Desktop/example.pkg) and the location of the signed package (/Desktop/signed-example.pkg), respectively.</p>
<p>The signed certificate gets stored in the destination path specified in the command. Now you can upload it to the app inventory.</p>
<h3 id="references">References</h3>
<ol>
<li><a href="https://www.hexnode.com/mobile-device-management/help/how-to-sign-macos-pkg-files-for-deployment-with-hexnode-mdm/">https://www.hexnode.com/mobile-device-management/help/how-to-sign-macos-pkg-files-for-deployment-with-hexnode-mdm/</a></li>
</ol>
]]></content>
        </item>
        
        <item>
            <title>Possible Implementation Flaws in Mobile Applications: A Security Audit of a  Mobile Application</title>
            <link>https://sperixlabs.org/post/2021/01/possible-implementation-flaws-in-mobile-applications-a-security-audit-of-a-mobile-application/</link>
            <pubDate>Sun, 10 Jan 2021 17:21:02 +0000</pubDate>
            
            <guid>https://sperixlabs.org/post/2021/01/possible-implementation-flaws-in-mobile-applications-a-security-audit-of-a-mobile-application/</guid>
            <description>&lt;p&gt;This research presents a security flaw in a mobile application (both iOS and Android). The platform used for the assessment was iOS. Both platforms (iOS and Android) are affected by this flaw due the fact that they were built using a cross-platform framework (ionic).&lt;/p&gt;
&lt;h3 id=&#34;technical-details&#34;&gt;Technical Details&lt;/h3&gt;


&lt;p&gt;&lt;/p&gt;
&lt;a href=&#34;https://www.researchgate.net/publication/348844973_Possible_Implementation_Flaws_in_Mobile_Applications_A_Security_Audit_of_a_Mobile_Application&#34; target=&#34;_blank&#34;&gt;Details&lt;/a&gt;</description>
            <content type="html"><![CDATA[<p>This research presents a security flaw in a mobile application (both iOS and Android). The platform used for the assessment was iOS. Both platforms (iOS and Android) are affected by this flaw due the fact that they were built using a cross-platform framework (ionic).</p>
<h3 id="technical-details">Technical Details</h3>


<p></p>
<a href="https://www.researchgate.net/publication/348844973_Possible_Implementation_Flaws_in_Mobile_Applications_A_Security_Audit_of_a_Mobile_Application" target="_blank">Details</a>


]]></content>
        </item>
        
        <item>
            <title>Unauthorised User Account Access on iRokoTV Platform</title>
            <link>https://sperixlabs.org/post/2020/11/unauthorised-user-account-access-on-irokotv-platform/</link>
            <pubDate>Mon, 30 Nov 2020 17:15:25 +0000</pubDate>
            
            <guid>https://sperixlabs.org/post/2020/11/unauthorised-user-account-access-on-irokotv-platform/</guid>
            <description>&lt;p&gt;This research presents a flaw in user authentication that enables an unauthorised user to enumerate valid user accounts on the iRokoTV client applications (mobile and web) and also crack a person’s pin code.
The security analysis was done on the iOS platform; the flaw translates to other platforms (android and web).&lt;/p&gt;
&lt;h3 id=&#34;details-of-the-flaw&#34;&gt;Details of the Flaw&lt;/h3&gt;
&lt;p&gt;The iRokoTV iOS application (version 1.7.12) presents a user with the option to sign up or log in as an existing user. When a user signs up, a 4 digit verification code is sent to the user’s number. Upon verifying, the user is made to create a 4 digit pin code that will be used in accessing the platform; together with his phone number ( as shown below).
&lt;img src=&#34;https://sperixlabs.org/img/itv/login.jpg&#34; alt=&#34;Verification code&#34;&gt;&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>This research presents a flaw in user authentication that enables an unauthorised user to enumerate valid user accounts on the iRokoTV client applications (mobile and web) and also crack a person’s pin code.
The security analysis was done on the iOS platform; the flaw translates to other platforms (android and web).</p>
<h3 id="details-of-the-flaw">Details of the Flaw</h3>
<p>The iRokoTV iOS application (version 1.7.12) presents a user with the option to sign up or log in as an existing user. When a user signs up, a 4 digit verification code is sent to the user’s number. Upon verifying, the user is made to create a 4 digit pin code that will be used in accessing the platform; together with his phone number ( as shown below).
<img src="/img/itv/login.jpg" alt="Verification code"></p>
<p>In signing up as a user, the mobile client makes a post request to <strong>v3-api.iRokoTV.com</strong> with the URI <strong>/v2/user/[user’s phone number]</strong>; as shown in the example below:
<img src="/img/itv/signup.jpg" alt="Sign up"></p>
<p>If the user is new, a verification code is sent to the person after which he continues to set his default pin code for accessing the platform. A sample response for a new user is shown below:
<img src="/img/itv/r1.jpg" alt="Verify"></p>
<p>If the user already exists, a sample response to the request is shown below:
<img src="/img/itv/r2.jpg" alt="Verify">
This endpoint API can be leveraged on by an unauthorised user to enumerate accounts that exist on the platform.</p>
<p>The request sent to the API endpoint for an existing user includes the <strong>device_id</strong>, <strong>credential_type</strong>, <strong>pin</strong>, <strong>phone</strong>, <strong>scope</strong> and <strong>device_name</strong>.
<img src="/img/itv/vpin.jpg" alt="Login"></p>
<p>If the pin sent is incorrect, a response with an error code of 401 is thrown (shown below).
<img src="/img/itv/vu.jpg" alt="Login"></p>
<p>A correct pin returns a response that contains a token (JWT) together with the user’s id.
<img src="/img/itv/va.jpg" alt="Login"></p>
<p>With the use of 4 digit pin codes, a user’s pin code will definitely be in <strong>0000 - 9999</strong>; hence an unauthorised person can replay the requests by changing the pin code till the correct pin is found (response with a JWT).</p>
<p>A proof-of-concept (PoC) is shown below:
<img src="/img/itv/poc.jpg" alt="poc"></p>
]]></content>
        </item>
        
        <item>
            <title>GhanaPostGPS REST API</title>
            <link>https://sperixlabs.org/post/2020/10/ghanapostgps-rest-api/</link>
            <pubDate>Mon, 05 Oct 2020 17:07:23 +0000</pubDate>
            
            <guid>https://sperixlabs.org/post/2020/10/ghanapostgps-rest-api/</guid>
            <description>&lt;h3 id=&#34;whitepaper&#34;&gt;Whitepaper&lt;/h3&gt;


&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;http://dx.doi.org/10.13140/RG.2.2.24355.27684/2&#34;&gt;Read Now&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;


&lt;h3 id=&#34;api-details&#34;&gt;API Details&lt;/h3&gt;


&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/jayluxferro/GhanaPostGPS-REST-API&#34;&gt;Read Now&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description>
            <content type="html"><![CDATA[<h3 id="whitepaper">Whitepaper</h3>


<p><a target="_blank" href="http://dx.doi.org/10.13140/RG.2.2.24355.27684/2">Read Now</a></p>
<p></p>


<h3 id="api-details">API Details</h3>


<p><a target="_blank" href="https://github.com/jayluxferro/GhanaPostGPS-REST-API">Read Now</a></p>
<p></p>


]]></content>
        </item>
        
        <item>
            <title>Reverse Engineering GhanaPostGPS Mobile Application to Create an API for Local Developers</title>
            <link>https://sperixlabs.org/post/2020/09/reverse-engineering-ghanapostgps-mobile-application-to-create-an-api-for-local-developers/</link>
            <pubDate>Sat, 05 Sep 2020 17:07:23 +0000</pubDate>
            
            <guid>https://sperixlabs.org/post/2020/09/reverse-engineering-ghanapostgps-mobile-application-to-create-an-api-for-local-developers/</guid>
            <description>&lt;p&gt;GhanaPostGPS is Ghana&amp;rsquo;s official digital addressing system which ensures that all locations in the country are addressed. Each location has a unique address which is a composite of the postcode (region, district &amp;amp; area code). Its core functionality is to translate a user&amp;rsquo;s GPS location coordinates to a user-friendly digital address. Those who developed the addressing system did not make available a public application programming interface (API) that can be used by local developers in building technological solutions. This research presents how the digital addressing system&amp;rsquo;s mobile application was reversed engineered to create a publicly available API (&lt;strong&gt;&lt;a href=&#34;https://github.com/jayluxferro/GhanaPostGPS-REST-API&#34;&gt;https://github.com/jayluxferro/GhanaPostGPS-REST-API&lt;/a&gt;&lt;/strong&gt;).&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>GhanaPostGPS is Ghana&rsquo;s official digital addressing system which ensures that all locations in the country are addressed. Each location has a unique address which is a composite of the postcode (region, district &amp; area code). Its core functionality is to translate a user&rsquo;s GPS location coordinates to a user-friendly digital address. Those who developed the addressing system did not make available a public application programming interface (API) that can be used by local developers in building technological solutions. This research presents how the digital addressing system&rsquo;s mobile application was reversed engineered to create a publicly available API (<strong><a href="https://github.com/jayluxferro/GhanaPostGPS-REST-API">https://github.com/jayluxferro/GhanaPostGPS-REST-API</a></strong>).</p>
<h3 id="introduction">Introduction</h3>
<p>Digital addressing is a modern and revolutionary approach to allocating addresses within a defined space with the aid of the latest geocoding technology. Ghana, in its effort of enhancing digitization, has introduced this digital addressing system (GhanaPostGPS) which covers every inch of the country and ensures that all locations in the country are addressed [1]. With GhanaPostGPS, every location has a unique digital address. It is rather unfortunate that digital solutions built in the country do not make use of this addressing system since there isn&rsquo;t a publicly available API; hence the essence of this research.</p>
<h3 id="how-does-the-ghanapostgps-application-work">How does the GhanaPostGPS Application work?</h3>
<p>The communication process follows a client-server architecture (as shown in the figure below). The application runs on both mobile (iOS and Android) and web platforms.</p>
<!-- raw HTML omitted -->
<p>When a user launches the application, he has the option to sign in (if he&rsquo;s an existing using), sign up as a new user or use the app without registering (anonymous account). Phone numbers are used in signing on to the platform and verified through a short message service (SMS). When a user signs in successfully, he has the ability to register/generate a digital address and also query for location details (either by name or by address). The mobile applications (iOS and Android) have panic buttons which help users in easy communication with the Police, Fire and Ambulance services in the event of an imminent danger. This is made possible due to the integration of a session initiation protocol <a href="2">SIP</a> API in the mobile clients.</p>
<h3 id="end-to-end--encryption-e2ee">End-to-End  Encryption (E2EE)</h3>
<p>Communication between the clients and the web service uses asymmetric encryption. When the application is launched for the first time, the mobile client connects to the endpoint <strong><a href="https://api.ghanapostgps.com/GetAPIData.aspx">https://api.ghanapostgps.com/GetAPIData.aspx</a></strong> to get the server&rsquo;s public key (a sample is shown below).</p>
<pre tabindex="0"><code> -----BEGIN PUBLIC KEY-----
 MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlO6O2gAGlT4+YP+evP9c
 9qynWdv/qIAx5Jc4kp+UTmrsn8wJn4bD9H8rynSvepH0navZiDwYvioAPbIcR6cG
 MMFnP5/2wN9zrBFZtnofcpSrk4q9/GRHj4IuHheQjvMiislrRdIEgqxjMQ1aaiG7
 +MeoeQuHz08O+aecHuMtJTXzcIQDqkMHkeA/yt/ge/ASDqSRn0Hdpa/4OA/ZtVpT
 8Ph2lLgMv+O5Iz11UIwSqyewSdAZzX0H4jUPKCCfnhgWsS+7WJU6KufYptvl0/P4
 NSdJKSdYg/y44pWiPxlgMUf6s1nOXJJ0vSi0zrDFjx+y+GD2h+dMBRWe9nym+NmJ
 1QIDAQAB
 -----END PUBLIC KEY-----
</code></pre><p>Upon getting the public key, the mobile client generates a random string (using the method below) of length 16 characters.</p>
<pre tabindex="0"><code>  private static final String ALLOWED_CHARACTERS = &#34;0123456789qwertyuiopasdfghjklzxcvbnm!@$#^&amp;*()&#34;;
  public static String getRandomString(int i) {
   Random random = new Random();
   StringBuilder sb = new StringBuilder(i);
   for (int i2 = 0; i2 &lt; i; i2++) {
    sb.append(ALLOWED_CHARACTERS.charAt(random.nextInt(ALLOWED_CHARACTERS.length())));
   }
   return sb.toString();
  }
</code></pre><p>The generated random string becomes a symmetric key that is used in the encryption and decryption of data between the client and the server. The client sends the generated random string (16 bytes) together with a universally unique identifier (UUID) and the operating system&rsquo;s name (Android or iOS) to the server. This data is encrypted (using RSA) and encoded in base64 using the server&rsquo;s public key before it is sent. A sample is shown below:</p>
<pre tabindex="0"><code> TiJ/O4d2rFzaR046lLMYBJ6yU3e+vqDjkrYNVrhFm9K+jLXbMzTB6xAdtz/f/Rx+Nyw5ZB64ok3v8MRJq9jf8NwpYeFQZUGR0UzMmg
 EgYR3MlAgFz7vRkQt0GGt/BwEaK081PJKxnqVqqXjr3NqNbfJr3GDDkfIfVKT4xOZRZbcCFdPpDD6Ofb5RD7mL8LQLvwOPOUVq3+/
 MlNDVhxOD4Osq0PqWh8CvrZY8y2Q1sDJYDTUsKFn0ChxFNtJhso1ImtqLBkNFZbrWUXn6NbHV+p3HBJVeZNcJxlWPPHaBh8Ip7
 qPOnnMww4ZXWC88/tWTlScFemwTcyGpT58T9rMySA==
</code></pre><p>The server responds by sending a base64 encoded data which can be decrypted using the client&rsquo;s symmetric key. The decrypted data is shown below.</p>
<pre tabindex="0"><code> PlsUseYourOwnKey||https://api.ghanapostgps.com/PublicGPGPSAPI.aspx
</code></pre><p>The decrypted data contained a new endpoint <strong><a href="https://api.ghanapostgps.com/PublicGPGPSAPI.aspx">https://api.ghanapostgps.com/PublicGPGPSAPI.aspx</a></strong> through which all subsequent communications were made. The symmetric encryption used is advanced encryption standard (AES); as shown below.</p>
<pre tabindex="0"><code> // Java, AES CBC Encryption
 package com.ghanapostgps.ghanapost.util;

 import android.util.Base64;
 import javax.crypto.Cipher;
 import javax.crypto.spec.IvParameterSpec;
 import javax.crypto.spec.SecretKeySpec;
 import org.apache.commons.compress.utils.CharsetNames;

 public class AESenc {
  private String key = &#34;&#34;;

  public AESenc(String str) {
   this.key = str;
  }

  public String encrypt(String str) {
   try {
    byte[] bytes = Utils.getRandomString(16).getBytes(CharsetNames.UTF_8);
    IvParameterSpec ivParameterSpec = new IvParameterSpec(bytes);
    SecretKeySpec secretKeySpec = new SecretKeySpec(this.key.getBytes(CharsetNames.UTF_8), &#34;AES&#34;);
    Cipher instance = Cipher.getInstance(&#34;AES/CBC/PKCS7PADDING&#34;);
    instance.init(1, secretKeySpec, ivParameterSpec);
    byte[] doFinal = instance.doFinal(str.getBytes());
    byte[] bArr = new byte[(bytes.length + doFinal.length)];
    System.arraycopy(bytes, 0, bArr, 0, bytes.length);
    System.arraycopy(doFinal, 0, bArr, 16, doFinal.length);
    return Base64.encodeToString(bArr, 0);
   } catch (Exception e) {
    e.printStackTrace();
    return null;
   }
  }

  public String decrypt(String str) {
   try {
    byte[] decode = Base64.decode(str, 0);
    int length = decode.length - 16;
    byte[] bArr = new byte[length];
    byte[] bArr2 = new byte[16];
    System.arraycopy(decode, 0, bArr2, 0, 16);
    System.arraycopy(decode, 16, bArr, 0, length);
    IvParameterSpec ivParameterSpec = new IvParameterSpec(bArr2);
    SecretKeySpec secretKeySpec = new SecretKeySpec(this.key.getBytes(CharsetNames.UTF_8), &#34;AES&#34;);
    Cipher instance = Cipher.getInstance(&#34;AES/CBC/PKCS5PADDING&#34;);
    instance.init(2, secretKeySpec, ivParameterSpec);
    return new String(instance.doFinal(bArr));
   } catch (Exception e) {
    e.printStackTrace();
    return null;
   }
  }
 }
</code></pre><p>From the AES encryption/decryption method, the initializing vector (IV) is the first 16 bytes of the base64 decoded data. When the client is encrypting a piece of data to be sent to the server, it generates a 16 byte string based on the <strong>getRandomString</strong> method; this forms the first 16 bytes of the data to be sent. The actual data is encrypted using the symmetric key and the randomly generated 16 bytes string (the IV). Afterwards, the data is base64 encoded before it is sent.</p>
<p>The client decrypts the information received from the server by decoding the base64 string. It then extracts the first 16 bytes as the IV. The remaining bytes of data is decrypted using the symmetric key and the IV.</p>
<p>The same E2EE mechanism was implemented in Golang which was used in developing the public API. Details of the implementation can be found using <strong><a href="https://github.com/jayluxferro/ghanapostgps">https://github.com/jayluxferro/ghanapostgps</a></strong>.</p>
<h3 id="references">References</h3>
<ol>
<li>GhanaPostGPS, <a href="https://ghanapostgps.com">https://ghanapostgps.com</a>.</li>
<li>Session Initiation Protocol (SIP), <a href="https://tools.ietf.org/html/rfc3261">https://tools.ietf.org/html/rfc3261</a>.</li>
<li>Universally Unique IDentifier (UUID), <a href="https://tools.ietf.org/html/rfc4122">https://tools.ietf.org/html/rfc4122</a>.</li>
</ol>
]]></content>
        </item>
        
        <item>
            <title>A Security Analysis of WhatsApp iOS Mobile Application</title>
            <link>https://sperixlabs.org/post/2020/06/a-security-analysis-of-whatsapp-ios-mobile-application/</link>
            <pubDate>Wed, 17 Jun 2020 17:00:58 +0000</pubDate>
            
            <guid>https://sperixlabs.org/post/2020/06/a-security-analysis-of-whatsapp-ios-mobile-application/</guid>
            <description>&lt;p&gt;This research presents an investigation into  WhatsApp&amp;rsquo;s on-device data storage on iOS. WhatsApp is one of the most widely used messaging application and hence it is required that a secured on-device storage mechanism be implemented to complement Apple&amp;rsquo;s security measures for their devices. This will help protect a user&amp;rsquo;s data  in instances where his/her device is compromised physically. The research presents a security analysis on the storage format of data used by WhatsApp on end-users&amp;rsquo; devices.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>This research presents an investigation into  WhatsApp&rsquo;s on-device data storage on iOS. WhatsApp is one of the most widely used messaging application and hence it is required that a secured on-device storage mechanism be implemented to complement Apple&rsquo;s security measures for their devices. This will help protect a user&rsquo;s data  in instances where his/her device is compromised physically. The research presents a security analysis on the storage format of data used by WhatsApp on end-users&rsquo; devices.</p>
<h3 id="introduction">Introduction</h3>
<p>The team behind <strong>Uc0ver</strong> [1] released an iOS 11.0 - 13.5.5 jailbreak for all iPhones and iPads. This is the first iOS jailbreak in years to use a 0-day exploit as previous tools relied on a 1-day exploit or other security lapses from Apple&rsquo;s part [2].</p>
<p>&ldquo;<strong>Jailbreaking</strong>&rdquo; is a privilege escalation of an Apple device for the purpose of removing software restrictions imposed by Apple on iOS. It permits root access in Apple&rsquo;s mobile operating system, allowing the installation of software that is unavailable through the official Apple App Store. Apple states that Jailbreaking an Apple device eliminates security layers designed to protect one&rsquo;s personal information [3].</p>
<p>This research explores how data is stored securely by <strong>WhatsApp Messenger</strong> (a cross-platform messaging and Voice-over-IP service) on an iPhone.</p>
<h3 id="research--approach">Research  Approach</h3>
<p><strong>WhatsApp Messenger</strong>, or simply <strong>WhatsApp</strong> allows users to send text messages and voice messages, make voice and video calls, and share images, documents, user locations and other media. In January 2018, WhatsApp released a standalone business app targeted at small business owners, called <strong>WhatsApp Business</strong>, to allow companies to communicate with customers who use the standard WhatsApp client. This research does not explore on-device data security of the WhatsApp Business application.</p>
<p>The standard security mechanism put in place by Apple prevents unauthorized access to an application&rsquo;s data folder; which is circumvented through jailbreak.  This research uses an iPhone 7 for the security analysis. The security analysis focuses on only WhatsApp&rsquo;s on-device application data storage.</p>
<h3 id="security-analysis">Security Analysis</h3>
<p>The WhatsApp version used in this research was <strong>2.20.52.7</strong>. A brief content of the application&rsquo;s <strong>info.plist</strong> is shown in Fig. 1.
<img src="/img/wa/infolist.png" alt="Info.plist Contents">
<strong>Fig. 1:</strong> Info.plist Contents <!-- raw HTML omitted --></p>
<p>The content&rsquo;s of WhatsApp&rsquo;s application folder is shown in Fig. 2.
<img src="/img/wa/1.png" alt="Contents of Application Data">
<strong>Fig. 2:</strong> Contents of Application Data <!-- raw HTML omitted --></p>
<p>The <strong>Biz</strong> folder contains an SQLite file; which stores the details of all WhatsApp Business clients that a user has in his/her contacts. Details of such clients are stored in plain text in the SQLite file as shown in Figs. 3, 4 and 5. This details include their business names, phone numbers, business addresses, business location cooordinates, email addresses etc.
<img src="/img/wa/wb3.png" alt="Details of WhatsApp Business Clients">
<strong>Fig. 3:</strong> Details of WhatsApp Business Clients <!-- raw HTML omitted --></p>
<p><img src="/img/wa/wb4.png" alt="Details of WhatsApp Business Clients">
<strong>Fig. 4:</strong> Details of WhatsApp Business Clients <!-- raw HTML omitted --></p>
<p><img src="/img/wa/wb5.png" alt="Details of WhatsApp Business Clients">
<strong>Fig. 5:</strong> Details of WhatsApp Business Clients <!-- raw HTML omitted --></p>
<p>It was realized that WhatsApp filters certain keywords from all messages sent/received. This is stored in an SQLite file called &ldquo;<strong>ChatSearchV5f</strong>&rdquo;. A sample content is shown in Fig. 6. As at the time of writing, it is unknown what such information is used for.
<img src="/img/wa/fts.png" alt="Chat Search">
<strong>Fig. 6:</strong> Chat Search <!-- raw HTML omitted --></p>
<p>&lsquo;<strong>Status</strong>&rsquo; images and videos are stored in the media library folder. The images have a <strong>.thumb</strong> extension whereas the videos have no file extension. It was realized that the streaming files are <strong>mp4</strong> encoded (shown in Fig. 7). Adding <!-- raw HTML omitted -->.mp4<!-- raw HTML omitted --> as an extension to the streaming files enables you to play them.
<img src="/img/wa/video.png" alt="Video Extension">
<strong>Fig. 7:</strong> Video Extension <!-- raw HTML omitted --></p>
<p>Chat messages are stored in &ldquo;<strong>CallHistory.sqlite</strong>&rdquo;. This SQLite file stores names of groups a user belongs to (shown in Fig. 8), messages sent to and received in the group, messages sent/received from other users (shown in Fig. 9) and links to encrypted images and videos sent/received (shown in Fig. 10 and 11).
<img src="/img/wa/ch1.png" alt="User&rsquo;s WhatsApp Groups">
<strong>Fig. 8:</strong> User&rsquo;s WhatsApp Groups <!-- raw HTML omitted --></p>
<p><img src="/img/wa/ch2.png" alt="Links to Encrypted Shared or Received Images/Documents">
<strong>Fig. 9:</strong> Links to Encrypted Shared or Received Images/Documents <!-- raw HTML omitted --></p>
<p><img src="/img/wa/ch3.png" alt="Chat Messages">
<strong>Fig. 10:</strong> Chat Messages <!-- raw HTML omitted --></p>
<p><img src="/img/wa/ch4.png" alt="Push Names of WhatsApp Contacts">
<strong>Fig. 11:</strong> Push Names of WhatsApp Contacts <!-- raw HTML omitted --></p>
<p>Audio files (sent/received) are stored in <!-- raw HTML omitted -->.opus<!-- raw HTML omitted --> extension (shown in Fig. 12).
<img src="/img/wa/audio.png" alt="Audio File(s)">
<strong>Fig. 12:</strong> Audio Files(s) <!-- raw HTML omitted --></p>
<p>WhatsApp has a privacy consent that enables them to upload all contacts on a user&rsquo;s phone to their server. This is shown in Fig. 13.
<img src="/img/wa/ct.png" alt="Privacy Consent to upload contacts to WhatsApp&rsquo;s Server">
<strong>Fig. 13:</strong> Privacy Consent to upload contacts to WhatsApp&rsquo;s Server <!-- raw HTML omitted --></p>
<p>A copy of all contacts on a user&rsquo;s phone is stored in &ldquo;<strong>ContactsV2.sqlite</strong>&rdquo;. This is shown in Fig. 14 and 15.
<img src="/img/wa/ct1.png" alt="User&rsquo;s Contacts collected and uploaded to WhatsApp Server">
<strong>Fig. 14:</strong> User&rsquo;s contacts collected and uploaded to WhatsApp&rsquo;s Server <!-- raw HTML omitted --></p>
<p><img src="/img/wa/ct2.png" alt="User&rsquo;s Contacts collected and uploaded to WhatsApp Server">
<strong>Fig. 15:</strong> User&rsquo;s contacts collected and uploaded to WhatsApp&rsquo;s Server <!-- raw HTML omitted --></p>
<p>From the above security analysis, it can be observed that most of the data stored on the device is in plain text. Hence, it can be inferred that WhatsApp does not implement a secured on-device data storage mechanism.</p>
<h3 id="conclusion-and-recommendation">Conclusion and Recommendation</h3>
<p>This research analyzes how WhatsApp secures on-device data of its users. It has been demonstrated how WhatsApp&rsquo;s data is not securely stored  on end-users&rsquo; devices; hence can be retrieved by an attacker who has physical access to the device.</p>
<p>It is recommended that WhatsApp implements a secure data storage mechanism for its users to protect them against instances where the physical device is compromised.</p>
<h3 id="reference-list">Reference List</h3>
<ol>
<li>
<p>unc0ver, <a href="https://unc0ver.dev">https://unc0ver.dev</a>.</p>
</li>
<li>
<p>How to Jailbreak iOS 13.5 on iPhone or iPad using Unc0ver Jailbreak, [Accessed Online] <a href="https://www.iphonehacks.com/2020/05/how-jailbreak-ios-13-iphone.html">https://www.iphonehacks.com/2020/05/how-jailbreak-ios-13-iphone.html</a>.</p>
</li>
<li>
<p>Unauthorized modification of iOS, <a href="https://support.apple.com/en-us/HT201954">https://support.apple.com/en-us/HT201954</a>, 2020.</p>
</li>
</ol>
]]></content>
        </item>
        
        <item>
            <title>Security Flaw in the KNUST AIM Application</title>
            <link>https://sperixlabs.org/post/2019/09/security-flaw-in-the-knust-aim-application/</link>
            <pubDate>Fri, 20 Sep 2019 23:12:53 +0000</pubDate>
            
            <guid>https://sperixlabs.org/post/2019/09/security-flaw-in-the-knust-aim-application/</guid>
            <description>&lt;p&gt;The Academic Information Manager (AIM) is the official mobile application for KNUST students. The key functions of AIM include: course registration, checking of results, editing of personal records, access to news from the University&amp;rsquo;s website, notifications and checking of fees. This research presents a flaw in the bearer authorization token implementation in the REST API for the AIM app. This authorization token is not validated per user basis, hence can be exploited to access or modify any student&amp;rsquo;s information through the REST API.


&lt;br/&gt;
&lt;br/&gt;
&lt;img src=&#34;https://sperixlabs.org/img/knustaim/logo.jpg&#34; style=&#34;width: 450px;&#34;/&gt;
&lt;br/&gt;

&lt;/p&gt;</description>
            <content type="html"><![CDATA[<p>The Academic Information Manager (AIM) is the official mobile application for KNUST students. The key functions of AIM include: course registration, checking of results, editing of personal records, access to news from the University&rsquo;s website, notifications and checking of fees. This research presents a flaw in the bearer authorization token implementation in the REST API for the AIM app. This authorization token is not validated per user basis, hence can be exploited to access or modify any student&rsquo;s information through the REST API.


<br/>
<br/>
<img src="/img/knustaim/logo.jpg" style="width: 450px;"/>
<br/>

</p>
<h3 id="security-flaw">Security Flaw</h3>
<p>This section explains the details of the security flaw.</p>
<h4 id="application-version">Application Version</h4>
<p><strong>Operating System</strong>: Android 
<br/>

<strong>Version</strong>: 1.0.13.2
<br/>

<strong>Release Date</strong>: 18th September, 2018 
<br/>



<p></p>
<img src="/img/knustaim/signature.png" style=""/>

</p>
<p>The REST API base url for the AIM application is</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>https://apps.knust.edu.gh/StudentAPI/
</span></span></code></pre></div><p>This is shown below.


<p></p>
<img src="/img/knustaim/url.png"/>

</p>
<p>The AIM REST API uses bearer token to allow access to the associated resources [1]. The implementation of the bearer token verification in the mobile application is shown below.


<p></p>
<img src="/img/knustaim/auth.png"/>

</p>
<p>The bearer token is generated when a user logs in with his reference number and password. The parameters for the REST API is shown below.


<p></p>
<img src="/img/knustaim/token.png"/>

</p>
<p>A sample C# implementation of the authentication request and the token generated are shown below.


<p></p>
<img src="/img/knustaim/loginCode.png"/><br/>
<img src="/img/knustaim/bearerToken.png"/>

</p>
<p>The bearer token is a very good security implementation. The problem lies in the fact that a valid bearer token of a particular student can be used to access or modify other students&rsquo; information once the reference number is known.</p>
<h3 id="references">References</h3>
<ol>
<li>RFC670, &ldquo;The OAuth 2.0 Authorization Framework: Bearer Token Usage&rdquo;, Internet Engineering Task Force (IETF), 2012.</li>
</ol>
]]></content>
        </item>
        
    </channel>
</rss>
